@using System.Xml;
@{
    ViewBag.Title = "能耗类型管理";
    XmlDocument xmlDoc = new XmlDocument();
    if (Model != null)
    {
        var powerList = (IList<EnergyMonitor.Models.LinqEntity.PowerClass>)Model;
        var sortedPowerList = powerList.OrderBy(x => x.PC_ID);
        XmlElement topUl = xmlDoc.CreateElement("ul");
        topUl.SetAttribute("class", "mktree");
        xmlDoc.AppendChild(topUl);
        foreach (var item in sortedPowerList)
        {
            XmlElement li = xmlDoc.CreateElement("li");
            li.SetAttribute("id", item.PC_ID);

            XmlElement span = xmlDoc.CreateElement("span");
            span.SetAttribute("class", "labelSpan");
            XmlElement subSpan = xmlDoc.CreateElement("span");
            subSpan.InnerText = item.PC_Name;
            span.AppendChild(subSpan);
            XmlElement imgAddSibling = xmlDoc.CreateElement("img");
            imgAddSibling.SetAttribute("class", "img-add-sibling");
            span.AppendChild(imgAddSibling);
            XmlElement imgAddSub = xmlDoc.CreateElement("img");
            imgAddSub.SetAttribute("class", "img-add-sub");
            span.AppendChild(imgAddSub);
            XmlElement imgRename = xmlDoc.CreateElement("img");
            imgRename.SetAttribute("class", "img-add-rename");
            span.AppendChild(imgRename);
            XmlElement imgRemove = xmlDoc.CreateElement("img");
            imgRemove.SetAttribute("class", "img-add-remove");
            span.AppendChild(imgRemove);
            li.AppendChild(span);

            int len = item.PC_ID.Length;
            if (len == 3)
            {
                topUl.AppendChild(li);
            }
            else
            {
                string parentID = item.PC_ID.Substring(0, len - 3);
                XmlNode parentLi = xmlDoc.SelectSingleNode("//li[@id='" + parentID + "'] ");
                XmlNode parentUl = parentLi.ChildNodes[1];

                if (parentUl != null)
                {
                    parentUl.AppendChild(li);
                }
                else
                {
                    parentUl = xmlDoc.CreateElement("ul");
                    parentUl.AppendChild(li);
                    parentLi.AppendChild(parentUl);
                }
            }
        }
    }
}
@section head{
    <link href="../../../../Content/css/mktree.css" rel="stylesheet" type="text/css" />

    <script src="../../../../Scripts/mktree.js" type="text/javascript"></script>
    <style type="text/css">
        .tip-div {clear:none; margin-left:20px; width:400px;}
        .status img {margin-right:10px;}
        .img-add-sibling {background:url(../../../../Content/images/img/icons/icon_powerfn.png) no-repeat 0px 0px;width:12px;height:16px; }
        .img-add-sub {background:url(../../../../Content/images/img/icons/icon_powerfn.png) no-repeat -16px 0px;width:12px;height:16px;}
        .img-add-rename {background:url(../../../../Content/images/img/icons/icon_powerfn.png) no-repeat -32px 0px;width:12px;height:16px;}
        .img-add-remove {background:url(../../../../Content/images/img/icons/icon_powerfn.png) no-repeat -48px 0px;width:12px;height:16px;}
        #powerTree{ margin:10px;}
        #powerTree input {margin-right:5px;}
        #powerTree .img-add-sibling {width:16px;}
        #powerTree .img-add-sub {width:16px;}
        #powerTree .img-add-rename {width:16px;}
        #powerTree .img-add-remove {width:16px;}
        /*#powerTree span.labelSpan{width:80%;display:-moz-inline-box;display:inline-blcok;border:1px red solid;}*/
        #powerTree span.labelSpan img {margin-left:10px; display:inline-block; visibility: hidden;}
        #powerTree span.labelSpan img:hover {outline:2px #EAEAEA solid;}
        #powerTree span.labelSpan:hover img {visibility: visible;}
        
    </style>
}
<div class="contentcontainer">
<div class="headings altheading"><h2>能耗类型管理</h2></div>
<div class="contentbox">
<div>
    <div class="status success tip-div left">
        <p>提示：点击能耗类型名称右边图标可以进行相关的操作！</p>
    </div>
    <div class="status success tip-div left">
        <ul>
            <li><img class="img-add-sibling" width="16" height="16"/> 增加兄弟类型</li>
            <li><img class="img-add-sub" width="16" height="16"/> 增加子类型</li>
            <li><img class="img-add-rename" width="16" height="16"/> 修改类型名称</li>
            <li><img class="img-add-remove" width="16" height="16"/> 删除类型</li>
        </ul>
    </div>
    <div class="clear"></div>
</div>


<div id="powerTree">
@Html.Raw(xmlDoc.OuterXml)
</div>
</div></div>
<script type="text/javascript">
    $(function () {
        function addSiblingPower(currentObj) {
            var lastLi = currentObj.parent().parent().parent().children(":last");
            if (lastLi.attr("id") != "") {
                var li = $("<li  class='liBullet'></li>");
                $("<span class='bullet'>&nbsp;</span>").appendTo(li);
                $("<input type='text'/>").appendTo(li);
                $("<input type='button' value='添加'/>").click(function () {
                    var addName = $(this).prev().val();
                    if ($.trim(addName) == "") {
                        alert("添加类型名称不能为空");
                        return;
                    }
                    if (queryPowerIsExist(addName)) {
                        alert("该能耗类型已经存在，请重新输入");
                        $(this).prev().val("");
                        $(this).prev().focus();
                        return;
                    } else {
                        var loadingImg = $('<span class="bullet">&nbsp;</span><img src="@Url.Content("~/Content/images/loading_small.gif")" alt="Loading"/>');
                        li.html(loadingImg);
                        var lastPowerID = li.prev().attr("id");
                        var lastPowerLen = lastPowerID.length;
                        var newPowerIDPrefix = lastPowerID.substr(0, lastPowerLen - 3);
                        var idInt = parseInt(lastPowerID.substr(lastPowerLen - 3), 10);
                        idInt++;
                        var newPowerIDSubffix = "";
                        if (idInt < 10) {
                            newPowerIDSubffix = "00" + idInt;
                        } else if (idInt < 100) {
                            newPowerIDSubffix = "0" + idInt;
                        } else {
                            newPowerIDSubffix = "" + idInt;
                        }
                        var newPowerID = newPowerIDPrefix + newPowerIDSubffix;
                        $.getJSON('@Url.Action("AddNewPowerAjax", "Information")', {
                            powerID: newPowerID,
                            powerName: addName
                        }, function (jsonData) {
                            if (jsonData == true) {
                                li.attr("id", newPowerID);
                                li.html("<span class='bullet'>&nbsp;</span>");
                                var labelSpan = $("<span class='labelSpan'></span>");
                                $("<span>" + addName + "</span>").appendTo(labelSpan);
                                $("<img class='img-add-sibling'/>").click(function () {
                                    addSiblingPower($(this));
                                }).appendTo(labelSpan);
                                $("<img class='img-add-sub'/>").click(function () {
                                    addSubPower($(this));
                                }).appendTo(labelSpan);
                                $("<img class='img-add-rename'/>").click(function () {
                                    renamePower($(this));
                                }).appendTo(labelSpan);
                                $("<img class='img-add-remove'/>").click(function () {
                                    removePower($(this));
                                }).appendTo(labelSpan);
                                li.append(labelSpan);
                            } else {
                                alert("增加失败，请检查您是否拥有权限或者网络有问题！");
                                li.remove();
                            }
                        });
                    }
                }).appendTo(li);
                $("<input type='button' value='取消'/>").click(function () {
                    li.remove();
                }).appendTo(li);
                lastLi.parent().append(li);
            } else {
                lastLi.children("input:first").focus();
            }
        }
        function addSubPower(currentObj) {
            var currentLi = currentObj.parent().parent();
            currentLi.attr("class", "liOpen");
            if (currentLi.children(":last").is("ul")) {
                var subUl = currentLi.children(":last");
                if (subUl.children(":last").attr("id") != "") {
                    var li = $("<li  class='liBullet'></li>");
                    $("<span class='bullet'>&nbsp;</span>").appendTo(li);
                    $("<input type='text'/>").appendTo(li);
                    $("<input type='button' value='添加'/>").click(function () {
                        var addName = $(this).prev().val();
                        if ($.trim(addName) == "") {
                            alert("添加类型名称不能为空");
                            return;
                        }
                        if (queryPowerIsExist(addName)) {
                            alert("该能耗类型已经存在，请重新输入");
                            $(this).prev().val("");
                            $(this).prev().focus();
                            return;
                        } else {
                            var loadingImg = $('<span class="bullet">&nbsp;</span><img src="@Url.Content("~/Content/images/loading_small.gif")" alt="Loading"/>');
                            li.html(loadingImg);
                            var lastPowerID = li.prev().attr("id");
                            var lastPowerLen = lastPowerID.length;
                            var newPowerIDPrefix = lastPowerID.substr(0, lastPowerLen - 3);
                            var idInt = parseInt(lastPowerID.substr(lastPowerLen - 3), 10);
                            idInt++;
                            var newPowerIDSubffix = "";
                            if (idInt < 10) {
                                newPowerIDSubffix = "00" + idInt;
                            } else if (idInt < 100) {
                                newPowerIDSubffix = "0" + idInt;
                            } else {
                                newPowerIDSubffix = "" + idInt;
                            }
                            var newPowerID = newPowerIDPrefix + newPowerIDSubffix;
                            $.getJSON('@Url.Action("AddNewPowerAjax", "Information")', {
                                powerID: newPowerID,
                                powerName: addName
                            }, function (jsonData) {
                                if (jsonData == true) {
                                    li.attr("id", newPowerID);
                                    li.html("<span class='bullet'>&nbsp;</span>");
                                    var labelSpan = $("<span class='labelSpan'></span>");
                                    $("<span>" + addName + "</span>").appendTo(labelSpan);
                                    $("<img class='img-add-sibling'/>").click(function () {
                                        addSiblingPower($(this));
                                    }).appendTo(labelSpan);
                                    $("<img class='img-add-sub'/>").click(function () {
                                        addSubPower($(this));
                                    }).appendTo(labelSpan);
                                    $("<img class='img-add-rename'/>").click(function () {
                                        renamePower($(this));
                                    }).appendTo(labelSpan);
                                    $("<img class='img-add-remove'/>").click(function () {
                                        removePower($(this));
                                    }).appendTo(labelSpan);
                                    li.append(labelSpan);
                                } else {
                                    alert("增加失败，请检查您是否拥有权限或者网络有问题！");
                                    li.remove();
                                }
                            });
                        }
                    }).appendTo(li);
                    $("<input type='button' value='取消'/>").click(function () {
                        li.remove();
                    }).appendTo(li);
                    li.appendTo(subUl);
                } else {
                    subUl.children(":last").children("input:first").focus();
                }
            } else {
                var ul = $("<ul></ul>");
                var li = $("<li  class='liBullet'></li>");
                $("<span class='bullet'>&nbsp;</span>").appendTo(li);
                $("<input type='text'/>").appendTo(li);
                $("<input type='button' value='添加'/>").click(function () {
                    var addName = $(this).prev().val();
                    if ($.trim(addName) == "") {
                        alert("添加类型名称不能为空");
                        return;
                    }
                    if (queryPowerIsExist(addName)) {
                        alert("该能耗类型已经存在，请重新输入");
                        $(this).prev().val("");
                        $(this).prev().focus();
                        return;
                    } else {
                        var loadingImg = $('<span class="bullet">&nbsp;</span><img src="@Url.Content("~/Content/images/loading_small.gif")" alt="Loading"/>');
                        li.html(loadingImg);
                        var parentPowerID = currentLi.attr("id");
                        var newPowerID = parentPowerID + "001";
                        $.getJSON('@Url.Action("AddNewPowerAjax", "Information")', {
                            powerID: newPowerID,
                            powerName: addName
                        }, function (jsonData) {
                            if (jsonData == true) {
                                li.attr("id", newPowerID);
                                li.html("<span class='bullet'>&nbsp;</span>");
                                var labelSpan = $("<span class='labelSpan'></span>");
                                $("<span>" + addName + "</span>").appendTo(labelSpan);
                                $("<img class='img-add-sibling'/>").click(function () {
                                    addSiblingPower($(this));
                                }).appendTo(labelSpan);
                                $("<img class='img-add-sub'/>").click(function () {
                                    addSubPower($(this));
                                }).appendTo(labelSpan);
                                $("<img class='img-add-rename'/>").click(function () {
                                    renamePower($(this));
                                }).appendTo(labelSpan);
                                $("<img class='img-add-remove'/>").click(function () {
                                    removePower($(this));
                                }).appendTo(labelSpan);
                                li.append(labelSpan);
                            } else {
                                alert("增加失败，请检查您是否拥有权限或者网络有问题！");
                                currentLi.attr("class", "liBullet");
                                currentLi.children("span:first").unbind("click");
                                li.parent().remove();
                            }
                        });
                    }
                }).appendTo(li);
                $("<input type='button' value='取消'/>").click(function () {
                    currentLi.attr("class", "liBullet");
                    currentLi.children("span:first").unbind("click");
                    li.parent().remove();
                }).appendTo(li);
                ul.append(li);
                ul.appendTo(currentLi);
                currentLi.children("span:first").click(function () {
                    var className = currentLi.attr("class");
                    if (className == nodeOpenClass) {
                        currentLi.attr("class", nodeClosedClass);
                    } else {
                        currentLi.attr("class", nodeOpenClass);
                    }
                });
            }
        }
        function renamePower(currentObj) {
            var currentLi = currentObj.parent().parent();
            var labelSpan = currentLi.children("span.labelSpan");
            labelSpan.hide();
            var powerName = labelSpan.children("span:first").html();
            var tempLabelSpan = $("<span class='tempLabelSpan'></span>");
            $("<input type='text' value='" + powerName + "'/>").appendTo(tempLabelSpan);
            $("<input type='button' value='修改'/>").click(function () {
                var modifyName = $(this).prev().val();
                if ($.trim(modifyName) == "") {
                    alert("修改名称不能为空");
                    return;
                }
                if (queryPowerIsExist(modifyName)) {
                    alert("该能耗类型已经存在，请重新输入");
                    $(this).prev().val("");
                    $(this).prev().focus();
                    return;
                } else {
                    tempLabelSpan.html('<img src="@Url.Content("~/Content/images/loading_small.gif")" alt="Loading"/>');
                    var powerID = currentLi.attr("id");
                    $.getJSON('@Url.Action("ModifyPowerNameAjax", "Information")', {
                        powerID: powerID,
                        powerName: modifyName
                    }, function (jsonData) {
                        if (jsonData == true) {
                            labelSpan.children("span:first").html(modifyName);
                        } else {
                            alert("修改失败，请检查您是否拥有权限或者网络有问题！");
                        }
                        tempLabelSpan.remove();
                        labelSpan.show();
                    });
                }
            }).appendTo(tempLabelSpan);
            $("<input type='button' value='取消'/>").click(function () {
                tempLabelSpan.remove();
                labelSpan.show();
            }).appendTo(tempLabelSpan);
            tempLabelSpan.insertAfter(labelSpan);
        }
        function removePower(currentObj) {
            var currentLi = currentObj.parent().parent();
            var labelSpan = currentLi.children("span.labelSpan");
            labelSpan.hide();
            var tempLabelSpan = $('<span class="tempLabelSpan"><img src="@Url.Content("~/Content/images/loading_small.gif")" alt="Loading"/></span>');
            tempLabelSpan.insertAfter(labelSpan);
            var powerID = currentLi.attr("id");
            $.getJSON('@Url.Action("IsPowerUsed", "Information")', {
                powerID: powerID
            }, function (usedFlagData) {
                if (usedFlagData == false) {
                    if (confirm("确定删除?")) {
                        if (currentLi.siblings().length > 0) {
                            $.getJSON('@Url.Action("RemovePowerAjax", "Information")', {
                                powerID: powerID
                            }, function (jsonData) {
                                if (jsonData == true) {
                                    currentLi.remove();
                                } else {
                                    alert("删除失败，请检查您是否拥有权限或者网络有问题！");
                                    tempLabelSpan.remove();
                                    labelSpan.show();
                                }
                            });
                        } else {
                            $.getJSON('@Url.Action("RemovePowerAjax", "Information")', {
                                powerID: powerID
                            }, function (jsonData) {
                                if (jsonData == true) {
                                    var parentLi = currentLi.parent().parent();
                                    parentLi.attr("class", "liBullet");
                                    parentLi.children("span:first").unbind("click").removeAttr('onclick');
                                    currentLi.parent().remove();
                                } else {
                                    alert("删除失败，请检查您是否拥有权限或者网络有问题！");
                                    tempLabelSpan.remove();
                                    labelSpan.show();
                                }
                            });
                        }
                    } else {
                        tempLabelSpan.remove();
                        labelSpan.show();
                    }
                } else if (usedFlagData == true) {
                    alert("该能耗类型已被使用，不能删除！");
                    tempLabelSpan.remove();
                    labelSpan.show();
                } else {
                    alert("删除失败，请检查您是否拥有权限或者网络有问题！");
                    tempLabelSpan.remove();
                    labelSpan.show();
                }
            });


        }

        //查询能耗类型是否已经存在
        function queryPowerIsExist(powerName) {
            var flag = false;
            $("#powerTree span.labelSpan span").each(function (index, obj) {
                var existPowerName = $(obj).html();
                if (powerName == existPowerName) {
                    flag = true;
                    return false;
                }
            });
            return flag;
        }

        $("#powerTree img").click(function () {
            var currentObj = $(this);
            var className = currentObj.attr("class");
            if (className == "img-add-sibling") {
                addSiblingPower(currentObj);
            } else if (className == "img-add-sub") {
                addSubPower(currentObj);
            } else if (className == "img-add-rename") {
                renamePower(currentObj);
            } else if (className == "img-add-remove") {
                removePower(currentObj);
            }
        });

        convertTrees();
    });
</script>