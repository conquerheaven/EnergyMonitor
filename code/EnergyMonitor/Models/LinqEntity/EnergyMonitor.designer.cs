#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace EnergyMonitor.Models.LinqEntity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EnergyMonitor")]
	public partial class EnergyMonitorDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertRoomInfo(RoomInfo instance);
    partial void UpdateRoomInfo(RoomInfo instance);
    partial void DeleteRoomInfo(RoomInfo instance);
    partial void InsertSchoolInfo(SchoolInfo instance);
    partial void UpdateSchoolInfo(SchoolInfo instance);
    partial void DeleteSchoolInfo(SchoolInfo instance);
    partial void InsertSchoolAreaInfo(SchoolAreaInfo instance);
    partial void UpdateSchoolAreaInfo(SchoolAreaInfo instance);
    partial void DeleteSchoolAreaInfo(SchoolAreaInfo instance);
    partial void InsertDepartmentInfo(DepartmentInfo instance);
    partial void UpdateDepartmentInfo(DepartmentInfo instance);
    partial void DeleteDepartmentInfo(DepartmentInfo instance);
    partial void InsertUserRoom(UserRoom instance);
    partial void UpdateUserRoom(UserRoom instance);
    partial void DeleteUserRoom(UserRoom instance);
    partial void InsertAnalogHistory(AnalogHistory instance);
    partial void UpdateAnalogHistory(AnalogHistory instance);
    partial void DeleteAnalogHistory(AnalogHistory instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertAnalogHistoryMonth(AnalogHistoryMonth instance);
    partial void UpdateAnalogHistoryMonth(AnalogHistoryMonth instance);
    partial void DeleteAnalogHistoryMonth(AnalogHistoryMonth instance);
    partial void InsertAnalogHistoryDay(AnalogHistoryDay instance);
    partial void UpdateAnalogHistoryDay(AnalogHistoryDay instance);
    partial void DeleteAnalogHistoryDay(AnalogHistoryDay instance);
    partial void InsertPowerClass(PowerClass instance);
    partial void UpdatePowerClass(PowerClass instance);
    partial void DeletePowerClass(PowerClass instance);
    partial void InsertFunction(Function instance);
    partial void UpdateFunction(Function instance);
    partial void DeleteFunction(Function instance);
    partial void InsertRoleFunction(RoleFunction instance);
    partial void UpdateRoleFunction(RoleFunction instance);
    partial void DeleteRoleFunction(RoleFunction instance);
    partial void InsertBuyHistory(BuyHistory instance);
    partial void UpdateBuyHistory(BuyHistory instance);
    partial void DeleteBuyHistory(BuyHistory instance);
    partial void InsertWaterPumpDetail(WaterPumpDetail instance);
    partial void UpdateWaterPumpDetail(WaterPumpDetail instance);
    partial void DeleteWaterPumpDetail(WaterPumpDetail instance);
    partial void InsertWindMachDetail(WindMachDetail instance);
    partial void UpdateWindMachDetail(WindMachDetail instance);
    partial void DeleteWindMachDetail(WindMachDetail instance);
    partial void InsertKitchenEquipDetail(KitchenEquipDetail instance);
    partial void UpdateKitchenEquipDetail(KitchenEquipDetail instance);
    partial void DeleteKitchenEquipDetail(KitchenEquipDetail instance);
    partial void InsertBuildingAppendix(BuildingAppendix instance);
    partial void UpdateBuildingAppendix(BuildingAppendix instance);
    partial void DeleteBuildingAppendix(BuildingAppendix instance);
    partial void InsertLightDetail(LightDetail instance);
    partial void UpdateLightDetail(LightDetail instance);
    partial void DeleteLightDetail(LightDetail instance);
    partial void InsertElevatorDetail(ElevatorDetail instance);
    partial void UpdateElevatorDetail(ElevatorDetail instance);
    partial void DeleteElevatorDetail(ElevatorDetail instance);
    partial void InsertOfficeEquipDetail(OfficeEquipDetail instance);
    partial void UpdateOfficeEquipDetail(OfficeEquipDetail instance);
    partial void DeleteOfficeEquipDetail(OfficeEquipDetail instance);
    partial void InsertBuildingDetailInfo(BuildingDetailInfo instance);
    partial void UpdateBuildingDetailInfo(BuildingDetailInfo instance);
    partial void DeleteBuildingDetailInfo(BuildingDetailInfo instance);
    partial void InsertWorkstation(Workstation instance);
    partial void UpdateWorkstation(Workstation instance);
    partial void DeleteWorkstation(Workstation instance);
    partial void InsertRTU(RTU instance);
    partial void UpdateRTU(RTU instance);
    partial void DeleteRTU(RTU instance);
    partial void InsertStateReal(StateReal instance);
    partial void UpdateStateReal(StateReal instance);
    partial void DeleteStateReal(StateReal instance);
    partial void InsertSystemProfile(SystemProfile instance);
    partial void UpdateSystemProfile(SystemProfile instance);
    partial void DeleteSystemProfile(SystemProfile instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertUniversityInfo(UniversityInfo instance);
    partial void UpdateUniversityInfo(UniversityInfo instance);
    partial void DeleteUniversityInfo(UniversityInfo instance);
    partial void InsertBuildingBriefInfo(BuildingBriefInfo instance);
    partial void UpdateBuildingBriefInfo(BuildingBriefInfo instance);
    partial void DeleteBuildingBriefInfo(BuildingBriefInfo instance);
    partial void InsertBuildingEnergyConsum(BuildingEnergyConsum instance);
    partial void UpdateBuildingEnergyConsum(BuildingEnergyConsum instance);
    partial void DeleteBuildingEnergyConsum(BuildingEnergyConsum instance);
    partial void InsertAnalogInfo(AnalogInfo instance);
    partial void UpdateAnalogInfo(AnalogInfo instance);
    partial void DeleteAnalogInfo(AnalogInfo instance);
    partial void InsertSetEmail(SetEmail instance);
    partial void UpdateSetEmail(SetEmail instance);
    partial void DeleteSetEmail(SetEmail instance);
    partial void InsertElecDistributionInfo(ElecDistributionInfo instance);
    partial void UpdateElecDistributionInfo(ElecDistributionInfo instance);
    partial void DeleteElecDistributionInfo(ElecDistributionInfo instance);
    partial void InsertElecTSInfo(ElecTSInfo instance);
    partial void UpdateElecTSInfo(ElecTSInfo instance);
    partial void DeleteElecTSInfo(ElecTSInfo instance);
    partial void InsertBuildingGuanghua(BuildingGuanghua instance);
    partial void UpdateBuildingGuanghua(BuildingGuanghua instance);
    partial void DeleteBuildingGuanghua(BuildingGuanghua instance);
    partial void InsertExceptionInfo(ExceptionInfo instance);
    partial void UpdateExceptionInfo(ExceptionInfo instance);
    partial void DeleteExceptionInfo(ExceptionInfo instance);
    partial void InsertAnalogMeasurePoint(AnalogMeasurePoint instance);
    partial void UpdateAnalogMeasurePoint(AnalogMeasurePoint instance);
    partial void DeleteAnalogMeasurePoint(AnalogMeasurePoint instance);
    partial void InsertsetMessages(setMessages instance);
    partial void UpdatesetMessages(setMessages instance);
    partial void DeletesetMessages(setMessages instance);
    partial void InsertUpdateInfo(UpdateInfo instance);
    partial void UpdateUpdateInfo(UpdateInfo instance);
    partial void DeleteUpdateInfo(UpdateInfo instance);
    partial void InsertAnnouncementInfo(AnnouncementInfo instance);
    partial void UpdateAnnouncementInfo(AnnouncementInfo instance);
    partial void DeleteAnnouncementInfo(AnnouncementInfo instance);
    #endregion
		
		public EnergyMonitorDataContext() : 
				base(global::EnergyMonitor.Properties.Settings.Default.EnergyMonitorConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public EnergyMonitorDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EnergyMonitorDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EnergyMonitorDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EnergyMonitorDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<RoomInfo> RoomInfos
		{
			get
			{
				return this.GetTable<RoomInfo>();
			}
		}
		
		public System.Data.Linq.Table<SchoolInfo> SchoolInfos
		{
			get
			{
				return this.GetTable<SchoolInfo>();
			}
		}
		
		public System.Data.Linq.Table<SchoolAreaInfo> SchoolAreaInfos
		{
			get
			{
				return this.GetTable<SchoolAreaInfo>();
			}
		}
		
		public System.Data.Linq.Table<DepartmentInfo> DepartmentInfos
		{
			get
			{
				return this.GetTable<DepartmentInfo>();
			}
		}
		
		public System.Data.Linq.Table<UserRoom> UserRooms
		{
			get
			{
				return this.GetTable<UserRoom>();
			}
		}
		
		public System.Data.Linq.Table<AnalogHistory> AnalogHistories
		{
			get
			{
				return this.GetTable<AnalogHistory>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<AnalogHistoryMonth> AnalogHistoryMonths
		{
			get
			{
				return this.GetTable<AnalogHistoryMonth>();
			}
		}
		
		public System.Data.Linq.Table<AnalogHistoryDay> AnalogHistoryDays
		{
			get
			{
				return this.GetTable<AnalogHistoryDay>();
			}
		}
		
		public System.Data.Linq.Table<PowerClass> PowerClasses
		{
			get
			{
				return this.GetTable<PowerClass>();
			}
		}
		
		public System.Data.Linq.Table<Function> Functions
		{
			get
			{
				return this.GetTable<Function>();
			}
		}
		
		public System.Data.Linq.Table<RoleFunction> RoleFunctions
		{
			get
			{
				return this.GetTable<RoleFunction>();
			}
		}
		
		public System.Data.Linq.Table<BuyHistory> BuyHistories
		{
			get
			{
				return this.GetTable<BuyHistory>();
			}
		}
		
		public System.Data.Linq.Table<WaterPumpDetail> WaterPumpDetails
		{
			get
			{
				return this.GetTable<WaterPumpDetail>();
			}
		}
		
		public System.Data.Linq.Table<WindMachDetail> WindMachDetails
		{
			get
			{
				return this.GetTable<WindMachDetail>();
			}
		}
		
		public System.Data.Linq.Table<KitchenEquipDetail> KitchenEquipDetails
		{
			get
			{
				return this.GetTable<KitchenEquipDetail>();
			}
		}
		
		public System.Data.Linq.Table<BuildingAppendix> BuildingAppendixes
		{
			get
			{
				return this.GetTable<BuildingAppendix>();
			}
		}
		
		public System.Data.Linq.Table<LightDetail> LightDetails
		{
			get
			{
				return this.GetTable<LightDetail>();
			}
		}
		
		public System.Data.Linq.Table<ElevatorDetail> ElevatorDetails
		{
			get
			{
				return this.GetTable<ElevatorDetail>();
			}
		}
		
		public System.Data.Linq.Table<OfficeEquipDetail> OfficeEquipDetails
		{
			get
			{
				return this.GetTable<OfficeEquipDetail>();
			}
		}
		
		public System.Data.Linq.Table<BuildingDetailInfo> BuildingDetailInfos
		{
			get
			{
				return this.GetTable<BuildingDetailInfo>();
			}
		}
		
		public System.Data.Linq.Table<Workstation> Workstations
		{
			get
			{
				return this.GetTable<Workstation>();
			}
		}
		
		public System.Data.Linq.Table<RTU> RTUs
		{
			get
			{
				return this.GetTable<RTU>();
			}
		}
		
		public System.Data.Linq.Table<InstrumentInfo> InstrumentInfos
		{
			get
			{
				return this.GetTable<InstrumentInfo>();
			}
		}
		
		public System.Data.Linq.Table<StateReal> StateReals
		{
			get
			{
				return this.GetTable<StateReal>();
			}
		}
		
		public System.Data.Linq.Table<SystemProfile> SystemProfiles
		{
			get
			{
				return this.GetTable<SystemProfile>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<UniversityInfo> UniversityInfos
		{
			get
			{
				return this.GetTable<UniversityInfo>();
			}
		}
		
		public System.Data.Linq.Table<BuildingBriefInfo> BuildingBriefInfos
		{
			get
			{
				return this.GetTable<BuildingBriefInfo>();
			}
		}
		
		public System.Data.Linq.Table<BuildingEnergyConsum> BuildingEnergyConsums
		{
			get
			{
				return this.GetTable<BuildingEnergyConsum>();
			}
		}
		
		public System.Data.Linq.Table<AnalogInfo> AnalogInfos
		{
			get
			{
				return this.GetTable<AnalogInfo>();
			}
		}
		
		public System.Data.Linq.Table<SetEmail> SetEmail
		{
			get
			{
				return this.GetTable<SetEmail>();
			}
		}
		
		public System.Data.Linq.Table<ElecDistributionInfo> ElecDistributionInfo
		{
			get
			{
				return this.GetTable<ElecDistributionInfo>();
			}
		}
		
		public System.Data.Linq.Table<ElecTSInfo> ElecTSInfo
		{
			get
			{
				return this.GetTable<ElecTSInfo>();
			}
		}
		
		public System.Data.Linq.Table<BuildingGuanghua> BuildingGuanghua
		{
			get
			{
				return this.GetTable<BuildingGuanghua>();
			}
		}
		
		public System.Data.Linq.Table<ExceptionInfo> ExceptionInfo
		{
			get
			{
				return this.GetTable<ExceptionInfo>();
			}
		}
		
		public System.Data.Linq.Table<BuildingTypes> BuildingTypes
		{
			get
			{
				return this.GetTable<BuildingTypes>();
			}
		}
		
		public System.Data.Linq.Table<AnalogMeasurePoint> AnalogMeasurePoints
		{
			get
			{
				return this.GetTable<AnalogMeasurePoint>();
			}
		}
		
		public System.Data.Linq.Table<setMessages> setMessages
		{
			get
			{
				return this.GetTable<setMessages>();
			}
		}
		
		public System.Data.Linq.Table<UpdateInfo> UpdateInfos
		{
			get
			{
				return this.GetTable<UpdateInfo>();
			}
		}
		
		public System.Data.Linq.Table<AnnouncementInfo> AnnouncementInfos
		{
			get
			{
				return this.GetTable<AnnouncementInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoomInfo")]
	public partial class RoomInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RI_ID;
		
		private string _RI_RoomCode;
		
		private int _BDI_ID;
		
		private System.Nullable<int> _RI_Floor;
		
		private string _RI_Remark;
		
		private System.Nullable<int> _RI_LogOperator;
		
		private System.Nullable<System.DateTime> _RI_CreateDate;
		
		private System.Nullable<int> _RI_UpdateOperator;
		
		private System.Nullable<System.DateTime> _RI_UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRI_IDChanging(int value);
    partial void OnRI_IDChanged();
    partial void OnRI_RoomCodeChanging(string value);
    partial void OnRI_RoomCodeChanged();
    partial void OnBDI_IDChanging(int value);
    partial void OnBDI_IDChanged();
    partial void OnRI_FloorChanging(System.Nullable<int> value);
    partial void OnRI_FloorChanged();
    partial void OnRI_RemarkChanging(string value);
    partial void OnRI_RemarkChanged();
    partial void OnRI_LogOperatorChanging(System.Nullable<int> value);
    partial void OnRI_LogOperatorChanged();
    partial void OnRI_CreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRI_CreateDateChanged();
    partial void OnRI_UpdateOperatorChanging(System.Nullable<int> value);
    partial void OnRI_UpdateOperatorChanged();
    partial void OnRI_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRI_UpdateDateChanged();
    #endregion
		
		public RoomInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RI_ID
		{
			get
			{
				return this._RI_ID;
			}
			set
			{
				if ((this._RI_ID != value))
				{
					this.OnRI_IDChanging(value);
					this.SendPropertyChanging();
					this._RI_ID = value;
					this.SendPropertyChanged("RI_ID");
					this.OnRI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_RoomCode", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string RI_RoomCode
		{
			get
			{
				return this._RI_RoomCode;
			}
			set
			{
				if ((this._RI_RoomCode != value))
				{
					this.OnRI_RoomCodeChanging(value);
					this.SendPropertyChanging();
					this._RI_RoomCode = value;
					this.SendPropertyChanged("RI_RoomCode");
					this.OnRI_RoomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ID", DbType="Int NOT NULL")]
		public int BDI_ID
		{
			get
			{
				return this._BDI_ID;
			}
			set
			{
				if ((this._BDI_ID != value))
				{
					this.OnBDI_IDChanging(value);
					this.SendPropertyChanging();
					this._BDI_ID = value;
					this.SendPropertyChanged("BDI_ID");
					this.OnBDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_Floor", DbType="Int")]
		public System.Nullable<int> RI_Floor
		{
			get
			{
				return this._RI_Floor;
			}
			set
			{
				if ((this._RI_Floor != value))
				{
					this.OnRI_FloorChanging(value);
					this.SendPropertyChanging();
					this._RI_Floor = value;
					this.SendPropertyChanged("RI_Floor");
					this.OnRI_FloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_Remark", DbType="VarChar(500)")]
		public string RI_Remark
		{
			get
			{
				return this._RI_Remark;
			}
			set
			{
				if ((this._RI_Remark != value))
				{
					this.OnRI_RemarkChanging(value);
					this.SendPropertyChanging();
					this._RI_Remark = value;
					this.SendPropertyChanged("RI_Remark");
					this.OnRI_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_LogOperator", DbType="Int")]
		public System.Nullable<int> RI_LogOperator
		{
			get
			{
				return this._RI_LogOperator;
			}
			set
			{
				if ((this._RI_LogOperator != value))
				{
					this.OnRI_LogOperatorChanging(value);
					this.SendPropertyChanging();
					this._RI_LogOperator = value;
					this.SendPropertyChanged("RI_LogOperator");
					this.OnRI_LogOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RI_CreateDate
		{
			get
			{
				return this._RI_CreateDate;
			}
			set
			{
				if ((this._RI_CreateDate != value))
				{
					this.OnRI_CreateDateChanging(value);
					this.SendPropertyChanging();
					this._RI_CreateDate = value;
					this.SendPropertyChanged("RI_CreateDate");
					this.OnRI_CreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_UpdateOperator", DbType="Int")]
		public System.Nullable<int> RI_UpdateOperator
		{
			get
			{
				return this._RI_UpdateOperator;
			}
			set
			{
				if ((this._RI_UpdateOperator != value))
				{
					this.OnRI_UpdateOperatorChanging(value);
					this.SendPropertyChanging();
					this._RI_UpdateOperator = value;
					this.SendPropertyChanged("RI_UpdateOperator");
					this.OnRI_UpdateOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RI_UpdateDate
		{
			get
			{
				return this._RI_UpdateDate;
			}
			set
			{
				if ((this._RI_UpdateDate != value))
				{
					this.OnRI_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._RI_UpdateDate = value;
					this.SendPropertyChanged("RI_UpdateDate");
					this.OnRI_UpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolInfo")]
	public partial class SchoolInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SI_ID;
		
		private string _SI_Code;
		
		private string _SI_Name;
		
		private string _SI_Address;
		
		private string _SI_Remark;
		
		private System.Nullable<int> _SI_LogOperator;
		
		private System.Nullable<System.DateTime> _SI_CreateDate;
		
		private System.Nullable<int> _SI_UpdateOperator;
		
		private System.Nullable<System.DateTime> _SI_UpdateDate;
		
		private System.Nullable<int> _SI_BuildingArea;
		
		private System.Nullable<int> _SI_GroudArea;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSI_IDChanging(int value);
    partial void OnSI_IDChanged();
    partial void OnSI_CodeChanging(string value);
    partial void OnSI_CodeChanged();
    partial void OnSI_NameChanging(string value);
    partial void OnSI_NameChanged();
    partial void OnSI_AddressChanging(string value);
    partial void OnSI_AddressChanged();
    partial void OnSI_RemarkChanging(string value);
    partial void OnSI_RemarkChanged();
    partial void OnSI_LogOperatorChanging(System.Nullable<int> value);
    partial void OnSI_LogOperatorChanged();
    partial void OnSI_CreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSI_CreateDateChanged();
    partial void OnSI_UpdateOperatorChanging(System.Nullable<int> value);
    partial void OnSI_UpdateOperatorChanged();
    partial void OnSI_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSI_UpdateDateChanged();
    partial void OnSI_BuildingAreaChanging(System.Nullable<int> value);
    partial void OnSI_BuildingAreaChanged();
    partial void OnSI_GroudAreaChanging(System.Nullable<int> value);
    partial void OnSI_GroudAreaChanged();
    #endregion
		
		public SchoolInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SI_ID
		{
			get
			{
				return this._SI_ID;
			}
			set
			{
				if ((this._SI_ID != value))
				{
					this.OnSI_IDChanging(value);
					this.SendPropertyChanging();
					this._SI_ID = value;
					this.SendPropertyChanged("SI_ID");
					this.OnSI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_Code", DbType="VarChar(500)")]
		public string SI_Code
		{
			get
			{
				return this._SI_Code;
			}
			set
			{
				if ((this._SI_Code != value))
				{
					this.OnSI_CodeChanging(value);
					this.SendPropertyChanging();
					this._SI_Code = value;
					this.SendPropertyChanged("SI_Code");
					this.OnSI_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string SI_Name
		{
			get
			{
				return this._SI_Name;
			}
			set
			{
				if ((this._SI_Name != value))
				{
					this.OnSI_NameChanging(value);
					this.SendPropertyChanging();
					this._SI_Name = value;
					this.SendPropertyChanged("SI_Name");
					this.OnSI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_Address", DbType="VarChar(500)")]
		public string SI_Address
		{
			get
			{
				return this._SI_Address;
			}
			set
			{
				if ((this._SI_Address != value))
				{
					this.OnSI_AddressChanging(value);
					this.SendPropertyChanging();
					this._SI_Address = value;
					this.SendPropertyChanged("SI_Address");
					this.OnSI_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_Remark", DbType="VarChar(500)")]
		public string SI_Remark
		{
			get
			{
				return this._SI_Remark;
			}
			set
			{
				if ((this._SI_Remark != value))
				{
					this.OnSI_RemarkChanging(value);
					this.SendPropertyChanging();
					this._SI_Remark = value;
					this.SendPropertyChanged("SI_Remark");
					this.OnSI_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_LogOperator", DbType="Int")]
		public System.Nullable<int> SI_LogOperator
		{
			get
			{
				return this._SI_LogOperator;
			}
			set
			{
				if ((this._SI_LogOperator != value))
				{
					this.OnSI_LogOperatorChanging(value);
					this.SendPropertyChanging();
					this._SI_LogOperator = value;
					this.SendPropertyChanged("SI_LogOperator");
					this.OnSI_LogOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SI_CreateDate
		{
			get
			{
				return this._SI_CreateDate;
			}
			set
			{
				if ((this._SI_CreateDate != value))
				{
					this.OnSI_CreateDateChanging(value);
					this.SendPropertyChanging();
					this._SI_CreateDate = value;
					this.SendPropertyChanged("SI_CreateDate");
					this.OnSI_CreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_UpdateOperator", DbType="Int")]
		public System.Nullable<int> SI_UpdateOperator
		{
			get
			{
				return this._SI_UpdateOperator;
			}
			set
			{
				if ((this._SI_UpdateOperator != value))
				{
					this.OnSI_UpdateOperatorChanging(value);
					this.SendPropertyChanging();
					this._SI_UpdateOperator = value;
					this.SendPropertyChanged("SI_UpdateOperator");
					this.OnSI_UpdateOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SI_UpdateDate
		{
			get
			{
				return this._SI_UpdateDate;
			}
			set
			{
				if ((this._SI_UpdateDate != value))
				{
					this.OnSI_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._SI_UpdateDate = value;
					this.SendPropertyChanged("SI_UpdateDate");
					this.OnSI_UpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_BuildingArea")]
		public System.Nullable<int> SI_BuildingArea
		{
			get
			{
				return this._SI_BuildingArea;
			}
			set
			{
				if ((this._SI_BuildingArea != value))
				{
					this.OnSI_BuildingAreaChanging(value);
					this.SendPropertyChanging();
					this._SI_BuildingArea = value;
					this.SendPropertyChanged("SI_BuildingArea");
					this.OnSI_BuildingAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_GroudArea")]
		public System.Nullable<int> SI_GroudArea
		{
			get
			{
				return this._SI_GroudArea;
			}
			set
			{
				if ((this._SI_GroudArea != value))
				{
					this.OnSI_GroudAreaChanging(value);
					this.SendPropertyChanging();
					this._SI_GroudArea = value;
					this.SendPropertyChanged("SI_GroudArea");
					this.OnSI_GroudAreaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolAreaInfo")]
	public partial class SchoolAreaInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SAI_ID;
		
		private int _SI_ID;
		
		private string _SAI_Name;
		
		private string _SAI_Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSAI_IDChanging(int value);
    partial void OnSAI_IDChanged();
    partial void OnSI_IDChanging(int value);
    partial void OnSI_IDChanged();
    partial void OnSAI_NameChanging(string value);
    partial void OnSAI_NameChanged();
    partial void OnSAI_RemarkChanging(string value);
    partial void OnSAI_RemarkChanged();
    #endregion
		
		public SchoolAreaInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAI_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SAI_ID
		{
			get
			{
				return this._SAI_ID;
			}
			set
			{
				if ((this._SAI_ID != value))
				{
					this.OnSAI_IDChanging(value);
					this.SendPropertyChanging();
					this._SAI_ID = value;
					this.SendPropertyChanged("SAI_ID");
					this.OnSAI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_ID", DbType="Int NOT NULL")]
		public int SI_ID
		{
			get
			{
				return this._SI_ID;
			}
			set
			{
				if ((this._SI_ID != value))
				{
					this.OnSI_IDChanging(value);
					this.SendPropertyChanging();
					this._SI_ID = value;
					this.SendPropertyChanged("SI_ID");
					this.OnSI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAI_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string SAI_Name
		{
			get
			{
				return this._SAI_Name;
			}
			set
			{
				if ((this._SAI_Name != value))
				{
					this.OnSAI_NameChanging(value);
					this.SendPropertyChanging();
					this._SAI_Name = value;
					this.SendPropertyChanged("SAI_Name");
					this.OnSAI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAI_Remark", DbType="VarChar(500)")]
		public string SAI_Remark
		{
			get
			{
				return this._SAI_Remark;
			}
			set
			{
				if ((this._SAI_Remark != value))
				{
					this.OnSAI_RemarkChanging(value);
					this.SendPropertyChanging();
					this._SAI_Remark = value;
					this.SendPropertyChanged("SAI_Remark");
					this.OnSAI_RemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepartmentInfo")]
	public partial class DepartmentInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DI_ID;
		
		private string _DI_Name;
		
		private string _DI_LinkMan;
		
		private string _DI_Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDI_IDChanging(int value);
    partial void OnDI_IDChanged();
    partial void OnDI_NameChanging(string value);
    partial void OnDI_NameChanged();
    partial void OnDI_LinkManChanging(string value);
    partial void OnDI_LinkManChanged();
    partial void OnDI_RemarkChanging(string value);
    partial void OnDI_RemarkChanged();
    #endregion
		
		public DepartmentInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DI_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DI_ID
		{
			get
			{
				return this._DI_ID;
			}
			set
			{
				if ((this._DI_ID != value))
				{
					this.OnDI_IDChanging(value);
					this.SendPropertyChanging();
					this._DI_ID = value;
					this.SendPropertyChanged("DI_ID");
					this.OnDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DI_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string DI_Name
		{
			get
			{
				return this._DI_Name;
			}
			set
			{
				if ((this._DI_Name != value))
				{
					this.OnDI_NameChanging(value);
					this.SendPropertyChanging();
					this._DI_Name = value;
					this.SendPropertyChanged("DI_Name");
					this.OnDI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DI_LinkMan", DbType="VarChar(500)")]
		public string DI_LinkMan
		{
			get
			{
				return this._DI_LinkMan;
			}
			set
			{
				if ((this._DI_LinkMan != value))
				{
					this.OnDI_LinkManChanging(value);
					this.SendPropertyChanging();
					this._DI_LinkMan = value;
					this.SendPropertyChanged("DI_LinkMan");
					this.OnDI_LinkManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DI_Remark", DbType="VarChar(500)")]
		public string DI_Remark
		{
			get
			{
				return this._DI_Remark;
			}
			set
			{
				if ((this._DI_Remark != value))
				{
					this.OnDI_RemarkChanging(value);
					this.SendPropertyChanging();
					this._DI_Remark = value;
					this.SendPropertyChanged("DI_Remark");
					this.OnDI_RemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoom")]
	public partial class UserRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USR_ID;
		
		private int _RI_ID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSR_IDChanging(string value);
    partial void OnUSR_IDChanged();
    partial void OnRI_IDChanging(int value);
    partial void OnRI_IDChanged();
    #endregion
		
		public UserRoom()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USR_ID", DbType="VarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USR_ID
		{
			get
			{
				return this._USR_ID;
			}
			set
			{
				if ((this._USR_ID != value))
				{
					this.OnUSR_IDChanging(value);
					this.SendPropertyChanging();
					this._USR_ID = value;
					this.SendPropertyChanged("USR_ID");
					this.OnUSR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RI_ID
		{
			get
			{
				return this._RI_ID;
			}
			set
			{
				if ((this._RI_ID != value))
				{
					this.OnRI_IDChanging(value);
					this.SendPropertyChanging();
					this._RI_ID = value;
					this.SendPropertyChanged("RI_ID");
					this.OnRI_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnalogHistory")]
	public partial class AnalogHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AH_AnalogNo;
		
		private System.DateTime _AH_Time;
		
		private double _AH_Value;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAH_AnalogNoChanging(int value);
    partial void OnAH_AnalogNoChanged();
    partial void OnAH_TimeChanging(System.DateTime value);
    partial void OnAH_TimeChanged();
    partial void OnAH_ValueChanging(double value);
    partial void OnAH_ValueChanged();
    #endregion
		
		public AnalogHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AH_AnalogNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AH_AnalogNo
		{
			get
			{
				return this._AH_AnalogNo;
			}
			set
			{
				if ((this._AH_AnalogNo != value))
				{
					this.OnAH_AnalogNoChanging(value);
					this.SendPropertyChanging();
					this._AH_AnalogNo = value;
					this.SendPropertyChanged("AH_AnalogNo");
					this.OnAH_AnalogNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AH_Time", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime AH_Time
		{
			get
			{
				return this._AH_Time;
			}
			set
			{
				if ((this._AH_Time != value))
				{
					this.OnAH_TimeChanging(value);
					this.SendPropertyChanging();
					this._AH_Time = value;
					this.SendPropertyChanged("AH_Time");
					this.OnAH_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AH_Value", DbType="Float NOT NULL")]
		public double AH_Value
		{
			get
			{
				return this._AH_Value;
			}
			set
			{
				if ((this._AH_Value != value))
				{
					this.OnAH_ValueChanging(value);
					this.SendPropertyChanging();
					this._AH_Value = value;
					this.SendPropertyChanged("AH_Value");
					this.OnAH_ValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USR_ID;
		
		private string _USR_Name;
		
		private string _USR_Mail;
		
		private string _USR_MailActiveCode;
		
		private System.Nullable<int> _USR_DepartID;
		
		private string _USR_DepartName;
		
		private int _USR_RoleID;
		
		private string _USR_LastLoginIP;
		
		private System.Nullable<System.DateTime> _USR_LastLoginTime;
		
		private string _USR_Remark;
		
		private bool _USR_Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSR_IDChanging(string value);
    partial void OnUSR_IDChanged();
    partial void OnUSR_NameChanging(string value);
    partial void OnUSR_NameChanged();
    partial void OnUSR_MailChanging(string value);
    partial void OnUSR_MailChanged();
    partial void OnUSR_MailActiveCodeChanging(string value);
    partial void OnUSR_MailActiveCodeChanged();
    partial void OnUSR_DepartIDChanging(System.Nullable<int> value);
    partial void OnUSR_DepartIDChanged();
    partial void OnUSR_DepartNameChanging(string value);
    partial void OnUSR_DepartNameChanged();
    partial void OnUSR_RoleIDChanging(int value);
    partial void OnUSR_RoleIDChanged();
    partial void OnUSR_LastLoginIPChanging(string value);
    partial void OnUSR_LastLoginIPChanged();
    partial void OnUSR_LastLoginTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUSR_LastLoginTimeChanged();
    partial void OnUSR_RemarkChanging(string value);
    partial void OnUSR_RemarkChanged();
    partial void OnUSR_StatusChanging(bool value);
    partial void OnUSR_StatusChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USR_ID", DbType="VarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USR_ID
		{
			get
			{
				return this._USR_ID;
			}
			set
			{
				if ((this._USR_ID != value))
				{
					this.OnUSR_IDChanging(value);
					this.SendPropertyChanging();
					this._USR_ID = value;
					this.SendPropertyChanged("USR_ID");
					this.OnUSR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USR_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string USR_Name
		{
			get
			{
				return this._USR_Name;
			}
			set
			{
				if ((this._USR_Name != value))
				{
					this.OnUSR_NameChanging(value);
					this.SendPropertyChanging();
					this._USR_Name = value;
					this.SendPropertyChanged("USR_Name");
					this.OnUSR_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USR_Mail", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string USR_Mail
		{
			get
			{
				return this._USR_Mail;
			}
			set
			{
				if ((this._USR_Mail != value))
				{
					this.OnUSR_MailChanging(value);
					this.SendPropertyChanging();
					this._USR_Mail = value;
					this.SendPropertyChanged("USR_Mail");
					this.OnUSR_MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USR_MailActiveCode", DbType="VarChar(500)")]
		public string USR_MailActiveCode
		{
			get
			{
				return this._USR_MailActiveCode;
			}
			set
			{
				if ((this._USR_MailActiveCode != value))
				{
					this.OnUSR_MailActiveCodeChanging(value);
					this.SendPropertyChanging();
					this._USR_MailActiveCode = value;
					this.SendPropertyChanged("USR_MailActiveCode");
					this.OnUSR_MailActiveCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USR_DepartID", DbType="Int")]
		public System.Nullable<int> USR_DepartID
		{
			get
			{
				return this._USR_DepartID;
			}
			set
			{
				if ((this._USR_DepartID != value))
				{
					this.OnUSR_DepartIDChanging(value);
					this.SendPropertyChanging();
					this._USR_DepartID = value;
					this.SendPropertyChanged("USR_DepartID");
					this.OnUSR_DepartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USR_DepartName", DbType="VarChar(500)")]
		public string USR_DepartName
		{
			get
			{
				return this._USR_DepartName;
			}
			set
			{
				if ((this._USR_DepartName != value))
				{
					this.OnUSR_DepartNameChanging(value);
					this.SendPropertyChanging();
					this._USR_DepartName = value;
					this.SendPropertyChanged("USR_DepartName");
					this.OnUSR_DepartNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USR_RoleID", DbType="Int NOT NULL")]
		public int USR_RoleID
		{
			get
			{
				return this._USR_RoleID;
			}
			set
			{
				if ((this._USR_RoleID != value))
				{
					this.OnUSR_RoleIDChanging(value);
					this.SendPropertyChanging();
					this._USR_RoleID = value;
					this.SendPropertyChanged("USR_RoleID");
					this.OnUSR_RoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USR_LastLoginIP", DbType="VarChar(500)")]
		public string USR_LastLoginIP
		{
			get
			{
				return this._USR_LastLoginIP;
			}
			set
			{
				if ((this._USR_LastLoginIP != value))
				{
					this.OnUSR_LastLoginIPChanging(value);
					this.SendPropertyChanging();
					this._USR_LastLoginIP = value;
					this.SendPropertyChanged("USR_LastLoginIP");
					this.OnUSR_LastLoginIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USR_LastLoginTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> USR_LastLoginTime
		{
			get
			{
				return this._USR_LastLoginTime;
			}
			set
			{
				if ((this._USR_LastLoginTime != value))
				{
					this.OnUSR_LastLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._USR_LastLoginTime = value;
					this.SendPropertyChanged("USR_LastLoginTime");
					this.OnUSR_LastLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USR_Remark", DbType="VarChar(500)")]
		public string USR_Remark
		{
			get
			{
				return this._USR_Remark;
			}
			set
			{
				if ((this._USR_Remark != value))
				{
					this.OnUSR_RemarkChanging(value);
					this.SendPropertyChanging();
					this._USR_Remark = value;
					this.SendPropertyChanged("USR_Remark");
					this.OnUSR_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USR_Status", DbType="Bit NOT NULL")]
		public bool USR_Status
		{
			get
			{
				return this._USR_Status;
			}
			set
			{
				if ((this._USR_Status != value))
				{
					this.OnUSR_StatusChanging(value);
					this.SendPropertyChanging();
					this._USR_Status = value;
					this.SendPropertyChanged("USR_Status");
					this.OnUSR_StatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RL_ID;
		
		private string _RL_Name;
		
		private bool _RL_Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRL_IDChanging(int value);
    partial void OnRL_IDChanged();
    partial void OnRL_NameChanging(string value);
    partial void OnRL_NameChanged();
    partial void OnRL_StatusChanging(bool value);
    partial void OnRL_StatusChanged();
    #endregion
		
		public Role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RL_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RL_ID
		{
			get
			{
				return this._RL_ID;
			}
			set
			{
				if ((this._RL_ID != value))
				{
					this.OnRL_IDChanging(value);
					this.SendPropertyChanging();
					this._RL_ID = value;
					this.SendPropertyChanged("RL_ID");
					this.OnRL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RL_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string RL_Name
		{
			get
			{
				return this._RL_Name;
			}
			set
			{
				if ((this._RL_Name != value))
				{
					this.OnRL_NameChanging(value);
					this.SendPropertyChanging();
					this._RL_Name = value;
					this.SendPropertyChanged("RL_Name");
					this.OnRL_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RL_Status", DbType="Bit NOT NULL")]
		public bool RL_Status
		{
			get
			{
				return this._RL_Status;
			}
			set
			{
				if ((this._RL_Status != value))
				{
					this.OnRL_StatusChanging(value);
					this.SendPropertyChanging();
					this._RL_Status = value;
					this.SendPropertyChanged("RL_Status");
					this.OnRL_StatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnalogHistoryMonth")]
	public partial class AnalogHistoryMonth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AHM_AnalogNo;
		
		private System.DateTime _AHM_MTime;
		
		private double _AHM_Value;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAHM_AnalogNoChanging(int value);
    partial void OnAHM_AnalogNoChanged();
    partial void OnAHM_MTimeChanging(System.DateTime value);
    partial void OnAHM_MTimeChanged();
    partial void OnAHM_ValueChanging(double value);
    partial void OnAHM_ValueChanged();
    #endregion
		
		public AnalogHistoryMonth()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AHM_AnalogNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AHM_AnalogNo
		{
			get
			{
				return this._AHM_AnalogNo;
			}
			set
			{
				if ((this._AHM_AnalogNo != value))
				{
					this.OnAHM_AnalogNoChanging(value);
					this.SendPropertyChanging();
					this._AHM_AnalogNo = value;
					this.SendPropertyChanged("AHM_AnalogNo");
					this.OnAHM_AnalogNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AHM_MTime", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime AHM_MTime
		{
			get
			{
				return this._AHM_MTime;
			}
			set
			{
				if ((this._AHM_MTime != value))
				{
					this.OnAHM_MTimeChanging(value);
					this.SendPropertyChanging();
					this._AHM_MTime = value;
					this.SendPropertyChanged("AHM_MTime");
					this.OnAHM_MTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AHM_Value", DbType="Float NOT NULL")]
		public double AHM_Value
		{
			get
			{
				return this._AHM_Value;
			}
			set
			{
				if ((this._AHM_Value != value))
				{
					this.OnAHM_ValueChanging(value);
					this.SendPropertyChanging();
					this._AHM_Value = value;
					this.SendPropertyChanged("AHM_Value");
					this.OnAHM_ValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnalogHistoryDay")]
	public partial class AnalogHistoryDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AHD_AnalogNo;
		
		private System.DateTime _AHD_HTime;
		
		private double _AHD_Value;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAHD_AnalogNoChanging(int value);
    partial void OnAHD_AnalogNoChanged();
    partial void OnAHD_HTimeChanging(System.DateTime value);
    partial void OnAHD_HTimeChanged();
    partial void OnAHD_ValueChanging(double value);
    partial void OnAHD_ValueChanged();
    #endregion
		
		public AnalogHistoryDay()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AHD_AnalogNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AHD_AnalogNo
		{
			get
			{
				return this._AHD_AnalogNo;
			}
			set
			{
				if ((this._AHD_AnalogNo != value))
				{
					this.OnAHD_AnalogNoChanging(value);
					this.SendPropertyChanging();
					this._AHD_AnalogNo = value;
					this.SendPropertyChanged("AHD_AnalogNo");
					this.OnAHD_AnalogNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AHD_HTime", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime AHD_HTime
		{
			get
			{
				return this._AHD_HTime;
			}
			set
			{
				if ((this._AHD_HTime != value))
				{
					this.OnAHD_HTimeChanging(value);
					this.SendPropertyChanging();
					this._AHD_HTime = value;
					this.SendPropertyChanged("AHD_HTime");
					this.OnAHD_HTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AHD_Value", DbType="Float NOT NULL")]
		public double AHD_Value
		{
			get
			{
				return this._AHD_Value;
			}
			set
			{
				if ((this._AHD_Value != value))
				{
					this.OnAHD_ValueChanging(value);
					this.SendPropertyChanging();
					this._AHD_Value = value;
					this.SendPropertyChanged("AHD_Value");
					this.OnAHD_ValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PowerClass")]
	public partial class PowerClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PC_ID;
		
		private string _PC_Name;
		
		private string _PC_Type;
		
		private string _PC_LocalCode;
		
		private string _PC_Unit;
		
		private string _PC_Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPC_IDChanging(string value);
    partial void OnPC_IDChanged();
    partial void OnPC_NameChanging(string value);
    partial void OnPC_NameChanged();
    partial void OnPC_TypeChanging(string value);
    partial void OnPC_TypeChanged();
    partial void OnPC_LocalCodeChanging(string value);
    partial void OnPC_LocalCodeChanged();
    partial void OnPC_UnitChanging(string value);
    partial void OnPC_UnitChanged();
    partial void OnPC_RemarkChanging(string value);
    partial void OnPC_RemarkChanged();
    #endregion
		
		public PowerClass()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC_ID", DbType="VarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PC_ID
		{
			get
			{
				return this._PC_ID;
			}
			set
			{
				if ((this._PC_ID != value))
				{
					this.OnPC_IDChanging(value);
					this.SendPropertyChanging();
					this._PC_ID = value;
					this.SendPropertyChanged("PC_ID");
					this.OnPC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string PC_Name
		{
			get
			{
				return this._PC_Name;
			}
			set
			{
				if ((this._PC_Name != value))
				{
					this.OnPC_NameChanging(value);
					this.SendPropertyChanging();
					this._PC_Name = value;
					this.SendPropertyChanged("PC_Name");
					this.OnPC_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC_Type", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string PC_Type
		{
			get
			{
				return this._PC_Type;
			}
			set
			{
				if ((this._PC_Type != value))
				{
					this.OnPC_TypeChanging(value);
					this.SendPropertyChanging();
					this._PC_Type = value;
					this.SendPropertyChanged("PC_Type");
					this.OnPC_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC_LocalCode", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string PC_LocalCode
		{
			get
			{
				return this._PC_LocalCode;
			}
			set
			{
				if ((this._PC_LocalCode != value))
				{
					this.OnPC_LocalCodeChanging(value);
					this.SendPropertyChanging();
					this._PC_LocalCode = value;
					this.SendPropertyChanged("PC_LocalCode");
					this.OnPC_LocalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC_Unit", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string PC_Unit
		{
			get
			{
				return this._PC_Unit;
			}
			set
			{
				if ((this._PC_Unit != value))
				{
					this.OnPC_UnitChanging(value);
					this.SendPropertyChanging();
					this._PC_Unit = value;
					this.SendPropertyChanged("PC_Unit");
					this.OnPC_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC_Remark", DbType="VarChar(500)")]
		public string PC_Remark
		{
			get
			{
				return this._PC_Remark;
			}
			set
			{
				if ((this._PC_Remark != value))
				{
					this.OnPC_RemarkChanging(value);
					this.SendPropertyChanging();
					this._PC_Remark = value;
					this.SendPropertyChanged("PC_Remark");
					this.OnPC_RemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Function]")]
	public partial class Function : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FN_ID;
		
		private string _FN_Name;
		
		private string _FN_Description;
		
		private string _FN_LinkLocation;
		
		private bool _FN_Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFN_IDChanging(string value);
    partial void OnFN_IDChanged();
    partial void OnFN_NameChanging(string value);
    partial void OnFN_NameChanged();
    partial void OnFN_DescriptionChanging(string value);
    partial void OnFN_DescriptionChanged();
    partial void OnFN_LinkLocationChanging(string value);
    partial void OnFN_LinkLocationChanged();
    partial void OnFN_StatusChanging(bool value);
    partial void OnFN_StatusChanged();
    #endregion
		
		public Function()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FN_ID", DbType="VarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FN_ID
		{
			get
			{
				return this._FN_ID;
			}
			set
			{
				if ((this._FN_ID != value))
				{
					this.OnFN_IDChanging(value);
					this.SendPropertyChanging();
					this._FN_ID = value;
					this.SendPropertyChanged("FN_ID");
					this.OnFN_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FN_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string FN_Name
		{
			get
			{
				return this._FN_Name;
			}
			set
			{
				if ((this._FN_Name != value))
				{
					this.OnFN_NameChanging(value);
					this.SendPropertyChanging();
					this._FN_Name = value;
					this.SendPropertyChanged("FN_Name");
					this.OnFN_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FN_Description", DbType="VarChar(500)")]
		public string FN_Description
		{
			get
			{
				return this._FN_Description;
			}
			set
			{
				if ((this._FN_Description != value))
				{
					this.OnFN_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._FN_Description = value;
					this.SendPropertyChanged("FN_Description");
					this.OnFN_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FN_LinkLocation", DbType="VarChar(500)")]
		public string FN_LinkLocation
		{
			get
			{
				return this._FN_LinkLocation;
			}
			set
			{
				if ((this._FN_LinkLocation != value))
				{
					this.OnFN_LinkLocationChanging(value);
					this.SendPropertyChanging();
					this._FN_LinkLocation = value;
					this.SendPropertyChanged("FN_LinkLocation");
					this.OnFN_LinkLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FN_Status", DbType="Bit NOT NULL")]
		public bool FN_Status
		{
			get
			{
				return this._FN_Status;
			}
			set
			{
				if ((this._FN_Status != value))
				{
					this.OnFN_StatusChanging(value);
					this.SendPropertyChanging();
					this._FN_Status = value;
					this.SendPropertyChanged("FN_Status");
					this.OnFN_StatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleFunction")]
	public partial class RoleFunction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RF_FunID;
		
		private int _RF_RoleID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRF_FunIDChanging(string value);
    partial void OnRF_FunIDChanged();
    partial void OnRF_RoleIDChanging(int value);
    partial void OnRF_RoleIDChanged();
    #endregion
		
		public RoleFunction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RF_FunID", DbType="VarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RF_FunID
		{
			get
			{
				return this._RF_FunID;
			}
			set
			{
				if ((this._RF_FunID != value))
				{
					this.OnRF_FunIDChanging(value);
					this.SendPropertyChanging();
					this._RF_FunID = value;
					this.SendPropertyChanged("RF_FunID");
					this.OnRF_FunIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RF_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RF_RoleID
		{
			get
			{
				return this._RF_RoleID;
			}
			set
			{
				if ((this._RF_RoleID != value))
				{
					this.OnRF_RoleIDChanging(value);
					this.SendPropertyChanging();
					this._RF_RoleID = value;
					this.SendPropertyChanged("RF_RoleID");
					this.OnRF_RoleIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuyHistory")]
	public partial class BuyHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BH_ID;
		
		private int _BH_AnalogNo;
		
		private string _BH_Buyer;
		
		private double _BH_Moneyqty;
		
		private double _BH_Buyqty;
		
		private string _BH_OperType;
		
		private System.DateTime _BH_Buydate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBH_IDChanging(int value);
    partial void OnBH_IDChanged();
    partial void OnBH_AnalogNoChanging(int value);
    partial void OnBH_AnalogNoChanged();
    partial void OnBH_BuyerChanging(string value);
    partial void OnBH_BuyerChanged();
    partial void OnBH_MoneyqtyChanging(double value);
    partial void OnBH_MoneyqtyChanged();
    partial void OnBH_BuyqtyChanging(double value);
    partial void OnBH_BuyqtyChanged();
    partial void OnBH_OperTypeChanging(string value);
    partial void OnBH_OperTypeChanged();
    partial void OnBH_BuydateChanging(System.DateTime value);
    partial void OnBH_BuydateChanged();
    #endregion
		
		public BuyHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BH_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BH_ID
		{
			get
			{
				return this._BH_ID;
			}
			set
			{
				if ((this._BH_ID != value))
				{
					this.OnBH_IDChanging(value);
					this.SendPropertyChanging();
					this._BH_ID = value;
					this.SendPropertyChanged("BH_ID");
					this.OnBH_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BH_AnalogNo", DbType="Int NOT NULL")]
		public int BH_AnalogNo
		{
			get
			{
				return this._BH_AnalogNo;
			}
			set
			{
				if ((this._BH_AnalogNo != value))
				{
					this.OnBH_AnalogNoChanging(value);
					this.SendPropertyChanging();
					this._BH_AnalogNo = value;
					this.SendPropertyChanged("BH_AnalogNo");
					this.OnBH_AnalogNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BH_Buyer", DbType="VarChar(500)")]
		public string BH_Buyer
		{
			get
			{
				return this._BH_Buyer;
			}
			set
			{
				if ((this._BH_Buyer != value))
				{
					this.OnBH_BuyerChanging(value);
					this.SendPropertyChanging();
					this._BH_Buyer = value;
					this.SendPropertyChanged("BH_Buyer");
					this.OnBH_BuyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BH_Moneyqty", DbType="Float NOT NULL")]
		public double BH_Moneyqty
		{
			get
			{
				return this._BH_Moneyqty;
			}
			set
			{
				if ((this._BH_Moneyqty != value))
				{
					this.OnBH_MoneyqtyChanging(value);
					this.SendPropertyChanging();
					this._BH_Moneyqty = value;
					this.SendPropertyChanged("BH_Moneyqty");
					this.OnBH_MoneyqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BH_Buyqty", DbType="Float NOT NULL")]
		public double BH_Buyqty
		{
			get
			{
				return this._BH_Buyqty;
			}
			set
			{
				if ((this._BH_Buyqty != value))
				{
					this.OnBH_BuyqtyChanging(value);
					this.SendPropertyChanging();
					this._BH_Buyqty = value;
					this.SendPropertyChanged("BH_Buyqty");
					this.OnBH_BuyqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BH_OperType", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string BH_OperType
		{
			get
			{
				return this._BH_OperType;
			}
			set
			{
				if ((this._BH_OperType != value))
				{
					this.OnBH_OperTypeChanging(value);
					this.SendPropertyChanging();
					this._BH_OperType = value;
					this.SendPropertyChanged("BH_OperType");
					this.OnBH_OperTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BH_Buydate", DbType="DateTime NOT NULL")]
		public System.DateTime BH_Buydate
		{
			get
			{
				return this._BH_Buydate;
			}
			set
			{
				if ((this._BH_Buydate != value))
				{
					this.OnBH_BuydateChanging(value);
					this.SendPropertyChanging();
					this._BH_Buydate = value;
					this.SendPropertyChanged("BH_Buydate");
					this.OnBH_BuydateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WaterPumpDetail")]
	public partial class WaterPumpDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WPD_ID;
		
		private int _BDI_ID;
		
		private string _WPD_WaterPumCode;
		
		private string _WPD_Type;
		
		private System.Nullable<int> _WPD_Num;
		
		private System.Nullable<double> _WPD_Flow;
		
		private System.Nullable<double> _WPD_Lifting;
		
		private System.Nullable<double> _WPD_Power;
		
		private System.Nullable<double> _WPD_YearRuntime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWPD_IDChanging(int value);
    partial void OnWPD_IDChanged();
    partial void OnBDI_IDChanging(int value);
    partial void OnBDI_IDChanged();
    partial void OnWPD_WaterPumCodeChanging(string value);
    partial void OnWPD_WaterPumCodeChanged();
    partial void OnWPD_TypeChanging(string value);
    partial void OnWPD_TypeChanged();
    partial void OnWPD_NumChanging(System.Nullable<int> value);
    partial void OnWPD_NumChanged();
    partial void OnWPD_FlowChanging(System.Nullable<double> value);
    partial void OnWPD_FlowChanged();
    partial void OnWPD_LiftingChanging(System.Nullable<double> value);
    partial void OnWPD_LiftingChanged();
    partial void OnWPD_PowerChanging(System.Nullable<double> value);
    partial void OnWPD_PowerChanged();
    partial void OnWPD_YearRuntimeChanging(System.Nullable<double> value);
    partial void OnWPD_YearRuntimeChanged();
    #endregion
		
		public WaterPumpDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPD_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WPD_ID
		{
			get
			{
				return this._WPD_ID;
			}
			set
			{
				if ((this._WPD_ID != value))
				{
					this.OnWPD_IDChanging(value);
					this.SendPropertyChanging();
					this._WPD_ID = value;
					this.SendPropertyChanged("WPD_ID");
					this.OnWPD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ID", DbType="Int NOT NULL")]
		public int BDI_ID
		{
			get
			{
				return this._BDI_ID;
			}
			set
			{
				if ((this._BDI_ID != value))
				{
					this.OnBDI_IDChanging(value);
					this.SendPropertyChanging();
					this._BDI_ID = value;
					this.SendPropertyChanged("BDI_ID");
					this.OnBDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPD_WaterPumCode", DbType="VarChar(500)")]
		public string WPD_WaterPumCode
		{
			get
			{
				return this._WPD_WaterPumCode;
			}
			set
			{
				if ((this._WPD_WaterPumCode != value))
				{
					this.OnWPD_WaterPumCodeChanging(value);
					this.SendPropertyChanging();
					this._WPD_WaterPumCode = value;
					this.SendPropertyChanged("WPD_WaterPumCode");
					this.OnWPD_WaterPumCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPD_Type", DbType="VarChar(500)")]
		public string WPD_Type
		{
			get
			{
				return this._WPD_Type;
			}
			set
			{
				if ((this._WPD_Type != value))
				{
					this.OnWPD_TypeChanging(value);
					this.SendPropertyChanging();
					this._WPD_Type = value;
					this.SendPropertyChanged("WPD_Type");
					this.OnWPD_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPD_Num", DbType="Int")]
		public System.Nullable<int> WPD_Num
		{
			get
			{
				return this._WPD_Num;
			}
			set
			{
				if ((this._WPD_Num != value))
				{
					this.OnWPD_NumChanging(value);
					this.SendPropertyChanging();
					this._WPD_Num = value;
					this.SendPropertyChanged("WPD_Num");
					this.OnWPD_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPD_Flow", DbType="Float")]
		public System.Nullable<double> WPD_Flow
		{
			get
			{
				return this._WPD_Flow;
			}
			set
			{
				if ((this._WPD_Flow != value))
				{
					this.OnWPD_FlowChanging(value);
					this.SendPropertyChanging();
					this._WPD_Flow = value;
					this.SendPropertyChanged("WPD_Flow");
					this.OnWPD_FlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPD_Lifting", DbType="Float")]
		public System.Nullable<double> WPD_Lifting
		{
			get
			{
				return this._WPD_Lifting;
			}
			set
			{
				if ((this._WPD_Lifting != value))
				{
					this.OnWPD_LiftingChanging(value);
					this.SendPropertyChanging();
					this._WPD_Lifting = value;
					this.SendPropertyChanged("WPD_Lifting");
					this.OnWPD_LiftingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPD_Power", DbType="Float")]
		public System.Nullable<double> WPD_Power
		{
			get
			{
				return this._WPD_Power;
			}
			set
			{
				if ((this._WPD_Power != value))
				{
					this.OnWPD_PowerChanging(value);
					this.SendPropertyChanging();
					this._WPD_Power = value;
					this.SendPropertyChanged("WPD_Power");
					this.OnWPD_PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPD_YearRuntime", DbType="Float")]
		public System.Nullable<double> WPD_YearRuntime
		{
			get
			{
				return this._WPD_YearRuntime;
			}
			set
			{
				if ((this._WPD_YearRuntime != value))
				{
					this.OnWPD_YearRuntimeChanging(value);
					this.SendPropertyChanging();
					this._WPD_YearRuntime = value;
					this.SendPropertyChanged("WPD_YearRuntime");
					this.OnWPD_YearRuntimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WindMachDetail")]
	public partial class WindMachDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WMD_ID;
		
		private int _BDI_ID;
		
		private string _WMD_WindMachCode;
		
		private string _WMD_Type;
		
		private System.Nullable<int> _WMD_Num;
		
		private System.Nullable<double> _WMD_windAmount;
		
		private System.Nullable<double> _WMD_Intensity;
		
		private System.Nullable<double> _WMD_Power;
		
		private System.Nullable<double> _WMD_YearRuntime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWMD_IDChanging(int value);
    partial void OnWMD_IDChanged();
    partial void OnBDI_IDChanging(int value);
    partial void OnBDI_IDChanged();
    partial void OnWMD_WindMachCodeChanging(string value);
    partial void OnWMD_WindMachCodeChanged();
    partial void OnWMD_TypeChanging(string value);
    partial void OnWMD_TypeChanged();
    partial void OnWMD_NumChanging(System.Nullable<int> value);
    partial void OnWMD_NumChanged();
    partial void OnWMD_windAmountChanging(System.Nullable<double> value);
    partial void OnWMD_windAmountChanged();
    partial void OnWMD_IntensityChanging(System.Nullable<double> value);
    partial void OnWMD_IntensityChanged();
    partial void OnWMD_PowerChanging(System.Nullable<double> value);
    partial void OnWMD_PowerChanged();
    partial void OnWMD_YearRuntimeChanging(System.Nullable<double> value);
    partial void OnWMD_YearRuntimeChanged();
    #endregion
		
		public WindMachDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMD_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WMD_ID
		{
			get
			{
				return this._WMD_ID;
			}
			set
			{
				if ((this._WMD_ID != value))
				{
					this.OnWMD_IDChanging(value);
					this.SendPropertyChanging();
					this._WMD_ID = value;
					this.SendPropertyChanged("WMD_ID");
					this.OnWMD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ID", DbType="Int NOT NULL")]
		public int BDI_ID
		{
			get
			{
				return this._BDI_ID;
			}
			set
			{
				if ((this._BDI_ID != value))
				{
					this.OnBDI_IDChanging(value);
					this.SendPropertyChanging();
					this._BDI_ID = value;
					this.SendPropertyChanged("BDI_ID");
					this.OnBDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMD_WindMachCode", DbType="VarChar(500)")]
		public string WMD_WindMachCode
		{
			get
			{
				return this._WMD_WindMachCode;
			}
			set
			{
				if ((this._WMD_WindMachCode != value))
				{
					this.OnWMD_WindMachCodeChanging(value);
					this.SendPropertyChanging();
					this._WMD_WindMachCode = value;
					this.SendPropertyChanged("WMD_WindMachCode");
					this.OnWMD_WindMachCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMD_Type", DbType="VarChar(500)")]
		public string WMD_Type
		{
			get
			{
				return this._WMD_Type;
			}
			set
			{
				if ((this._WMD_Type != value))
				{
					this.OnWMD_TypeChanging(value);
					this.SendPropertyChanging();
					this._WMD_Type = value;
					this.SendPropertyChanged("WMD_Type");
					this.OnWMD_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMD_Num", DbType="Int")]
		public System.Nullable<int> WMD_Num
		{
			get
			{
				return this._WMD_Num;
			}
			set
			{
				if ((this._WMD_Num != value))
				{
					this.OnWMD_NumChanging(value);
					this.SendPropertyChanging();
					this._WMD_Num = value;
					this.SendPropertyChanged("WMD_Num");
					this.OnWMD_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMD_windAmount", DbType="Float")]
		public System.Nullable<double> WMD_windAmount
		{
			get
			{
				return this._WMD_windAmount;
			}
			set
			{
				if ((this._WMD_windAmount != value))
				{
					this.OnWMD_windAmountChanging(value);
					this.SendPropertyChanging();
					this._WMD_windAmount = value;
					this.SendPropertyChanged("WMD_windAmount");
					this.OnWMD_windAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMD_Intensity", DbType="Float")]
		public System.Nullable<double> WMD_Intensity
		{
			get
			{
				return this._WMD_Intensity;
			}
			set
			{
				if ((this._WMD_Intensity != value))
				{
					this.OnWMD_IntensityChanging(value);
					this.SendPropertyChanging();
					this._WMD_Intensity = value;
					this.SendPropertyChanged("WMD_Intensity");
					this.OnWMD_IntensityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMD_Power", DbType="Float")]
		public System.Nullable<double> WMD_Power
		{
			get
			{
				return this._WMD_Power;
			}
			set
			{
				if ((this._WMD_Power != value))
				{
					this.OnWMD_PowerChanging(value);
					this.SendPropertyChanging();
					this._WMD_Power = value;
					this.SendPropertyChanged("WMD_Power");
					this.OnWMD_PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMD_YearRuntime", DbType="Float")]
		public System.Nullable<double> WMD_YearRuntime
		{
			get
			{
				return this._WMD_YearRuntime;
			}
			set
			{
				if ((this._WMD_YearRuntime != value))
				{
					this.OnWMD_YearRuntimeChanging(value);
					this.SendPropertyChanging();
					this._WMD_YearRuntime = value;
					this.SendPropertyChanged("WMD_YearRuntime");
					this.OnWMD_YearRuntimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KitchenEquipDetail")]
	public partial class KitchenEquipDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KED_ID;
		
		private int _BDI_ID;
		
		private string _KED_KitchenEquipCode;
		
		private string _KED_Type;
		
		private System.Nullable<int> _KED_Num;
		
		private string _KED_FuelType;
		
		private System.Nullable<double> _KED_Consumption;
		
		private System.Nullable<double> _KED_Power;
		
		private System.Nullable<double> _KED_YearRuntime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKED_IDChanging(int value);
    partial void OnKED_IDChanged();
    partial void OnBDI_IDChanging(int value);
    partial void OnBDI_IDChanged();
    partial void OnKED_KitchenEquipCodeChanging(string value);
    partial void OnKED_KitchenEquipCodeChanged();
    partial void OnKED_TypeChanging(string value);
    partial void OnKED_TypeChanged();
    partial void OnKED_NumChanging(System.Nullable<int> value);
    partial void OnKED_NumChanged();
    partial void OnKED_FuelTypeChanging(string value);
    partial void OnKED_FuelTypeChanged();
    partial void OnKED_ConsumptionChanging(System.Nullable<double> value);
    partial void OnKED_ConsumptionChanged();
    partial void OnKED_PowerChanging(System.Nullable<double> value);
    partial void OnKED_PowerChanged();
    partial void OnKED_YearRuntimeChanging(System.Nullable<double> value);
    partial void OnKED_YearRuntimeChanged();
    #endregion
		
		public KitchenEquipDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KED_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KED_ID
		{
			get
			{
				return this._KED_ID;
			}
			set
			{
				if ((this._KED_ID != value))
				{
					this.OnKED_IDChanging(value);
					this.SendPropertyChanging();
					this._KED_ID = value;
					this.SendPropertyChanged("KED_ID");
					this.OnKED_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ID", DbType="Int NOT NULL")]
		public int BDI_ID
		{
			get
			{
				return this._BDI_ID;
			}
			set
			{
				if ((this._BDI_ID != value))
				{
					this.OnBDI_IDChanging(value);
					this.SendPropertyChanging();
					this._BDI_ID = value;
					this.SendPropertyChanged("BDI_ID");
					this.OnBDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KED_KitchenEquipCode", DbType="VarChar(500)")]
		public string KED_KitchenEquipCode
		{
			get
			{
				return this._KED_KitchenEquipCode;
			}
			set
			{
				if ((this._KED_KitchenEquipCode != value))
				{
					this.OnKED_KitchenEquipCodeChanging(value);
					this.SendPropertyChanging();
					this._KED_KitchenEquipCode = value;
					this.SendPropertyChanged("KED_KitchenEquipCode");
					this.OnKED_KitchenEquipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KED_Type", DbType="VarChar(500)")]
		public string KED_Type
		{
			get
			{
				return this._KED_Type;
			}
			set
			{
				if ((this._KED_Type != value))
				{
					this.OnKED_TypeChanging(value);
					this.SendPropertyChanging();
					this._KED_Type = value;
					this.SendPropertyChanged("KED_Type");
					this.OnKED_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KED_Num", DbType="Int")]
		public System.Nullable<int> KED_Num
		{
			get
			{
				return this._KED_Num;
			}
			set
			{
				if ((this._KED_Num != value))
				{
					this.OnKED_NumChanging(value);
					this.SendPropertyChanging();
					this._KED_Num = value;
					this.SendPropertyChanged("KED_Num");
					this.OnKED_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KED_FuelType", DbType="VarChar(500)")]
		public string KED_FuelType
		{
			get
			{
				return this._KED_FuelType;
			}
			set
			{
				if ((this._KED_FuelType != value))
				{
					this.OnKED_FuelTypeChanging(value);
					this.SendPropertyChanging();
					this._KED_FuelType = value;
					this.SendPropertyChanged("KED_FuelType");
					this.OnKED_FuelTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KED_Consumption", DbType="Float")]
		public System.Nullable<double> KED_Consumption
		{
			get
			{
				return this._KED_Consumption;
			}
			set
			{
				if ((this._KED_Consumption != value))
				{
					this.OnKED_ConsumptionChanging(value);
					this.SendPropertyChanging();
					this._KED_Consumption = value;
					this.SendPropertyChanged("KED_Consumption");
					this.OnKED_ConsumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KED_Power", DbType="Float")]
		public System.Nullable<double> KED_Power
		{
			get
			{
				return this._KED_Power;
			}
			set
			{
				if ((this._KED_Power != value))
				{
					this.OnKED_PowerChanging(value);
					this.SendPropertyChanging();
					this._KED_Power = value;
					this.SendPropertyChanged("KED_Power");
					this.OnKED_PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KED_YearRuntime", DbType="Float")]
		public System.Nullable<double> KED_YearRuntime
		{
			get
			{
				return this._KED_YearRuntime;
			}
			set
			{
				if ((this._KED_YearRuntime != value))
				{
					this.OnKED_YearRuntimeChanging(value);
					this.SendPropertyChanging();
					this._KED_YearRuntime = value;
					this.SendPropertyChanged("KED_YearRuntime");
					this.OnKED_YearRuntimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuildingAppendix")]
	public partial class BuildingAppendix : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BA_ID;
		
		private int _BDI_ID;
		
		private string _BA_AppendixNo;
		
		private string _BA_Name;
		
		private string _BA_Type;
		
		private string _BA_Num;
		
		private string _BA_ManufacturerAndModel;
		
		private System.Nullable<double> _BA_CoolingCapacity;
		
		private System.Nullable<double> _BA_HeatingCapacity;
		
		private System.Nullable<double> _BA_Power;
		
		private System.Nullable<double> _BA_PowerSource;
		
		private System.Nullable<double> _BA_WorkPerDay;
		
		private System.Nullable<double> _BA_WorkPerYear;
		
		private System.Nullable<double> _BA_AirVolume;
		
		private System.Nullable<double> _BA_WindPressure;
		
		private string _BA_DayWorkStart;
		
		private string _BA_DayWorkEnd;
		
		private System.Nullable<double> _BA_AverageLoadRate;
		
		private System.Nullable<double> _BA_CoolingWater;
		
		private System.Nullable<double> _BA_Flow;
		
		private System.Nullable<double> _BA_Lifting;
		
		private System.Nullable<double> _BA_CoolingPower;
		
		private System.Nullable<double> _BA_HeatingPower;
		
		private System.Nullable<double> _BA_FuelConsumption;
		
		private System.Nullable<double> _BA_CoolingWaterCapacity;
		
		private System.Nullable<double> _BA_BoilerEfficiency;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBA_IDChanging(int value);
    partial void OnBA_IDChanged();
    partial void OnBDI_IDChanging(int value);
    partial void OnBDI_IDChanged();
    partial void OnBA_AppendixNoChanging(string value);
    partial void OnBA_AppendixNoChanged();
    partial void OnBA_NameChanging(string value);
    partial void OnBA_NameChanged();
    partial void OnBA_TypeChanging(string value);
    partial void OnBA_TypeChanged();
    partial void OnBA_NumChanging(string value);
    partial void OnBA_NumChanged();
    partial void OnBA_ManufacturerAndModelChanging(string value);
    partial void OnBA_ManufacturerAndModelChanged();
    partial void OnBA_CoolingCapacityChanging(System.Nullable<double> value);
    partial void OnBA_CoolingCapacityChanged();
    partial void OnBA_HeatingCapacityChanging(System.Nullable<double> value);
    partial void OnBA_HeatingCapacityChanged();
    partial void OnBA_PowerChanging(System.Nullable<double> value);
    partial void OnBA_PowerChanged();
    partial void OnBA_PowerSourceChanging(System.Nullable<double> value);
    partial void OnBA_PowerSourceChanged();
    partial void OnBA_WorkPerDayChanging(System.Nullable<double> value);
    partial void OnBA_WorkPerDayChanged();
    partial void OnBA_WorkPerYearChanging(System.Nullable<double> value);
    partial void OnBA_WorkPerYearChanged();
    partial void OnBA_AirVolumeChanging(System.Nullable<double> value);
    partial void OnBA_AirVolumeChanged();
    partial void OnBA_WindPressureChanging(System.Nullable<double> value);
    partial void OnBA_WindPressureChanged();
    partial void OnBA_DayWorkStartChanging(string value);
    partial void OnBA_DayWorkStartChanged();
    partial void OnBA_DayWorkEndChanging(string value);
    partial void OnBA_DayWorkEndChanged();
    partial void OnBA_AverageLoadRateChanging(System.Nullable<double> value);
    partial void OnBA_AverageLoadRateChanged();
    partial void OnBA_CoolingWaterChanging(System.Nullable<double> value);
    partial void OnBA_CoolingWaterChanged();
    partial void OnBA_FlowChanging(System.Nullable<double> value);
    partial void OnBA_FlowChanged();
    partial void OnBA_LiftingChanging(System.Nullable<double> value);
    partial void OnBA_LiftingChanged();
    partial void OnBA_CoolingPowerChanging(System.Nullable<double> value);
    partial void OnBA_CoolingPowerChanged();
    partial void OnBA_HeatingPowerChanging(System.Nullable<double> value);
    partial void OnBA_HeatingPowerChanged();
    partial void OnBA_FuelConsumptionChanging(System.Nullable<double> value);
    partial void OnBA_FuelConsumptionChanged();
    partial void OnBA_CoolingWaterCapacityChanging(System.Nullable<double> value);
    partial void OnBA_CoolingWaterCapacityChanged();
    partial void OnBA_BoilerEfficiencyChanging(System.Nullable<double> value);
    partial void OnBA_BoilerEfficiencyChanged();
    #endregion
		
		public BuildingAppendix()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BA_ID
		{
			get
			{
				return this._BA_ID;
			}
			set
			{
				if ((this._BA_ID != value))
				{
					this.OnBA_IDChanging(value);
					this.SendPropertyChanging();
					this._BA_ID = value;
					this.SendPropertyChanged("BA_ID");
					this.OnBA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ID", DbType="Int NOT NULL")]
		public int BDI_ID
		{
			get
			{
				return this._BDI_ID;
			}
			set
			{
				if ((this._BDI_ID != value))
				{
					this.OnBDI_IDChanging(value);
					this.SendPropertyChanging();
					this._BDI_ID = value;
					this.SendPropertyChanged("BDI_ID");
					this.OnBDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_AppendixNo", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string BA_AppendixNo
		{
			get
			{
				return this._BA_AppendixNo;
			}
			set
			{
				if ((this._BA_AppendixNo != value))
				{
					this.OnBA_AppendixNoChanging(value);
					this.SendPropertyChanging();
					this._BA_AppendixNo = value;
					this.SendPropertyChanged("BA_AppendixNo");
					this.OnBA_AppendixNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_Name", DbType="VarChar(500)")]
		public string BA_Name
		{
			get
			{
				return this._BA_Name;
			}
			set
			{
				if ((this._BA_Name != value))
				{
					this.OnBA_NameChanging(value);
					this.SendPropertyChanging();
					this._BA_Name = value;
					this.SendPropertyChanged("BA_Name");
					this.OnBA_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_Type", DbType="VarChar(500)")]
		public string BA_Type
		{
			get
			{
				return this._BA_Type;
			}
			set
			{
				if ((this._BA_Type != value))
				{
					this.OnBA_TypeChanging(value);
					this.SendPropertyChanging();
					this._BA_Type = value;
					this.SendPropertyChanged("BA_Type");
					this.OnBA_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_Num", DbType="VarChar(500)")]
		public string BA_Num
		{
			get
			{
				return this._BA_Num;
			}
			set
			{
				if ((this._BA_Num != value))
				{
					this.OnBA_NumChanging(value);
					this.SendPropertyChanging();
					this._BA_Num = value;
					this.SendPropertyChanged("BA_Num");
					this.OnBA_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_ManufacturerAndModel", DbType="VarChar(500)")]
		public string BA_ManufacturerAndModel
		{
			get
			{
				return this._BA_ManufacturerAndModel;
			}
			set
			{
				if ((this._BA_ManufacturerAndModel != value))
				{
					this.OnBA_ManufacturerAndModelChanging(value);
					this.SendPropertyChanging();
					this._BA_ManufacturerAndModel = value;
					this.SendPropertyChanged("BA_ManufacturerAndModel");
					this.OnBA_ManufacturerAndModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_CoolingCapacity", DbType="Float")]
		public System.Nullable<double> BA_CoolingCapacity
		{
			get
			{
				return this._BA_CoolingCapacity;
			}
			set
			{
				if ((this._BA_CoolingCapacity != value))
				{
					this.OnBA_CoolingCapacityChanging(value);
					this.SendPropertyChanging();
					this._BA_CoolingCapacity = value;
					this.SendPropertyChanged("BA_CoolingCapacity");
					this.OnBA_CoolingCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_HeatingCapacity", DbType="Float")]
		public System.Nullable<double> BA_HeatingCapacity
		{
			get
			{
				return this._BA_HeatingCapacity;
			}
			set
			{
				if ((this._BA_HeatingCapacity != value))
				{
					this.OnBA_HeatingCapacityChanging(value);
					this.SendPropertyChanging();
					this._BA_HeatingCapacity = value;
					this.SendPropertyChanged("BA_HeatingCapacity");
					this.OnBA_HeatingCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_Power", DbType="Float")]
		public System.Nullable<double> BA_Power
		{
			get
			{
				return this._BA_Power;
			}
			set
			{
				if ((this._BA_Power != value))
				{
					this.OnBA_PowerChanging(value);
					this.SendPropertyChanging();
					this._BA_Power = value;
					this.SendPropertyChanged("BA_Power");
					this.OnBA_PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_PowerSource", DbType="Float")]
		public System.Nullable<double> BA_PowerSource
		{
			get
			{
				return this._BA_PowerSource;
			}
			set
			{
				if ((this._BA_PowerSource != value))
				{
					this.OnBA_PowerSourceChanging(value);
					this.SendPropertyChanging();
					this._BA_PowerSource = value;
					this.SendPropertyChanged("BA_PowerSource");
					this.OnBA_PowerSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_WorkPerDay", DbType="Float")]
		public System.Nullable<double> BA_WorkPerDay
		{
			get
			{
				return this._BA_WorkPerDay;
			}
			set
			{
				if ((this._BA_WorkPerDay != value))
				{
					this.OnBA_WorkPerDayChanging(value);
					this.SendPropertyChanging();
					this._BA_WorkPerDay = value;
					this.SendPropertyChanged("BA_WorkPerDay");
					this.OnBA_WorkPerDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_WorkPerYear", DbType="Float")]
		public System.Nullable<double> BA_WorkPerYear
		{
			get
			{
				return this._BA_WorkPerYear;
			}
			set
			{
				if ((this._BA_WorkPerYear != value))
				{
					this.OnBA_WorkPerYearChanging(value);
					this.SendPropertyChanging();
					this._BA_WorkPerYear = value;
					this.SendPropertyChanged("BA_WorkPerYear");
					this.OnBA_WorkPerYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_AirVolume", DbType="Float")]
		public System.Nullable<double> BA_AirVolume
		{
			get
			{
				return this._BA_AirVolume;
			}
			set
			{
				if ((this._BA_AirVolume != value))
				{
					this.OnBA_AirVolumeChanging(value);
					this.SendPropertyChanging();
					this._BA_AirVolume = value;
					this.SendPropertyChanged("BA_AirVolume");
					this.OnBA_AirVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_WindPressure", DbType="Float")]
		public System.Nullable<double> BA_WindPressure
		{
			get
			{
				return this._BA_WindPressure;
			}
			set
			{
				if ((this._BA_WindPressure != value))
				{
					this.OnBA_WindPressureChanging(value);
					this.SendPropertyChanging();
					this._BA_WindPressure = value;
					this.SendPropertyChanged("BA_WindPressure");
					this.OnBA_WindPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_DayWorkStart", DbType="VarChar(500)")]
		public string BA_DayWorkStart
		{
			get
			{
				return this._BA_DayWorkStart;
			}
			set
			{
				if ((this._BA_DayWorkStart != value))
				{
					this.OnBA_DayWorkStartChanging(value);
					this.SendPropertyChanging();
					this._BA_DayWorkStart = value;
					this.SendPropertyChanged("BA_DayWorkStart");
					this.OnBA_DayWorkStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_DayWorkEnd", DbType="VarChar(500)")]
		public string BA_DayWorkEnd
		{
			get
			{
				return this._BA_DayWorkEnd;
			}
			set
			{
				if ((this._BA_DayWorkEnd != value))
				{
					this.OnBA_DayWorkEndChanging(value);
					this.SendPropertyChanging();
					this._BA_DayWorkEnd = value;
					this.SendPropertyChanged("BA_DayWorkEnd");
					this.OnBA_DayWorkEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_AverageLoadRate", DbType="Float")]
		public System.Nullable<double> BA_AverageLoadRate
		{
			get
			{
				return this._BA_AverageLoadRate;
			}
			set
			{
				if ((this._BA_AverageLoadRate != value))
				{
					this.OnBA_AverageLoadRateChanging(value);
					this.SendPropertyChanging();
					this._BA_AverageLoadRate = value;
					this.SendPropertyChanged("BA_AverageLoadRate");
					this.OnBA_AverageLoadRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_CoolingWater", DbType="Float")]
		public System.Nullable<double> BA_CoolingWater
		{
			get
			{
				return this._BA_CoolingWater;
			}
			set
			{
				if ((this._BA_CoolingWater != value))
				{
					this.OnBA_CoolingWaterChanging(value);
					this.SendPropertyChanging();
					this._BA_CoolingWater = value;
					this.SendPropertyChanged("BA_CoolingWater");
					this.OnBA_CoolingWaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_Flow", DbType="Float")]
		public System.Nullable<double> BA_Flow
		{
			get
			{
				return this._BA_Flow;
			}
			set
			{
				if ((this._BA_Flow != value))
				{
					this.OnBA_FlowChanging(value);
					this.SendPropertyChanging();
					this._BA_Flow = value;
					this.SendPropertyChanged("BA_Flow");
					this.OnBA_FlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_Lifting", DbType="Float")]
		public System.Nullable<double> BA_Lifting
		{
			get
			{
				return this._BA_Lifting;
			}
			set
			{
				if ((this._BA_Lifting != value))
				{
					this.OnBA_LiftingChanging(value);
					this.SendPropertyChanging();
					this._BA_Lifting = value;
					this.SendPropertyChanged("BA_Lifting");
					this.OnBA_LiftingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_CoolingPower", DbType="Float")]
		public System.Nullable<double> BA_CoolingPower
		{
			get
			{
				return this._BA_CoolingPower;
			}
			set
			{
				if ((this._BA_CoolingPower != value))
				{
					this.OnBA_CoolingPowerChanging(value);
					this.SendPropertyChanging();
					this._BA_CoolingPower = value;
					this.SendPropertyChanged("BA_CoolingPower");
					this.OnBA_CoolingPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_HeatingPower", DbType="Float")]
		public System.Nullable<double> BA_HeatingPower
		{
			get
			{
				return this._BA_HeatingPower;
			}
			set
			{
				if ((this._BA_HeatingPower != value))
				{
					this.OnBA_HeatingPowerChanging(value);
					this.SendPropertyChanging();
					this._BA_HeatingPower = value;
					this.SendPropertyChanged("BA_HeatingPower");
					this.OnBA_HeatingPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_FuelConsumption", DbType="Float")]
		public System.Nullable<double> BA_FuelConsumption
		{
			get
			{
				return this._BA_FuelConsumption;
			}
			set
			{
				if ((this._BA_FuelConsumption != value))
				{
					this.OnBA_FuelConsumptionChanging(value);
					this.SendPropertyChanging();
					this._BA_FuelConsumption = value;
					this.SendPropertyChanged("BA_FuelConsumption");
					this.OnBA_FuelConsumptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_CoolingWaterCapacity", DbType="Float")]
		public System.Nullable<double> BA_CoolingWaterCapacity
		{
			get
			{
				return this._BA_CoolingWaterCapacity;
			}
			set
			{
				if ((this._BA_CoolingWaterCapacity != value))
				{
					this.OnBA_CoolingWaterCapacityChanging(value);
					this.SendPropertyChanging();
					this._BA_CoolingWaterCapacity = value;
					this.SendPropertyChanged("BA_CoolingWaterCapacity");
					this.OnBA_CoolingWaterCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BA_BoilerEfficiency", DbType="Float")]
		public System.Nullable<double> BA_BoilerEfficiency
		{
			get
			{
				return this._BA_BoilerEfficiency;
			}
			set
			{
				if ((this._BA_BoilerEfficiency != value))
				{
					this.OnBA_BoilerEfficiencyChanging(value);
					this.SendPropertyChanging();
					this._BA_BoilerEfficiency = value;
					this.SendPropertyChanged("BA_BoilerEfficiency");
					this.OnBA_BoilerEfficiencyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LightDetail")]
	public partial class LightDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LD_ID;
		
		private int _BDI_ID;
		
		private string _LD_LightCode;
		
		private string _LD_Region;
		
		private System.Nullable<double> _LD_Area;
		
		private string _LD_Type;
		
		private System.Nullable<int> _LD_Num;
		
		private System.Nullable<double> _LD_Power;
		
		private System.Nullable<double> _LD_Dgree;
		
		private string _LD_Start;
		
		private string _LD_End;
		
		private string _LD_Mode;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLD_IDChanging(int value);
    partial void OnLD_IDChanged();
    partial void OnBDI_IDChanging(int value);
    partial void OnBDI_IDChanged();
    partial void OnLD_LightCodeChanging(string value);
    partial void OnLD_LightCodeChanged();
    partial void OnLD_RegionChanging(string value);
    partial void OnLD_RegionChanged();
    partial void OnLD_AreaChanging(System.Nullable<double> value);
    partial void OnLD_AreaChanged();
    partial void OnLD_TypeChanging(string value);
    partial void OnLD_TypeChanged();
    partial void OnLD_NumChanging(System.Nullable<int> value);
    partial void OnLD_NumChanged();
    partial void OnLD_PowerChanging(System.Nullable<double> value);
    partial void OnLD_PowerChanged();
    partial void OnLD_DgreeChanging(System.Nullable<double> value);
    partial void OnLD_DgreeChanged();
    partial void OnLD_StartChanging(string value);
    partial void OnLD_StartChanged();
    partial void OnLD_EndChanging(string value);
    partial void OnLD_EndChanged();
    partial void OnLD_ModeChanging(string value);
    partial void OnLD_ModeChanged();
    #endregion
		
		public LightDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LD_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LD_ID
		{
			get
			{
				return this._LD_ID;
			}
			set
			{
				if ((this._LD_ID != value))
				{
					this.OnLD_IDChanging(value);
					this.SendPropertyChanging();
					this._LD_ID = value;
					this.SendPropertyChanged("LD_ID");
					this.OnLD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ID", DbType="Int NOT NULL")]
		public int BDI_ID
		{
			get
			{
				return this._BDI_ID;
			}
			set
			{
				if ((this._BDI_ID != value))
				{
					this.OnBDI_IDChanging(value);
					this.SendPropertyChanging();
					this._BDI_ID = value;
					this.SendPropertyChanged("BDI_ID");
					this.OnBDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LD_LightCode", DbType="VarChar(500)")]
		public string LD_LightCode
		{
			get
			{
				return this._LD_LightCode;
			}
			set
			{
				if ((this._LD_LightCode != value))
				{
					this.OnLD_LightCodeChanging(value);
					this.SendPropertyChanging();
					this._LD_LightCode = value;
					this.SendPropertyChanged("LD_LightCode");
					this.OnLD_LightCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LD_Region", DbType="VarChar(500)")]
		public string LD_Region
		{
			get
			{
				return this._LD_Region;
			}
			set
			{
				if ((this._LD_Region != value))
				{
					this.OnLD_RegionChanging(value);
					this.SendPropertyChanging();
					this._LD_Region = value;
					this.SendPropertyChanged("LD_Region");
					this.OnLD_RegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LD_Area", DbType="Float")]
		public System.Nullable<double> LD_Area
		{
			get
			{
				return this._LD_Area;
			}
			set
			{
				if ((this._LD_Area != value))
				{
					this.OnLD_AreaChanging(value);
					this.SendPropertyChanging();
					this._LD_Area = value;
					this.SendPropertyChanged("LD_Area");
					this.OnLD_AreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LD_Type", DbType="VarChar(500)")]
		public string LD_Type
		{
			get
			{
				return this._LD_Type;
			}
			set
			{
				if ((this._LD_Type != value))
				{
					this.OnLD_TypeChanging(value);
					this.SendPropertyChanging();
					this._LD_Type = value;
					this.SendPropertyChanged("LD_Type");
					this.OnLD_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LD_Num", DbType="Int")]
		public System.Nullable<int> LD_Num
		{
			get
			{
				return this._LD_Num;
			}
			set
			{
				if ((this._LD_Num != value))
				{
					this.OnLD_NumChanging(value);
					this.SendPropertyChanging();
					this._LD_Num = value;
					this.SendPropertyChanged("LD_Num");
					this.OnLD_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LD_Power", DbType="Float")]
		public System.Nullable<double> LD_Power
		{
			get
			{
				return this._LD_Power;
			}
			set
			{
				if ((this._LD_Power != value))
				{
					this.OnLD_PowerChanging(value);
					this.SendPropertyChanging();
					this._LD_Power = value;
					this.SendPropertyChanged("LD_Power");
					this.OnLD_PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LD_Dgree", DbType="Float")]
		public System.Nullable<double> LD_Dgree
		{
			get
			{
				return this._LD_Dgree;
			}
			set
			{
				if ((this._LD_Dgree != value))
				{
					this.OnLD_DgreeChanging(value);
					this.SendPropertyChanging();
					this._LD_Dgree = value;
					this.SendPropertyChanged("LD_Dgree");
					this.OnLD_DgreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LD_Start", DbType="VarChar(500)")]
		public string LD_Start
		{
			get
			{
				return this._LD_Start;
			}
			set
			{
				if ((this._LD_Start != value))
				{
					this.OnLD_StartChanging(value);
					this.SendPropertyChanging();
					this._LD_Start = value;
					this.SendPropertyChanged("LD_Start");
					this.OnLD_StartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LD_End", DbType="VarChar(500)")]
		public string LD_End
		{
			get
			{
				return this._LD_End;
			}
			set
			{
				if ((this._LD_End != value))
				{
					this.OnLD_EndChanging(value);
					this.SendPropertyChanging();
					this._LD_End = value;
					this.SendPropertyChanged("LD_End");
					this.OnLD_EndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LD_Mode", DbType="VarChar(500)")]
		public string LD_Mode
		{
			get
			{
				return this._LD_Mode;
			}
			set
			{
				if ((this._LD_Mode != value))
				{
					this.OnLD_ModeChanging(value);
					this.SendPropertyChanging();
					this._LD_Mode = value;
					this.SendPropertyChanged("LD_Mode");
					this.OnLD_ModeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ElevatorDetail")]
	public partial class ElevatorDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ED_ID;
		
		private int _BDI_ID;
		
		private string _ED_ElevatorCode;
		
		private string _ED_SerialNum;
		
		private string _ED_Type;
		
		private string _ED_FactoryModel;
		
		private System.Nullable<double> _ED_Power;
		
		private string _ED_Start;
		
		private string _ED_End;
		
		private string _ED_Mode;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnED_IDChanging(int value);
    partial void OnED_IDChanged();
    partial void OnBDI_IDChanging(int value);
    partial void OnBDI_IDChanged();
    partial void OnED_ElevatorCodeChanging(string value);
    partial void OnED_ElevatorCodeChanged();
    partial void OnED_SerialNumChanging(string value);
    partial void OnED_SerialNumChanged();
    partial void OnED_TypeChanging(string value);
    partial void OnED_TypeChanged();
    partial void OnED_FactoryModelChanging(string value);
    partial void OnED_FactoryModelChanged();
    partial void OnED_PowerChanging(System.Nullable<double> value);
    partial void OnED_PowerChanged();
    partial void OnED_StartChanging(string value);
    partial void OnED_StartChanged();
    partial void OnED_EndChanging(string value);
    partial void OnED_EndChanged();
    partial void OnED_ModeChanging(string value);
    partial void OnED_ModeChanged();
    #endregion
		
		public ElevatorDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ED_ID
		{
			get
			{
				return this._ED_ID;
			}
			set
			{
				if ((this._ED_ID != value))
				{
					this.OnED_IDChanging(value);
					this.SendPropertyChanging();
					this._ED_ID = value;
					this.SendPropertyChanged("ED_ID");
					this.OnED_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ID", DbType="Int NOT NULL")]
		public int BDI_ID
		{
			get
			{
				return this._BDI_ID;
			}
			set
			{
				if ((this._BDI_ID != value))
				{
					this.OnBDI_IDChanging(value);
					this.SendPropertyChanging();
					this._BDI_ID = value;
					this.SendPropertyChanged("BDI_ID");
					this.OnBDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_ElevatorCode", DbType="VarChar(500)")]
		public string ED_ElevatorCode
		{
			get
			{
				return this._ED_ElevatorCode;
			}
			set
			{
				if ((this._ED_ElevatorCode != value))
				{
					this.OnED_ElevatorCodeChanging(value);
					this.SendPropertyChanging();
					this._ED_ElevatorCode = value;
					this.SendPropertyChanged("ED_ElevatorCode");
					this.OnED_ElevatorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_SerialNum", DbType="VarChar(500)")]
		public string ED_SerialNum
		{
			get
			{
				return this._ED_SerialNum;
			}
			set
			{
				if ((this._ED_SerialNum != value))
				{
					this.OnED_SerialNumChanging(value);
					this.SendPropertyChanging();
					this._ED_SerialNum = value;
					this.SendPropertyChanged("ED_SerialNum");
					this.OnED_SerialNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_Type", DbType="VarChar(500)")]
		public string ED_Type
		{
			get
			{
				return this._ED_Type;
			}
			set
			{
				if ((this._ED_Type != value))
				{
					this.OnED_TypeChanging(value);
					this.SendPropertyChanging();
					this._ED_Type = value;
					this.SendPropertyChanged("ED_Type");
					this.OnED_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_FactoryModel", DbType="VarChar(500)")]
		public string ED_FactoryModel
		{
			get
			{
				return this._ED_FactoryModel;
			}
			set
			{
				if ((this._ED_FactoryModel != value))
				{
					this.OnED_FactoryModelChanging(value);
					this.SendPropertyChanging();
					this._ED_FactoryModel = value;
					this.SendPropertyChanged("ED_FactoryModel");
					this.OnED_FactoryModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_Power", DbType="Float")]
		public System.Nullable<double> ED_Power
		{
			get
			{
				return this._ED_Power;
			}
			set
			{
				if ((this._ED_Power != value))
				{
					this.OnED_PowerChanging(value);
					this.SendPropertyChanging();
					this._ED_Power = value;
					this.SendPropertyChanged("ED_Power");
					this.OnED_PowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_Start", DbType="VarChar(500)")]
		public string ED_Start
		{
			get
			{
				return this._ED_Start;
			}
			set
			{
				if ((this._ED_Start != value))
				{
					this.OnED_StartChanging(value);
					this.SendPropertyChanging();
					this._ED_Start = value;
					this.SendPropertyChanged("ED_Start");
					this.OnED_StartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_End", DbType="VarChar(500)")]
		public string ED_End
		{
			get
			{
				return this._ED_End;
			}
			set
			{
				if ((this._ED_End != value))
				{
					this.OnED_EndChanging(value);
					this.SendPropertyChanging();
					this._ED_End = value;
					this.SendPropertyChanged("ED_End");
					this.OnED_EndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_Mode", DbType="VarChar(500)")]
		public string ED_Mode
		{
			get
			{
				return this._ED_Mode;
			}
			set
			{
				if ((this._ED_Mode != value))
				{
					this.OnED_ModeChanging(value);
					this.SendPropertyChanging();
					this._ED_Mode = value;
					this.SendPropertyChanged("ED_Mode");
					this.OnED_ModeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OfficeEquipDetail")]
	public partial class OfficeEquipDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OED_ID;
		
		private int _BDI_ID;
		
		private string _OED_OfficeEquipCode;
		
		private string _OED_Type;
		
		private System.Nullable<int> _OED_Num;
		
		private System.Nullable<double> _OED_FixedPower;
		
		private System.Nullable<double> _OED_YearPower;
		
		private string _OED_Start;
		
		private string _OED_End;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOED_IDChanging(int value);
    partial void OnOED_IDChanged();
    partial void OnBDI_IDChanging(int value);
    partial void OnBDI_IDChanged();
    partial void OnOED_OfficeEquipCodeChanging(string value);
    partial void OnOED_OfficeEquipCodeChanged();
    partial void OnOED_TypeChanging(string value);
    partial void OnOED_TypeChanged();
    partial void OnOED_NumChanging(System.Nullable<int> value);
    partial void OnOED_NumChanged();
    partial void OnOED_FixedPowerChanging(System.Nullable<double> value);
    partial void OnOED_FixedPowerChanged();
    partial void OnOED_YearPowerChanging(System.Nullable<double> value);
    partial void OnOED_YearPowerChanged();
    partial void OnOED_StartChanging(string value);
    partial void OnOED_StartChanged();
    partial void OnOED_EndChanging(string value);
    partial void OnOED_EndChanged();
    #endregion
		
		public OfficeEquipDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OED_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OED_ID
		{
			get
			{
				return this._OED_ID;
			}
			set
			{
				if ((this._OED_ID != value))
				{
					this.OnOED_IDChanging(value);
					this.SendPropertyChanging();
					this._OED_ID = value;
					this.SendPropertyChanged("OED_ID");
					this.OnOED_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ID", DbType="Int NOT NULL")]
		public int BDI_ID
		{
			get
			{
				return this._BDI_ID;
			}
			set
			{
				if ((this._BDI_ID != value))
				{
					this.OnBDI_IDChanging(value);
					this.SendPropertyChanging();
					this._BDI_ID = value;
					this.SendPropertyChanged("BDI_ID");
					this.OnBDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OED_OfficeEquipCode", DbType="VarChar(500)")]
		public string OED_OfficeEquipCode
		{
			get
			{
				return this._OED_OfficeEquipCode;
			}
			set
			{
				if ((this._OED_OfficeEquipCode != value))
				{
					this.OnOED_OfficeEquipCodeChanging(value);
					this.SendPropertyChanging();
					this._OED_OfficeEquipCode = value;
					this.SendPropertyChanged("OED_OfficeEquipCode");
					this.OnOED_OfficeEquipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OED_Type", DbType="VarChar(500)")]
		public string OED_Type
		{
			get
			{
				return this._OED_Type;
			}
			set
			{
				if ((this._OED_Type != value))
				{
					this.OnOED_TypeChanging(value);
					this.SendPropertyChanging();
					this._OED_Type = value;
					this.SendPropertyChanged("OED_Type");
					this.OnOED_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OED_Num", DbType="Int")]
		public System.Nullable<int> OED_Num
		{
			get
			{
				return this._OED_Num;
			}
			set
			{
				if ((this._OED_Num != value))
				{
					this.OnOED_NumChanging(value);
					this.SendPropertyChanging();
					this._OED_Num = value;
					this.SendPropertyChanged("OED_Num");
					this.OnOED_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OED_FixedPower", DbType="Float")]
		public System.Nullable<double> OED_FixedPower
		{
			get
			{
				return this._OED_FixedPower;
			}
			set
			{
				if ((this._OED_FixedPower != value))
				{
					this.OnOED_FixedPowerChanging(value);
					this.SendPropertyChanging();
					this._OED_FixedPower = value;
					this.SendPropertyChanged("OED_FixedPower");
					this.OnOED_FixedPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OED_YearPower", DbType="Float")]
		public System.Nullable<double> OED_YearPower
		{
			get
			{
				return this._OED_YearPower;
			}
			set
			{
				if ((this._OED_YearPower != value))
				{
					this.OnOED_YearPowerChanging(value);
					this.SendPropertyChanging();
					this._OED_YearPower = value;
					this.SendPropertyChanged("OED_YearPower");
					this.OnOED_YearPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OED_Start", DbType="VarChar(500)")]
		public string OED_Start
		{
			get
			{
				return this._OED_Start;
			}
			set
			{
				if ((this._OED_Start != value))
				{
					this.OnOED_StartChanging(value);
					this.SendPropertyChanging();
					this._OED_Start = value;
					this.SendPropertyChanged("OED_Start");
					this.OnOED_StartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OED_End", DbType="VarChar(500)")]
		public string OED_End
		{
			get
			{
				return this._OED_End;
			}
			set
			{
				if ((this._OED_End != value))
				{
					this.OnOED_EndChanging(value);
					this.SendPropertyChanging();
					this._OED_End = value;
					this.SendPropertyChanged("OED_End");
					this.OnOED_EndChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuildingDetailInfo")]
	public partial class BuildingDetailInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BDI_ID;
		
		private string _BDI_Name;
		
		private string _BDI_Code;
		
		private string _BDI_Introduction;
		
		private string _BDI_Address;
		
		private string _BDI_Academy;
		
		private string _BDI_Telephone;
		
		private string _BDI_LinkMan;
		
		private string _BDI_LinkManPhone;
		
		private string _BDI_StatMan;
		
		private string _BDI_StatManPhone;
		
		private System.Nullable<int> _BDI_RunPerWeek;
		
		private string _BDI_WeekStart;
		
		private string _BDI_WeekEnd;
		
		private System.Nullable<int> _BDI_RunPreMonth;
		
		private string _BDI_MonthStart;
		
		private string _BDI_MonthEnd;
		
		private System.Nullable<int> _BDI_RunPerYear;
		
		private string _BDI_YearStart;
		
		private string _BDI_YearEnd;
		
		private string _BDI_Holiday;
		
		private string _BDI_Date;
		
		private string _BDI_Direction;
		
		private System.Nullable<int> _BDI_Users;
		
		private System.Nullable<double> _BDI_Height;
		
		private System.Nullable<int> _BDI_FloorUp;
		
		private System.Nullable<int> _BDI_FloorDn;
		
		private System.Nullable<double> _BDI_FloorHeight;
		
		private System.Nullable<double> _BDI_Area;
		
		private System.Nullable<double> _BDI_AreaAir;
		
		private System.Nullable<double> _BDI_AreaHot;
		
		private System.Nullable<double> _BDI_AreaSpe;
		
		private System.Nullable<byte> _BDI_AauditFlag;
		
		private string _BDI_AauditDate;
		
		private System.Nullable<byte> _BDI_TransforFlag;
		
		private string _BDI_TransforContent;
		
		private string _BDI_ElectricCompName;
		
		private string _BDI_GasCompName;
		
		private System.Nullable<double> _BDI_AreaRatio;
		
		private string _BDI_Type;
		
		private string _BDI_TypeOther;
		
		private string _BDI_Structure;
		
		private string _BDI_StructureOther;
		
		private string _BDI_KindsOut;
		
		private string _BDI_KindsOutOther;
		
		private string _BDI_WarmKeep;
		
		private string _BDI_WarmKeepOther;
		
		private string _BDI_WinOut;
		
		private string _BDI_WinOutOther;
		
		private System.Nullable<byte> _BDI_VisorFlag;
		
		private string _BDI_Visor;
		
		private string _BDI_Glass;
		
		private string _BDI_GlassOther;
		
		private string _BDI_Win;
		
		private string _BDI_WinOther;
		
		private System.Nullable<double> _BDI_TemCool;
		
		private System.Nullable<double> _BDI_TemHot;
		
		private System.Nullable<double> _BDI_TemSepcialCool;
		
		private System.Nullable<double> _BDI_TemSepcialHot;
		
		private string _BDI_AirSys;
		
		private string _BDI_DevCool;
		
		private string _BDI_DevHot;
		
		private string _BDI_LiBr;
		
		private string _BDI_BoilerPower;
		
		private string _BDI_AirSplit;
		
		private string _BDI_Boiler;
		
		private string _BDI_PowerHot;
		
		private string _BDI_SteamOrWater;
		
		private string _BDI_DevOther;
		
		private string _BDI_LightCode;
		
		private string _BDI_LightIn;
		
		private string _BDI_LightOut;
		
		private System.Nullable<double> _BDI_LightOutPower;
		
		private System.Nullable<double> _BDI_LightOutWorkHours;
		
		private string _BDI_ElevatorCode;
		
		private string _BDI_WaterPumpCode;
		
		private string _BDI_WindMachCode;
		
		private string _BDI_KitchenEquipCode;
		
		private string _BDI_OfficeEquipCode;
		
		private string _BDI_ImageUrl;
		
		private string _BDI_Remark;
		
		private string _BDI_LogOperator;
		
		private System.Nullable<System.DateTime> _BDI_CreateDate;
		
		private string _BDI_UpOperator;
		
		private System.Nullable<System.DateTime> _BDI_UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBDI_IDChanging(int value);
    partial void OnBDI_IDChanged();
    partial void OnBDI_NameChanging(string value);
    partial void OnBDI_NameChanged();
    partial void OnBDI_CodeChanging(string value);
    partial void OnBDI_CodeChanged();
    partial void OnBDI_IntroductionChanging(string value);
    partial void OnBDI_IntroductionChanged();
    partial void OnBDI_AddressChanging(string value);
    partial void OnBDI_AddressChanged();
    partial void OnBDI_AcademyChanging(string value);
    partial void OnBDI_AcademyChanged();
    partial void OnBDI_TelephoneChanging(string value);
    partial void OnBDI_TelephoneChanged();
    partial void OnBDI_LinkManChanging(string value);
    partial void OnBDI_LinkManChanged();
    partial void OnBDI_LinkManPhoneChanging(string value);
    partial void OnBDI_LinkManPhoneChanged();
    partial void OnBDI_StatManChanging(string value);
    partial void OnBDI_StatManChanged();
    partial void OnBDI_StatManPhoneChanging(string value);
    partial void OnBDI_StatManPhoneChanged();
    partial void OnBDI_RunPerWeekChanging(System.Nullable<int> value);
    partial void OnBDI_RunPerWeekChanged();
    partial void OnBDI_WeekStartChanging(string value);
    partial void OnBDI_WeekStartChanged();
    partial void OnBDI_WeekEndChanging(string value);
    partial void OnBDI_WeekEndChanged();
    partial void OnBDI_RunPreMonthChanging(System.Nullable<int> value);
    partial void OnBDI_RunPreMonthChanged();
    partial void OnBDI_MonthStartChanging(string value);
    partial void OnBDI_MonthStartChanged();
    partial void OnBDI_MonthEndChanging(string value);
    partial void OnBDI_MonthEndChanged();
    partial void OnBDI_RunPerYearChanging(System.Nullable<int> value);
    partial void OnBDI_RunPerYearChanged();
    partial void OnBDI_YearStartChanging(string value);
    partial void OnBDI_YearStartChanged();
    partial void OnBDI_YearEndChanging(string value);
    partial void OnBDI_YearEndChanged();
    partial void OnBDI_HolidayChanging(string value);
    partial void OnBDI_HolidayChanged();
    partial void OnBDI_DateChanging(string value);
    partial void OnBDI_DateChanged();
    partial void OnBDI_DirectionChanging(string value);
    partial void OnBDI_DirectionChanged();
    partial void OnBDI_UsersChanging(System.Nullable<int> value);
    partial void OnBDI_UsersChanged();
    partial void OnBDI_HeightChanging(System.Nullable<double> value);
    partial void OnBDI_HeightChanged();
    partial void OnBDI_FloorUpChanging(System.Nullable<int> value);
    partial void OnBDI_FloorUpChanged();
    partial void OnBDI_FloorDnChanging(System.Nullable<int> value);
    partial void OnBDI_FloorDnChanged();
    partial void OnBDI_FloorHeightChanging(System.Nullable<double> value);
    partial void OnBDI_FloorHeightChanged();
    partial void OnBDI_AreaChanging(System.Nullable<double> value);
    partial void OnBDI_AreaChanged();
    partial void OnBDI_AreaAirChanging(System.Nullable<double> value);
    partial void OnBDI_AreaAirChanged();
    partial void OnBDI_AreaHotChanging(System.Nullable<double> value);
    partial void OnBDI_AreaHotChanged();
    partial void OnBDI_AreaSpeChanging(System.Nullable<double> value);
    partial void OnBDI_AreaSpeChanged();
    partial void OnBDI_AauditFlagChanging(System.Nullable<byte> value);
    partial void OnBDI_AauditFlagChanged();
    partial void OnBDI_AauditDateChanging(string value);
    partial void OnBDI_AauditDateChanged();
    partial void OnBDI_TransforFlagChanging(System.Nullable<byte> value);
    partial void OnBDI_TransforFlagChanged();
    partial void OnBDI_TransforContentChanging(string value);
    partial void OnBDI_TransforContentChanged();
    partial void OnBDI_ElectricCompNameChanging(string value);
    partial void OnBDI_ElectricCompNameChanged();
    partial void OnBDI_GasCompNameChanging(string value);
    partial void OnBDI_GasCompNameChanged();
    partial void OnBDI_AreaRatioChanging(System.Nullable<double> value);
    partial void OnBDI_AreaRatioChanged();
    partial void OnBDI_TypeChanging(string value);
    partial void OnBDI_TypeChanged();
    partial void OnBDI_TypeOtherChanging(string value);
    partial void OnBDI_TypeOtherChanged();
    partial void OnBDI_StructureChanging(string value);
    partial void OnBDI_StructureChanged();
    partial void OnBDI_StructureOtherChanging(string value);
    partial void OnBDI_StructureOtherChanged();
    partial void OnBDI_KindsOutChanging(string value);
    partial void OnBDI_KindsOutChanged();
    partial void OnBDI_KindsOutOtherChanging(string value);
    partial void OnBDI_KindsOutOtherChanged();
    partial void OnBDI_WarmKeepChanging(string value);
    partial void OnBDI_WarmKeepChanged();
    partial void OnBDI_WarmKeepOtherChanging(string value);
    partial void OnBDI_WarmKeepOtherChanged();
    partial void OnBDI_WinOutChanging(string value);
    partial void OnBDI_WinOutChanged();
    partial void OnBDI_WinOutOtherChanging(string value);
    partial void OnBDI_WinOutOtherChanged();
    partial void OnBDI_VisorFlagChanging(System.Nullable<byte> value);
    partial void OnBDI_VisorFlagChanged();
    partial void OnBDI_VisorChanging(string value);
    partial void OnBDI_VisorChanged();
    partial void OnBDI_GlassChanging(string value);
    partial void OnBDI_GlassChanged();
    partial void OnBDI_GlassOtherChanging(string value);
    partial void OnBDI_GlassOtherChanged();
    partial void OnBDI_WinChanging(string value);
    partial void OnBDI_WinChanged();
    partial void OnBDI_WinOtherChanging(string value);
    partial void OnBDI_WinOtherChanged();
    partial void OnBDI_TemCoolChanging(System.Nullable<double> value);
    partial void OnBDI_TemCoolChanged();
    partial void OnBDI_TemHotChanging(System.Nullable<double> value);
    partial void OnBDI_TemHotChanged();
    partial void OnBDI_TemSepcialCoolChanging(System.Nullable<double> value);
    partial void OnBDI_TemSepcialCoolChanged();
    partial void OnBDI_TemSepcialHotChanging(System.Nullable<double> value);
    partial void OnBDI_TemSepcialHotChanged();
    partial void OnBDI_AirSysChanging(string value);
    partial void OnBDI_AirSysChanged();
    partial void OnBDI_DevCoolChanging(string value);
    partial void OnBDI_DevCoolChanged();
    partial void OnBDI_DevHotChanging(string value);
    partial void OnBDI_DevHotChanged();
    partial void OnBDI_LiBrChanging(string value);
    partial void OnBDI_LiBrChanged();
    partial void OnBDI_BoilerPowerChanging(string value);
    partial void OnBDI_BoilerPowerChanged();
    partial void OnBDI_AirSplitChanging(string value);
    partial void OnBDI_AirSplitChanged();
    partial void OnBDI_BoilerChanging(string value);
    partial void OnBDI_BoilerChanged();
    partial void OnBDI_PowerHotChanging(string value);
    partial void OnBDI_PowerHotChanged();
    partial void OnBDI_SteamOrWaterChanging(string value);
    partial void OnBDI_SteamOrWaterChanged();
    partial void OnBDI_DevOtherChanging(string value);
    partial void OnBDI_DevOtherChanged();
    partial void OnBDI_LightCodeChanging(string value);
    partial void OnBDI_LightCodeChanged();
    partial void OnBDI_LightInChanging(string value);
    partial void OnBDI_LightInChanged();
    partial void OnBDI_LightOutChanging(string value);
    partial void OnBDI_LightOutChanged();
    partial void OnBDI_LightOutPowerChanging(System.Nullable<double> value);
    partial void OnBDI_LightOutPowerChanged();
    partial void OnBDI_LightOutWorkHoursChanging(System.Nullable<double> value);
    partial void OnBDI_LightOutWorkHoursChanged();
    partial void OnBDI_ElevatorCodeChanging(string value);
    partial void OnBDI_ElevatorCodeChanged();
    partial void OnBDI_WaterPumpCodeChanging(string value);
    partial void OnBDI_WaterPumpCodeChanged();
    partial void OnBDI_WindMachCodeChanging(string value);
    partial void OnBDI_WindMachCodeChanged();
    partial void OnBDI_KitchenEquipCodeChanging(string value);
    partial void OnBDI_KitchenEquipCodeChanged();
    partial void OnBDI_OfficeEquipCodeChanging(string value);
    partial void OnBDI_OfficeEquipCodeChanged();
    partial void OnBDI_ImageUrlChanging(string value);
    partial void OnBDI_ImageUrlChanged();
    partial void OnBDI_RemarkChanging(string value);
    partial void OnBDI_RemarkChanged();
    partial void OnBDI_LogOperatorChanging(string value);
    partial void OnBDI_LogOperatorChanged();
    partial void OnBDI_CreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBDI_CreateDateChanged();
    partial void OnBDI_UpOperatorChanging(string value);
    partial void OnBDI_UpOperatorChanged();
    partial void OnBDI_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBDI_UpdateDateChanged();
    #endregion
		
		public BuildingDetailInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BDI_ID
		{
			get
			{
				return this._BDI_ID;
			}
			set
			{
				if ((this._BDI_ID != value))
				{
					this.OnBDI_IDChanging(value);
					this.SendPropertyChanging();
					this._BDI_ID = value;
					this.SendPropertyChanged("BDI_ID");
					this.OnBDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string BDI_Name
		{
			get
			{
				return this._BDI_Name;
			}
			set
			{
				if ((this._BDI_Name != value))
				{
					this.OnBDI_NameChanging(value);
					this.SendPropertyChanging();
					this._BDI_Name = value;
					this.SendPropertyChanged("BDI_Name");
					this.OnBDI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Code", DbType="VarChar(500)")]
		public string BDI_Code
		{
			get
			{
				return this._BDI_Code;
			}
			set
			{
				if ((this._BDI_Code != value))
				{
					this.OnBDI_CodeChanging(value);
					this.SendPropertyChanging();
					this._BDI_Code = value;
					this.SendPropertyChanged("BDI_Code");
					this.OnBDI_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Introduction", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string BDI_Introduction
		{
			get
			{
				return this._BDI_Introduction;
			}
			set
			{
				if ((this._BDI_Introduction != value))
				{
					this.OnBDI_IntroductionChanging(value);
					this.SendPropertyChanging();
					this._BDI_Introduction = value;
					this.SendPropertyChanged("BDI_Introduction");
					this.OnBDI_IntroductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Address", DbType="VarChar(500)")]
		public string BDI_Address
		{
			get
			{
				return this._BDI_Address;
			}
			set
			{
				if ((this._BDI_Address != value))
				{
					this.OnBDI_AddressChanging(value);
					this.SendPropertyChanging();
					this._BDI_Address = value;
					this.SendPropertyChanged("BDI_Address");
					this.OnBDI_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Academy", DbType="VarChar(500)")]
		public string BDI_Academy
		{
			get
			{
				return this._BDI_Academy;
			}
			set
			{
				if ((this._BDI_Academy != value))
				{
					this.OnBDI_AcademyChanging(value);
					this.SendPropertyChanging();
					this._BDI_Academy = value;
					this.SendPropertyChanged("BDI_Academy");
					this.OnBDI_AcademyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Telephone", DbType="VarChar(500)")]
		public string BDI_Telephone
		{
			get
			{
				return this._BDI_Telephone;
			}
			set
			{
				if ((this._BDI_Telephone != value))
				{
					this.OnBDI_TelephoneChanging(value);
					this.SendPropertyChanging();
					this._BDI_Telephone = value;
					this.SendPropertyChanged("BDI_Telephone");
					this.OnBDI_TelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_LinkMan", DbType="VarChar(500)")]
		public string BDI_LinkMan
		{
			get
			{
				return this._BDI_LinkMan;
			}
			set
			{
				if ((this._BDI_LinkMan != value))
				{
					this.OnBDI_LinkManChanging(value);
					this.SendPropertyChanging();
					this._BDI_LinkMan = value;
					this.SendPropertyChanged("BDI_LinkMan");
					this.OnBDI_LinkManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_LinkManPhone", DbType="VarChar(500)")]
		public string BDI_LinkManPhone
		{
			get
			{
				return this._BDI_LinkManPhone;
			}
			set
			{
				if ((this._BDI_LinkManPhone != value))
				{
					this.OnBDI_LinkManPhoneChanging(value);
					this.SendPropertyChanging();
					this._BDI_LinkManPhone = value;
					this.SendPropertyChanged("BDI_LinkManPhone");
					this.OnBDI_LinkManPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_StatMan", DbType="VarChar(500)")]
		public string BDI_StatMan
		{
			get
			{
				return this._BDI_StatMan;
			}
			set
			{
				if ((this._BDI_StatMan != value))
				{
					this.OnBDI_StatManChanging(value);
					this.SendPropertyChanging();
					this._BDI_StatMan = value;
					this.SendPropertyChanged("BDI_StatMan");
					this.OnBDI_StatManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_StatManPhone", DbType="VarChar(500)")]
		public string BDI_StatManPhone
		{
			get
			{
				return this._BDI_StatManPhone;
			}
			set
			{
				if ((this._BDI_StatManPhone != value))
				{
					this.OnBDI_StatManPhoneChanging(value);
					this.SendPropertyChanging();
					this._BDI_StatManPhone = value;
					this.SendPropertyChanged("BDI_StatManPhone");
					this.OnBDI_StatManPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_RunPerWeek", DbType="Int")]
		public System.Nullable<int> BDI_RunPerWeek
		{
			get
			{
				return this._BDI_RunPerWeek;
			}
			set
			{
				if ((this._BDI_RunPerWeek != value))
				{
					this.OnBDI_RunPerWeekChanging(value);
					this.SendPropertyChanging();
					this._BDI_RunPerWeek = value;
					this.SendPropertyChanged("BDI_RunPerWeek");
					this.OnBDI_RunPerWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_WeekStart", DbType="VarChar(500)")]
		public string BDI_WeekStart
		{
			get
			{
				return this._BDI_WeekStart;
			}
			set
			{
				if ((this._BDI_WeekStart != value))
				{
					this.OnBDI_WeekStartChanging(value);
					this.SendPropertyChanging();
					this._BDI_WeekStart = value;
					this.SendPropertyChanged("BDI_WeekStart");
					this.OnBDI_WeekStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_WeekEnd", DbType="VarChar(500)")]
		public string BDI_WeekEnd
		{
			get
			{
				return this._BDI_WeekEnd;
			}
			set
			{
				if ((this._BDI_WeekEnd != value))
				{
					this.OnBDI_WeekEndChanging(value);
					this.SendPropertyChanging();
					this._BDI_WeekEnd = value;
					this.SendPropertyChanged("BDI_WeekEnd");
					this.OnBDI_WeekEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_RunPreMonth", DbType="Int")]
		public System.Nullable<int> BDI_RunPreMonth
		{
			get
			{
				return this._BDI_RunPreMonth;
			}
			set
			{
				if ((this._BDI_RunPreMonth != value))
				{
					this.OnBDI_RunPreMonthChanging(value);
					this.SendPropertyChanging();
					this._BDI_RunPreMonth = value;
					this.SendPropertyChanged("BDI_RunPreMonth");
					this.OnBDI_RunPreMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_MonthStart", DbType="VarChar(500)")]
		public string BDI_MonthStart
		{
			get
			{
				return this._BDI_MonthStart;
			}
			set
			{
				if ((this._BDI_MonthStart != value))
				{
					this.OnBDI_MonthStartChanging(value);
					this.SendPropertyChanging();
					this._BDI_MonthStart = value;
					this.SendPropertyChanged("BDI_MonthStart");
					this.OnBDI_MonthStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_MonthEnd", DbType="VarChar(500)")]
		public string BDI_MonthEnd
		{
			get
			{
				return this._BDI_MonthEnd;
			}
			set
			{
				if ((this._BDI_MonthEnd != value))
				{
					this.OnBDI_MonthEndChanging(value);
					this.SendPropertyChanging();
					this._BDI_MonthEnd = value;
					this.SendPropertyChanged("BDI_MonthEnd");
					this.OnBDI_MonthEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_RunPerYear", DbType="Int")]
		public System.Nullable<int> BDI_RunPerYear
		{
			get
			{
				return this._BDI_RunPerYear;
			}
			set
			{
				if ((this._BDI_RunPerYear != value))
				{
					this.OnBDI_RunPerYearChanging(value);
					this.SendPropertyChanging();
					this._BDI_RunPerYear = value;
					this.SendPropertyChanged("BDI_RunPerYear");
					this.OnBDI_RunPerYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_YearStart", DbType="VarChar(500)")]
		public string BDI_YearStart
		{
			get
			{
				return this._BDI_YearStart;
			}
			set
			{
				if ((this._BDI_YearStart != value))
				{
					this.OnBDI_YearStartChanging(value);
					this.SendPropertyChanging();
					this._BDI_YearStart = value;
					this.SendPropertyChanged("BDI_YearStart");
					this.OnBDI_YearStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_YearEnd", DbType="VarChar(500)")]
		public string BDI_YearEnd
		{
			get
			{
				return this._BDI_YearEnd;
			}
			set
			{
				if ((this._BDI_YearEnd != value))
				{
					this.OnBDI_YearEndChanging(value);
					this.SendPropertyChanging();
					this._BDI_YearEnd = value;
					this.SendPropertyChanged("BDI_YearEnd");
					this.OnBDI_YearEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Holiday", DbType="VarChar(500)")]
		public string BDI_Holiday
		{
			get
			{
				return this._BDI_Holiday;
			}
			set
			{
				if ((this._BDI_Holiday != value))
				{
					this.OnBDI_HolidayChanging(value);
					this.SendPropertyChanging();
					this._BDI_Holiday = value;
					this.SendPropertyChanged("BDI_Holiday");
					this.OnBDI_HolidayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Date", DbType="VarChar(500)")]
		public string BDI_Date
		{
			get
			{
				return this._BDI_Date;
			}
			set
			{
				if ((this._BDI_Date != value))
				{
					this.OnBDI_DateChanging(value);
					this.SendPropertyChanging();
					this._BDI_Date = value;
					this.SendPropertyChanged("BDI_Date");
					this.OnBDI_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Direction", DbType="VarChar(500)")]
		public string BDI_Direction
		{
			get
			{
				return this._BDI_Direction;
			}
			set
			{
				if ((this._BDI_Direction != value))
				{
					this.OnBDI_DirectionChanging(value);
					this.SendPropertyChanging();
					this._BDI_Direction = value;
					this.SendPropertyChanged("BDI_Direction");
					this.OnBDI_DirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Users", DbType="Int")]
		public System.Nullable<int> BDI_Users
		{
			get
			{
				return this._BDI_Users;
			}
			set
			{
				if ((this._BDI_Users != value))
				{
					this.OnBDI_UsersChanging(value);
					this.SendPropertyChanging();
					this._BDI_Users = value;
					this.SendPropertyChanged("BDI_Users");
					this.OnBDI_UsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Height", DbType="Float")]
		public System.Nullable<double> BDI_Height
		{
			get
			{
				return this._BDI_Height;
			}
			set
			{
				if ((this._BDI_Height != value))
				{
					this.OnBDI_HeightChanging(value);
					this.SendPropertyChanging();
					this._BDI_Height = value;
					this.SendPropertyChanged("BDI_Height");
					this.OnBDI_HeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_FloorUp", DbType="Int")]
		public System.Nullable<int> BDI_FloorUp
		{
			get
			{
				return this._BDI_FloorUp;
			}
			set
			{
				if ((this._BDI_FloorUp != value))
				{
					this.OnBDI_FloorUpChanging(value);
					this.SendPropertyChanging();
					this._BDI_FloorUp = value;
					this.SendPropertyChanged("BDI_FloorUp");
					this.OnBDI_FloorUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_FloorDn", DbType="Int")]
		public System.Nullable<int> BDI_FloorDn
		{
			get
			{
				return this._BDI_FloorDn;
			}
			set
			{
				if ((this._BDI_FloorDn != value))
				{
					this.OnBDI_FloorDnChanging(value);
					this.SendPropertyChanging();
					this._BDI_FloorDn = value;
					this.SendPropertyChanged("BDI_FloorDn");
					this.OnBDI_FloorDnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_FloorHeight", DbType="Float")]
		public System.Nullable<double> BDI_FloorHeight
		{
			get
			{
				return this._BDI_FloorHeight;
			}
			set
			{
				if ((this._BDI_FloorHeight != value))
				{
					this.OnBDI_FloorHeightChanging(value);
					this.SendPropertyChanging();
					this._BDI_FloorHeight = value;
					this.SendPropertyChanged("BDI_FloorHeight");
					this.OnBDI_FloorHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Area", DbType="Float")]
		public System.Nullable<double> BDI_Area
		{
			get
			{
				return this._BDI_Area;
			}
			set
			{
				if ((this._BDI_Area != value))
				{
					this.OnBDI_AreaChanging(value);
					this.SendPropertyChanging();
					this._BDI_Area = value;
					this.SendPropertyChanged("BDI_Area");
					this.OnBDI_AreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_AreaAir", DbType="Float")]
		public System.Nullable<double> BDI_AreaAir
		{
			get
			{
				return this._BDI_AreaAir;
			}
			set
			{
				if ((this._BDI_AreaAir != value))
				{
					this.OnBDI_AreaAirChanging(value);
					this.SendPropertyChanging();
					this._BDI_AreaAir = value;
					this.SendPropertyChanged("BDI_AreaAir");
					this.OnBDI_AreaAirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_AreaHot", DbType="Float")]
		public System.Nullable<double> BDI_AreaHot
		{
			get
			{
				return this._BDI_AreaHot;
			}
			set
			{
				if ((this._BDI_AreaHot != value))
				{
					this.OnBDI_AreaHotChanging(value);
					this.SendPropertyChanging();
					this._BDI_AreaHot = value;
					this.SendPropertyChanged("BDI_AreaHot");
					this.OnBDI_AreaHotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_AreaSpe", DbType="Float")]
		public System.Nullable<double> BDI_AreaSpe
		{
			get
			{
				return this._BDI_AreaSpe;
			}
			set
			{
				if ((this._BDI_AreaSpe != value))
				{
					this.OnBDI_AreaSpeChanging(value);
					this.SendPropertyChanging();
					this._BDI_AreaSpe = value;
					this.SendPropertyChanged("BDI_AreaSpe");
					this.OnBDI_AreaSpeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_AauditFlag", DbType="TinyInt")]
		public System.Nullable<byte> BDI_AauditFlag
		{
			get
			{
				return this._BDI_AauditFlag;
			}
			set
			{
				if ((this._BDI_AauditFlag != value))
				{
					this.OnBDI_AauditFlagChanging(value);
					this.SendPropertyChanging();
					this._BDI_AauditFlag = value;
					this.SendPropertyChanged("BDI_AauditFlag");
					this.OnBDI_AauditFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_AauditDate", DbType="VarChar(500)")]
		public string BDI_AauditDate
		{
			get
			{
				return this._BDI_AauditDate;
			}
			set
			{
				if ((this._BDI_AauditDate != value))
				{
					this.OnBDI_AauditDateChanging(value);
					this.SendPropertyChanging();
					this._BDI_AauditDate = value;
					this.SendPropertyChanged("BDI_AauditDate");
					this.OnBDI_AauditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_TransforFlag", DbType="TinyInt")]
		public System.Nullable<byte> BDI_TransforFlag
		{
			get
			{
				return this._BDI_TransforFlag;
			}
			set
			{
				if ((this._BDI_TransforFlag != value))
				{
					this.OnBDI_TransforFlagChanging(value);
					this.SendPropertyChanging();
					this._BDI_TransforFlag = value;
					this.SendPropertyChanged("BDI_TransforFlag");
					this.OnBDI_TransforFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_TransforContent", DbType="VarChar(500)")]
		public string BDI_TransforContent
		{
			get
			{
				return this._BDI_TransforContent;
			}
			set
			{
				if ((this._BDI_TransforContent != value))
				{
					this.OnBDI_TransforContentChanging(value);
					this.SendPropertyChanging();
					this._BDI_TransforContent = value;
					this.SendPropertyChanged("BDI_TransforContent");
					this.OnBDI_TransforContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ElectricCompName", DbType="VarChar(500)")]
		public string BDI_ElectricCompName
		{
			get
			{
				return this._BDI_ElectricCompName;
			}
			set
			{
				if ((this._BDI_ElectricCompName != value))
				{
					this.OnBDI_ElectricCompNameChanging(value);
					this.SendPropertyChanging();
					this._BDI_ElectricCompName = value;
					this.SendPropertyChanged("BDI_ElectricCompName");
					this.OnBDI_ElectricCompNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_GasCompName", DbType="VarChar(500)")]
		public string BDI_GasCompName
		{
			get
			{
				return this._BDI_GasCompName;
			}
			set
			{
				if ((this._BDI_GasCompName != value))
				{
					this.OnBDI_GasCompNameChanging(value);
					this.SendPropertyChanging();
					this._BDI_GasCompName = value;
					this.SendPropertyChanged("BDI_GasCompName");
					this.OnBDI_GasCompNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_AreaRatio", DbType="Float")]
		public System.Nullable<double> BDI_AreaRatio
		{
			get
			{
				return this._BDI_AreaRatio;
			}
			set
			{
				if ((this._BDI_AreaRatio != value))
				{
					this.OnBDI_AreaRatioChanging(value);
					this.SendPropertyChanging();
					this._BDI_AreaRatio = value;
					this.SendPropertyChanged("BDI_AreaRatio");
					this.OnBDI_AreaRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Type", DbType="VarChar(500)")]
		public string BDI_Type
		{
			get
			{
				return this._BDI_Type;
			}
			set
			{
				if ((this._BDI_Type != value))
				{
					this.OnBDI_TypeChanging(value);
					this.SendPropertyChanging();
					this._BDI_Type = value;
					this.SendPropertyChanged("BDI_Type");
					this.OnBDI_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_TypeOther", DbType="VarChar(500)")]
		public string BDI_TypeOther
		{
			get
			{
				return this._BDI_TypeOther;
			}
			set
			{
				if ((this._BDI_TypeOther != value))
				{
					this.OnBDI_TypeOtherChanging(value);
					this.SendPropertyChanging();
					this._BDI_TypeOther = value;
					this.SendPropertyChanged("BDI_TypeOther");
					this.OnBDI_TypeOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Structure", DbType="VarChar(500)")]
		public string BDI_Structure
		{
			get
			{
				return this._BDI_Structure;
			}
			set
			{
				if ((this._BDI_Structure != value))
				{
					this.OnBDI_StructureChanging(value);
					this.SendPropertyChanging();
					this._BDI_Structure = value;
					this.SendPropertyChanged("BDI_Structure");
					this.OnBDI_StructureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_StructureOther", DbType="VarChar(500)")]
		public string BDI_StructureOther
		{
			get
			{
				return this._BDI_StructureOther;
			}
			set
			{
				if ((this._BDI_StructureOther != value))
				{
					this.OnBDI_StructureOtherChanging(value);
					this.SendPropertyChanging();
					this._BDI_StructureOther = value;
					this.SendPropertyChanged("BDI_StructureOther");
					this.OnBDI_StructureOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_KindsOut", DbType="VarChar(500)")]
		public string BDI_KindsOut
		{
			get
			{
				return this._BDI_KindsOut;
			}
			set
			{
				if ((this._BDI_KindsOut != value))
				{
					this.OnBDI_KindsOutChanging(value);
					this.SendPropertyChanging();
					this._BDI_KindsOut = value;
					this.SendPropertyChanged("BDI_KindsOut");
					this.OnBDI_KindsOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_KindsOutOther", DbType="VarChar(500)")]
		public string BDI_KindsOutOther
		{
			get
			{
				return this._BDI_KindsOutOther;
			}
			set
			{
				if ((this._BDI_KindsOutOther != value))
				{
					this.OnBDI_KindsOutOtherChanging(value);
					this.SendPropertyChanging();
					this._BDI_KindsOutOther = value;
					this.SendPropertyChanged("BDI_KindsOutOther");
					this.OnBDI_KindsOutOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_WarmKeep", DbType="VarChar(500)")]
		public string BDI_WarmKeep
		{
			get
			{
				return this._BDI_WarmKeep;
			}
			set
			{
				if ((this._BDI_WarmKeep != value))
				{
					this.OnBDI_WarmKeepChanging(value);
					this.SendPropertyChanging();
					this._BDI_WarmKeep = value;
					this.SendPropertyChanged("BDI_WarmKeep");
					this.OnBDI_WarmKeepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_WarmKeepOther", DbType="VarChar(500)")]
		public string BDI_WarmKeepOther
		{
			get
			{
				return this._BDI_WarmKeepOther;
			}
			set
			{
				if ((this._BDI_WarmKeepOther != value))
				{
					this.OnBDI_WarmKeepOtherChanging(value);
					this.SendPropertyChanging();
					this._BDI_WarmKeepOther = value;
					this.SendPropertyChanged("BDI_WarmKeepOther");
					this.OnBDI_WarmKeepOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_WinOut", DbType="VarChar(500)")]
		public string BDI_WinOut
		{
			get
			{
				return this._BDI_WinOut;
			}
			set
			{
				if ((this._BDI_WinOut != value))
				{
					this.OnBDI_WinOutChanging(value);
					this.SendPropertyChanging();
					this._BDI_WinOut = value;
					this.SendPropertyChanged("BDI_WinOut");
					this.OnBDI_WinOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_WinOutOther", DbType="VarChar(500)")]
		public string BDI_WinOutOther
		{
			get
			{
				return this._BDI_WinOutOther;
			}
			set
			{
				if ((this._BDI_WinOutOther != value))
				{
					this.OnBDI_WinOutOtherChanging(value);
					this.SendPropertyChanging();
					this._BDI_WinOutOther = value;
					this.SendPropertyChanged("BDI_WinOutOther");
					this.OnBDI_WinOutOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_VisorFlag", DbType="TinyInt")]
		public System.Nullable<byte> BDI_VisorFlag
		{
			get
			{
				return this._BDI_VisorFlag;
			}
			set
			{
				if ((this._BDI_VisorFlag != value))
				{
					this.OnBDI_VisorFlagChanging(value);
					this.SendPropertyChanging();
					this._BDI_VisorFlag = value;
					this.SendPropertyChanged("BDI_VisorFlag");
					this.OnBDI_VisorFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Visor", DbType="VarChar(500)")]
		public string BDI_Visor
		{
			get
			{
				return this._BDI_Visor;
			}
			set
			{
				if ((this._BDI_Visor != value))
				{
					this.OnBDI_VisorChanging(value);
					this.SendPropertyChanging();
					this._BDI_Visor = value;
					this.SendPropertyChanged("BDI_Visor");
					this.OnBDI_VisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Glass", DbType="VarChar(500)")]
		public string BDI_Glass
		{
			get
			{
				return this._BDI_Glass;
			}
			set
			{
				if ((this._BDI_Glass != value))
				{
					this.OnBDI_GlassChanging(value);
					this.SendPropertyChanging();
					this._BDI_Glass = value;
					this.SendPropertyChanged("BDI_Glass");
					this.OnBDI_GlassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_GlassOther", DbType="VarChar(500)")]
		public string BDI_GlassOther
		{
			get
			{
				return this._BDI_GlassOther;
			}
			set
			{
				if ((this._BDI_GlassOther != value))
				{
					this.OnBDI_GlassOtherChanging(value);
					this.SendPropertyChanging();
					this._BDI_GlassOther = value;
					this.SendPropertyChanged("BDI_GlassOther");
					this.OnBDI_GlassOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Win", DbType="VarChar(500)")]
		public string BDI_Win
		{
			get
			{
				return this._BDI_Win;
			}
			set
			{
				if ((this._BDI_Win != value))
				{
					this.OnBDI_WinChanging(value);
					this.SendPropertyChanging();
					this._BDI_Win = value;
					this.SendPropertyChanged("BDI_Win");
					this.OnBDI_WinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_WinOther", DbType="VarChar(500)")]
		public string BDI_WinOther
		{
			get
			{
				return this._BDI_WinOther;
			}
			set
			{
				if ((this._BDI_WinOther != value))
				{
					this.OnBDI_WinOtherChanging(value);
					this.SendPropertyChanging();
					this._BDI_WinOther = value;
					this.SendPropertyChanged("BDI_WinOther");
					this.OnBDI_WinOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_TemCool", DbType="Float")]
		public System.Nullable<double> BDI_TemCool
		{
			get
			{
				return this._BDI_TemCool;
			}
			set
			{
				if ((this._BDI_TemCool != value))
				{
					this.OnBDI_TemCoolChanging(value);
					this.SendPropertyChanging();
					this._BDI_TemCool = value;
					this.SendPropertyChanged("BDI_TemCool");
					this.OnBDI_TemCoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_TemHot", DbType="Float")]
		public System.Nullable<double> BDI_TemHot
		{
			get
			{
				return this._BDI_TemHot;
			}
			set
			{
				if ((this._BDI_TemHot != value))
				{
					this.OnBDI_TemHotChanging(value);
					this.SendPropertyChanging();
					this._BDI_TemHot = value;
					this.SendPropertyChanged("BDI_TemHot");
					this.OnBDI_TemHotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_TemSepcialCool", DbType="Float")]
		public System.Nullable<double> BDI_TemSepcialCool
		{
			get
			{
				return this._BDI_TemSepcialCool;
			}
			set
			{
				if ((this._BDI_TemSepcialCool != value))
				{
					this.OnBDI_TemSepcialCoolChanging(value);
					this.SendPropertyChanging();
					this._BDI_TemSepcialCool = value;
					this.SendPropertyChanged("BDI_TemSepcialCool");
					this.OnBDI_TemSepcialCoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_TemSepcialHot", DbType="Float")]
		public System.Nullable<double> BDI_TemSepcialHot
		{
			get
			{
				return this._BDI_TemSepcialHot;
			}
			set
			{
				if ((this._BDI_TemSepcialHot != value))
				{
					this.OnBDI_TemSepcialHotChanging(value);
					this.SendPropertyChanging();
					this._BDI_TemSepcialHot = value;
					this.SendPropertyChanged("BDI_TemSepcialHot");
					this.OnBDI_TemSepcialHotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_AirSys", DbType="VarChar(500)")]
		public string BDI_AirSys
		{
			get
			{
				return this._BDI_AirSys;
			}
			set
			{
				if ((this._BDI_AirSys != value))
				{
					this.OnBDI_AirSysChanging(value);
					this.SendPropertyChanging();
					this._BDI_AirSys = value;
					this.SendPropertyChanged("BDI_AirSys");
					this.OnBDI_AirSysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_DevCool", DbType="VarChar(500)")]
		public string BDI_DevCool
		{
			get
			{
				return this._BDI_DevCool;
			}
			set
			{
				if ((this._BDI_DevCool != value))
				{
					this.OnBDI_DevCoolChanging(value);
					this.SendPropertyChanging();
					this._BDI_DevCool = value;
					this.SendPropertyChanged("BDI_DevCool");
					this.OnBDI_DevCoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_DevHot", DbType="VarChar(500)")]
		public string BDI_DevHot
		{
			get
			{
				return this._BDI_DevHot;
			}
			set
			{
				if ((this._BDI_DevHot != value))
				{
					this.OnBDI_DevHotChanging(value);
					this.SendPropertyChanging();
					this._BDI_DevHot = value;
					this.SendPropertyChanged("BDI_DevHot");
					this.OnBDI_DevHotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_LiBr", DbType="VarChar(500)")]
		public string BDI_LiBr
		{
			get
			{
				return this._BDI_LiBr;
			}
			set
			{
				if ((this._BDI_LiBr != value))
				{
					this.OnBDI_LiBrChanging(value);
					this.SendPropertyChanging();
					this._BDI_LiBr = value;
					this.SendPropertyChanged("BDI_LiBr");
					this.OnBDI_LiBrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_BoilerPower", DbType="VarChar(500)")]
		public string BDI_BoilerPower
		{
			get
			{
				return this._BDI_BoilerPower;
			}
			set
			{
				if ((this._BDI_BoilerPower != value))
				{
					this.OnBDI_BoilerPowerChanging(value);
					this.SendPropertyChanging();
					this._BDI_BoilerPower = value;
					this.SendPropertyChanged("BDI_BoilerPower");
					this.OnBDI_BoilerPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_AirSplit", DbType="VarChar(500)")]
		public string BDI_AirSplit
		{
			get
			{
				return this._BDI_AirSplit;
			}
			set
			{
				if ((this._BDI_AirSplit != value))
				{
					this.OnBDI_AirSplitChanging(value);
					this.SendPropertyChanging();
					this._BDI_AirSplit = value;
					this.SendPropertyChanged("BDI_AirSplit");
					this.OnBDI_AirSplitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Boiler", DbType="VarChar(500)")]
		public string BDI_Boiler
		{
			get
			{
				return this._BDI_Boiler;
			}
			set
			{
				if ((this._BDI_Boiler != value))
				{
					this.OnBDI_BoilerChanging(value);
					this.SendPropertyChanging();
					this._BDI_Boiler = value;
					this.SendPropertyChanged("BDI_Boiler");
					this.OnBDI_BoilerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_PowerHot", DbType="VarChar(500)")]
		public string BDI_PowerHot
		{
			get
			{
				return this._BDI_PowerHot;
			}
			set
			{
				if ((this._BDI_PowerHot != value))
				{
					this.OnBDI_PowerHotChanging(value);
					this.SendPropertyChanging();
					this._BDI_PowerHot = value;
					this.SendPropertyChanged("BDI_PowerHot");
					this.OnBDI_PowerHotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_SteamOrWater", DbType="VarChar(500)")]
		public string BDI_SteamOrWater
		{
			get
			{
				return this._BDI_SteamOrWater;
			}
			set
			{
				if ((this._BDI_SteamOrWater != value))
				{
					this.OnBDI_SteamOrWaterChanging(value);
					this.SendPropertyChanging();
					this._BDI_SteamOrWater = value;
					this.SendPropertyChanged("BDI_SteamOrWater");
					this.OnBDI_SteamOrWaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_DevOther", DbType="VarChar(500)")]
		public string BDI_DevOther
		{
			get
			{
				return this._BDI_DevOther;
			}
			set
			{
				if ((this._BDI_DevOther != value))
				{
					this.OnBDI_DevOtherChanging(value);
					this.SendPropertyChanging();
					this._BDI_DevOther = value;
					this.SendPropertyChanged("BDI_DevOther");
					this.OnBDI_DevOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_LightCode", DbType="VarChar(500)")]
		public string BDI_LightCode
		{
			get
			{
				return this._BDI_LightCode;
			}
			set
			{
				if ((this._BDI_LightCode != value))
				{
					this.OnBDI_LightCodeChanging(value);
					this.SendPropertyChanging();
					this._BDI_LightCode = value;
					this.SendPropertyChanged("BDI_LightCode");
					this.OnBDI_LightCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_LightIn", DbType="VarChar(500)")]
		public string BDI_LightIn
		{
			get
			{
				return this._BDI_LightIn;
			}
			set
			{
				if ((this._BDI_LightIn != value))
				{
					this.OnBDI_LightInChanging(value);
					this.SendPropertyChanging();
					this._BDI_LightIn = value;
					this.SendPropertyChanged("BDI_LightIn");
					this.OnBDI_LightInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_LightOut", DbType="VarChar(500)")]
		public string BDI_LightOut
		{
			get
			{
				return this._BDI_LightOut;
			}
			set
			{
				if ((this._BDI_LightOut != value))
				{
					this.OnBDI_LightOutChanging(value);
					this.SendPropertyChanging();
					this._BDI_LightOut = value;
					this.SendPropertyChanged("BDI_LightOut");
					this.OnBDI_LightOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_LightOutPower", DbType="Float")]
		public System.Nullable<double> BDI_LightOutPower
		{
			get
			{
				return this._BDI_LightOutPower;
			}
			set
			{
				if ((this._BDI_LightOutPower != value))
				{
					this.OnBDI_LightOutPowerChanging(value);
					this.SendPropertyChanging();
					this._BDI_LightOutPower = value;
					this.SendPropertyChanged("BDI_LightOutPower");
					this.OnBDI_LightOutPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_LightOutWorkHours", DbType="Float")]
		public System.Nullable<double> BDI_LightOutWorkHours
		{
			get
			{
				return this._BDI_LightOutWorkHours;
			}
			set
			{
				if ((this._BDI_LightOutWorkHours != value))
				{
					this.OnBDI_LightOutWorkHoursChanging(value);
					this.SendPropertyChanging();
					this._BDI_LightOutWorkHours = value;
					this.SendPropertyChanged("BDI_LightOutWorkHours");
					this.OnBDI_LightOutWorkHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ElevatorCode", DbType="VarChar(500)")]
		public string BDI_ElevatorCode
		{
			get
			{
				return this._BDI_ElevatorCode;
			}
			set
			{
				if ((this._BDI_ElevatorCode != value))
				{
					this.OnBDI_ElevatorCodeChanging(value);
					this.SendPropertyChanging();
					this._BDI_ElevatorCode = value;
					this.SendPropertyChanged("BDI_ElevatorCode");
					this.OnBDI_ElevatorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_WaterPumpCode", DbType="VarChar(500)")]
		public string BDI_WaterPumpCode
		{
			get
			{
				return this._BDI_WaterPumpCode;
			}
			set
			{
				if ((this._BDI_WaterPumpCode != value))
				{
					this.OnBDI_WaterPumpCodeChanging(value);
					this.SendPropertyChanging();
					this._BDI_WaterPumpCode = value;
					this.SendPropertyChanged("BDI_WaterPumpCode");
					this.OnBDI_WaterPumpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_WindMachCode", DbType="VarChar(500)")]
		public string BDI_WindMachCode
		{
			get
			{
				return this._BDI_WindMachCode;
			}
			set
			{
				if ((this._BDI_WindMachCode != value))
				{
					this.OnBDI_WindMachCodeChanging(value);
					this.SendPropertyChanging();
					this._BDI_WindMachCode = value;
					this.SendPropertyChanged("BDI_WindMachCode");
					this.OnBDI_WindMachCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_KitchenEquipCode", DbType="VarChar(500)")]
		public string BDI_KitchenEquipCode
		{
			get
			{
				return this._BDI_KitchenEquipCode;
			}
			set
			{
				if ((this._BDI_KitchenEquipCode != value))
				{
					this.OnBDI_KitchenEquipCodeChanging(value);
					this.SendPropertyChanging();
					this._BDI_KitchenEquipCode = value;
					this.SendPropertyChanged("BDI_KitchenEquipCode");
					this.OnBDI_KitchenEquipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_OfficeEquipCode", DbType="VarChar(500)")]
		public string BDI_OfficeEquipCode
		{
			get
			{
				return this._BDI_OfficeEquipCode;
			}
			set
			{
				if ((this._BDI_OfficeEquipCode != value))
				{
					this.OnBDI_OfficeEquipCodeChanging(value);
					this.SendPropertyChanging();
					this._BDI_OfficeEquipCode = value;
					this.SendPropertyChanged("BDI_OfficeEquipCode");
					this.OnBDI_OfficeEquipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ImageUrl", DbType="VarChar(500)")]
		public string BDI_ImageUrl
		{
			get
			{
				return this._BDI_ImageUrl;
			}
			set
			{
				if ((this._BDI_ImageUrl != value))
				{
					this.OnBDI_ImageUrlChanging(value);
					this.SendPropertyChanging();
					this._BDI_ImageUrl = value;
					this.SendPropertyChanged("BDI_ImageUrl");
					this.OnBDI_ImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Remark", DbType="VarChar(500)")]
		public string BDI_Remark
		{
			get
			{
				return this._BDI_Remark;
			}
			set
			{
				if ((this._BDI_Remark != value))
				{
					this.OnBDI_RemarkChanging(value);
					this.SendPropertyChanging();
					this._BDI_Remark = value;
					this.SendPropertyChanged("BDI_Remark");
					this.OnBDI_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_LogOperator", DbType="VarChar(500)")]
		public string BDI_LogOperator
		{
			get
			{
				return this._BDI_LogOperator;
			}
			set
			{
				if ((this._BDI_LogOperator != value))
				{
					this.OnBDI_LogOperatorChanging(value);
					this.SendPropertyChanging();
					this._BDI_LogOperator = value;
					this.SendPropertyChanged("BDI_LogOperator");
					this.OnBDI_LogOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BDI_CreateDate
		{
			get
			{
				return this._BDI_CreateDate;
			}
			set
			{
				if ((this._BDI_CreateDate != value))
				{
					this.OnBDI_CreateDateChanging(value);
					this.SendPropertyChanging();
					this._BDI_CreateDate = value;
					this.SendPropertyChanged("BDI_CreateDate");
					this.OnBDI_CreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_UpOperator", DbType="VarChar(500)")]
		public string BDI_UpOperator
		{
			get
			{
				return this._BDI_UpOperator;
			}
			set
			{
				if ((this._BDI_UpOperator != value))
				{
					this.OnBDI_UpOperatorChanging(value);
					this.SendPropertyChanging();
					this._BDI_UpOperator = value;
					this.SendPropertyChanged("BDI_UpOperator");
					this.OnBDI_UpOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BDI_UpdateDate
		{
			get
			{
				return this._BDI_UpdateDate;
			}
			set
			{
				if ((this._BDI_UpdateDate != value))
				{
					this.OnBDI_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._BDI_UpdateDate = value;
					this.SendPropertyChanged("BDI_UpdateDate");
					this.OnBDI_UpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Workstation")]
	public partial class Workstation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _WS_No;
		
		private string _WS_Name;
		
		private string _WS_HostName;
		
		private byte _WS_Type;
		
		private byte _WS_State;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWS_NoChanging(short value);
    partial void OnWS_NoChanged();
    partial void OnWS_NameChanging(string value);
    partial void OnWS_NameChanged();
    partial void OnWS_HostNameChanging(string value);
    partial void OnWS_HostNameChanged();
    partial void OnWS_TypeChanging(byte value);
    partial void OnWS_TypeChanged();
    partial void OnWS_StateChanging(byte value);
    partial void OnWS_StateChanged();
    #endregion
		
		public Workstation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WS_No", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short WS_No
		{
			get
			{
				return this._WS_No;
			}
			set
			{
				if ((this._WS_No != value))
				{
					this.OnWS_NoChanging(value);
					this.SendPropertyChanging();
					this._WS_No = value;
					this.SendPropertyChanged("WS_No");
					this.OnWS_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WS_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string WS_Name
		{
			get
			{
				return this._WS_Name;
			}
			set
			{
				if ((this._WS_Name != value))
				{
					this.OnWS_NameChanging(value);
					this.SendPropertyChanging();
					this._WS_Name = value;
					this.SendPropertyChanged("WS_Name");
					this.OnWS_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WS_HostName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string WS_HostName
		{
			get
			{
				return this._WS_HostName;
			}
			set
			{
				if ((this._WS_HostName != value))
				{
					this.OnWS_HostNameChanging(value);
					this.SendPropertyChanging();
					this._WS_HostName = value;
					this.SendPropertyChanged("WS_HostName");
					this.OnWS_HostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WS_Type", DbType="TinyInt NOT NULL")]
		public byte WS_Type
		{
			get
			{
				return this._WS_Type;
			}
			set
			{
				if ((this._WS_Type != value))
				{
					this.OnWS_TypeChanging(value);
					this.SendPropertyChanging();
					this._WS_Type = value;
					this.SendPropertyChanged("WS_Type");
					this.OnWS_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WS_State", DbType="TinyInt NOT NULL")]
		public byte WS_State
		{
			get
			{
				return this._WS_State;
			}
			set
			{
				if ((this._WS_State != value))
				{
					this.OnWS_StateChanging(value);
					this.SendPropertyChanging();
					this._WS_State = value;
					this.SendPropertyChanged("WS_State");
					this.OnWS_StateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RTU")]
	public partial class RTU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RTU_No;
		
		private string _RTU_Name;
		
		private string _RTU_Info;
		
		private System.Nullable<short> _RTU_MaxAI;
		
		private System.Nullable<short> _RTU_MaxDI;
		
		private byte _RTU_State;
		
		private byte _RTU_WSNO;
		
		private short _RTU_ChanSerial;
		
		private short _RTU_Serial;
		
		private System.Nullable<short> _RTU_StaNo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRTU_NoChanging(short value);
    partial void OnRTU_NoChanged();
    partial void OnRTU_NameChanging(string value);
    partial void OnRTU_NameChanged();
    partial void OnRTU_InfoChanging(string value);
    partial void OnRTU_InfoChanged();
    partial void OnRTU_MaxAIChanging(System.Nullable<short> value);
    partial void OnRTU_MaxAIChanged();
    partial void OnRTU_MaxDIChanging(System.Nullable<short> value);
    partial void OnRTU_MaxDIChanged();
    partial void OnRTU_StateChanging(byte value);
    partial void OnRTU_StateChanged();
    partial void OnRTU_WSNOChanging(byte value);
    partial void OnRTU_WSNOChanged();
    partial void OnRTU_ChanSerialChanging(short value);
    partial void OnRTU_ChanSerialChanged();
    partial void OnRTU_SerialChanging(short value);
    partial void OnRTU_SerialChanged();
    partial void OnRTU_StaNoChanging(System.Nullable<short> value);
    partial void OnRTU_StaNoChanged();
    #endregion
		
		public RTU()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_No", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short RTU_No
		{
			get
			{
				return this._RTU_No;
			}
			set
			{
				if ((this._RTU_No != value))
				{
					this.OnRTU_NoChanging(value);
					this.SendPropertyChanging();
					this._RTU_No = value;
					this.SendPropertyChanged("RTU_No");
					this.OnRTU_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_Name", DbType="VarChar(500)")]
		public string RTU_Name
		{
			get
			{
				return this._RTU_Name;
			}
			set
			{
				if ((this._RTU_Name != value))
				{
					this.OnRTU_NameChanging(value);
					this.SendPropertyChanging();
					this._RTU_Name = value;
					this.SendPropertyChanged("RTU_Name");
					this.OnRTU_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_Info", DbType="VarChar(500)")]
		public string RTU_Info
		{
			get
			{
				return this._RTU_Info;
			}
			set
			{
				if ((this._RTU_Info != value))
				{
					this.OnRTU_InfoChanging(value);
					this.SendPropertyChanging();
					this._RTU_Info = value;
					this.SendPropertyChanged("RTU_Info");
					this.OnRTU_InfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_MaxAI", DbType="SmallInt")]
		public System.Nullable<short> RTU_MaxAI
		{
			get
			{
				return this._RTU_MaxAI;
			}
			set
			{
				if ((this._RTU_MaxAI != value))
				{
					this.OnRTU_MaxAIChanging(value);
					this.SendPropertyChanging();
					this._RTU_MaxAI = value;
					this.SendPropertyChanged("RTU_MaxAI");
					this.OnRTU_MaxAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_MaxDI", DbType="SmallInt")]
		public System.Nullable<short> RTU_MaxDI
		{
			get
			{
				return this._RTU_MaxDI;
			}
			set
			{
				if ((this._RTU_MaxDI != value))
				{
					this.OnRTU_MaxDIChanging(value);
					this.SendPropertyChanging();
					this._RTU_MaxDI = value;
					this.SendPropertyChanged("RTU_MaxDI");
					this.OnRTU_MaxDIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_State", DbType="TinyInt NOT NULL")]
		public byte RTU_State
		{
			get
			{
				return this._RTU_State;
			}
			set
			{
				if ((this._RTU_State != value))
				{
					this.OnRTU_StateChanging(value);
					this.SendPropertyChanging();
					this._RTU_State = value;
					this.SendPropertyChanged("RTU_State");
					this.OnRTU_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_WSNO", DbType="TinyInt NOT NULL")]
		public byte RTU_WSNO
		{
			get
			{
				return this._RTU_WSNO;
			}
			set
			{
				if ((this._RTU_WSNO != value))
				{
					this.OnRTU_WSNOChanging(value);
					this.SendPropertyChanging();
					this._RTU_WSNO = value;
					this.SendPropertyChanged("RTU_WSNO");
					this.OnRTU_WSNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_ChanSerial", DbType="SmallInt NOT NULL")]
		public short RTU_ChanSerial
		{
			get
			{
				return this._RTU_ChanSerial;
			}
			set
			{
				if ((this._RTU_ChanSerial != value))
				{
					this.OnRTU_ChanSerialChanging(value);
					this.SendPropertyChanging();
					this._RTU_ChanSerial = value;
					this.SendPropertyChanged("RTU_ChanSerial");
					this.OnRTU_ChanSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_Serial", DbType="SmallInt NOT NULL")]
		public short RTU_Serial
		{
			get
			{
				return this._RTU_Serial;
			}
			set
			{
				if ((this._RTU_Serial != value))
				{
					this.OnRTU_SerialChanging(value);
					this.SendPropertyChanging();
					this._RTU_Serial = value;
					this.SendPropertyChanged("RTU_Serial");
					this.OnRTU_SerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_StaNo", DbType="SmallInt")]
		public System.Nullable<short> RTU_StaNo
		{
			get
			{
				return this._RTU_StaNo;
			}
			set
			{
				if ((this._RTU_StaNo != value))
				{
					this.OnRTU_StaNoChanging(value);
					this.SendPropertyChanging();
					this._RTU_StaNo = value;
					this.SendPropertyChanged("RTU_StaNo");
					this.OnRTU_StaNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstrumentInfo")]
	public partial class InstrumentInfo
	{
		
		private int _InI_No;
		
		private short _RTU_No;
		
		private short _InI_Serial;
		
		private string _InI_Name;
		
		private string _InI_Memo;
		
		private byte _InI_Type;
		
		public InstrumentInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InI_No", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int InI_No
		{
			get
			{
				return this._InI_No;
			}
			set
			{
				if ((this._InI_No != value))
				{
					this._InI_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_No", DbType="SmallInt NOT NULL")]
		public short RTU_No
		{
			get
			{
				return this._RTU_No;
			}
			set
			{
				if ((this._RTU_No != value))
				{
					this._RTU_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InI_Serial", DbType="SmallInt NOT NULL")]
		public short InI_Serial
		{
			get
			{
				return this._InI_Serial;
			}
			set
			{
				if ((this._InI_Serial != value))
				{
					this._InI_Serial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InI_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InI_Name
		{
			get
			{
				return this._InI_Name;
			}
			set
			{
				if ((this._InI_Name != value))
				{
					this._InI_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InI_Memo", DbType="VarChar(500)")]
		public string InI_Memo
		{
			get
			{
				return this._InI_Memo;
			}
			set
			{
				if ((this._InI_Memo != value))
				{
					this._InI_Memo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InI_Type", DbType="TinyInt NOT NULL")]
		public byte InI_Type
		{
			get
			{
				return this._InI_Type;
			}
			set
			{
				if ((this._InI_Type != value))
				{
					this._InI_Type = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StateReal")]
	public partial class StateReal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SR_Type;
		
		private short _SR_No;
		
		private System.DateTime _SR_Time;
		
		private byte _SR_Status;
		
		private double _SR_PositionX;
		
		private double _SR_PositionY;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSR_TypeChanging(string value);
    partial void OnSR_TypeChanged();
    partial void OnSR_NoChanging(short value);
    partial void OnSR_NoChanged();
    partial void OnSR_TimeChanging(System.DateTime value);
    partial void OnSR_TimeChanged();
    partial void OnSR_StatusChanging(byte value);
    partial void OnSR_StatusChanged();
    partial void OnSR_PositionXChanging(double value);
    partial void OnSR_PositionXChanged();
    partial void OnSR_PositionYChanging(double value);
    partial void OnSR_PositionYChanged();
    #endregion
		
		public StateReal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SR_Type", DbType="VarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SR_Type
		{
			get
			{
				return this._SR_Type;
			}
			set
			{
				if ((this._SR_Type != value))
				{
					this.OnSR_TypeChanging(value);
					this.SendPropertyChanging();
					this._SR_Type = value;
					this.SendPropertyChanged("SR_Type");
					this.OnSR_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SR_No", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short SR_No
		{
			get
			{
				return this._SR_No;
			}
			set
			{
				if ((this._SR_No != value))
				{
					this.OnSR_NoChanging(value);
					this.SendPropertyChanging();
					this._SR_No = value;
					this.SendPropertyChanged("SR_No");
					this.OnSR_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SR_Time", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime SR_Time
		{
			get
			{
				return this._SR_Time;
			}
			set
			{
				if ((this._SR_Time != value))
				{
					this.OnSR_TimeChanging(value);
					this.SendPropertyChanging();
					this._SR_Time = value;
					this.SendPropertyChanged("SR_Time");
					this.OnSR_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SR_Status", DbType="TinyInt NOT NULL")]
		public byte SR_Status
		{
			get
			{
				return this._SR_Status;
			}
			set
			{
				if ((this._SR_Status != value))
				{
					this.OnSR_StatusChanging(value);
					this.SendPropertyChanging();
					this._SR_Status = value;
					this.SendPropertyChanged("SR_Status");
					this.OnSR_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SR_PositionX", DbType="Float NOT NULL")]
		public double SR_PositionX
		{
			get
			{
				return this._SR_PositionX;
			}
			set
			{
				if ((this._SR_PositionX != value))
				{
					this.OnSR_PositionXChanging(value);
					this.SendPropertyChanging();
					this._SR_PositionX = value;
					this.SendPropertyChanged("SR_PositionX");
					this.OnSR_PositionXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SR_PositionY", DbType="Float NOT NULL")]
		public double SR_PositionY
		{
			get
			{
				return this._SR_PositionY;
			}
			set
			{
				if ((this._SR_PositionY != value))
				{
					this.OnSR_PositionYChanging(value);
					this.SendPropertyChanging();
					this._SR_PositionY = value;
					this.SendPropertyChanged("SR_PositionY");
					this.OnSR_PositionYChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemProfile")]
	public partial class SystemProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SP_ID;
		
		private string _SP_Value;
		
		private int _SP_Type;
		
		private string _SP_Description;
		
		private string _SP_Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSP_IDChanging(string value);
    partial void OnSP_IDChanged();
    partial void OnSP_ValueChanging(string value);
    partial void OnSP_ValueChanged();
    partial void OnSP_TypeChanging(int value);
    partial void OnSP_TypeChanged();
    partial void OnSP_DescriptionChanging(string value);
    partial void OnSP_DescriptionChanged();
    partial void OnSP_RemarkChanging(string value);
    partial void OnSP_RemarkChanged();
    #endregion
		
		public SystemProfile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SP_ID", DbType="VarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SP_ID
		{
			get
			{
				return this._SP_ID;
			}
			set
			{
				if ((this._SP_ID != value))
				{
					this.OnSP_IDChanging(value);
					this.SendPropertyChanging();
					this._SP_ID = value;
					this.SendPropertyChanged("SP_ID");
					this.OnSP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SP_Value", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string SP_Value
		{
			get
			{
				return this._SP_Value;
			}
			set
			{
				if ((this._SP_Value != value))
				{
					this.OnSP_ValueChanging(value);
					this.SendPropertyChanging();
					this._SP_Value = value;
					this.SendPropertyChanged("SP_Value");
					this.OnSP_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SP_Type", DbType="Int NOT NULL")]
		public int SP_Type
		{
			get
			{
				return this._SP_Type;
			}
			set
			{
				if ((this._SP_Type != value))
				{
					this.OnSP_TypeChanging(value);
					this.SendPropertyChanging();
					this._SP_Type = value;
					this.SendPropertyChanged("SP_Type");
					this.OnSP_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SP_Description", DbType="VarChar(500)")]
		public string SP_Description
		{
			get
			{
				return this._SP_Description;
			}
			set
			{
				if ((this._SP_Description != value))
				{
					this.OnSP_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._SP_Description = value;
					this.SendPropertyChanged("SP_Description");
					this.OnSP_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SP_Remark", DbType="VarChar(500)")]
		public string SP_Remark
		{
			get
			{
				return this._SP_Remark;
			}
			set
			{
				if ((this._SP_Remark != value))
				{
					this.OnSP_RemarkChanging(value);
					this.SendPropertyChanging();
					this._SP_Remark = value;
					this.SendPropertyChanged("SP_Remark");
					this.OnSP_RemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LOG_ID;
		
		private string _LOG_UserID;
		
		private string _LOG_FuctionID;
		
		private int _LOG_actionType;
		
		private System.DateTime _LOG_actionDate;
		
		private string _LOG_actionDesc;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLOG_IDChanging(System.Guid value);
    partial void OnLOG_IDChanged();
    partial void OnLOG_UserIDChanging(string value);
    partial void OnLOG_UserIDChanged();
    partial void OnLOG_FuctionIDChanging(string value);
    partial void OnLOG_FuctionIDChanged();
    partial void OnLOG_actionTypeChanging(int value);
    partial void OnLOG_actionTypeChanged();
    partial void OnLOG_actionDateChanging(System.DateTime value);
    partial void OnLOG_actionDateChanged();
    partial void OnLOG_actionDescChanging(string value);
    partial void OnLOG_actionDescChanged();
    #endregion
		
		public Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOG_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid LOG_ID
		{
			get
			{
				return this._LOG_ID;
			}
			set
			{
				if ((this._LOG_ID != value))
				{
					this.OnLOG_IDChanging(value);
					this.SendPropertyChanging();
					this._LOG_ID = value;
					this.SendPropertyChanged("LOG_ID");
					this.OnLOG_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOG_UserID", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string LOG_UserID
		{
			get
			{
				return this._LOG_UserID;
			}
			set
			{
				if ((this._LOG_UserID != value))
				{
					this.OnLOG_UserIDChanging(value);
					this.SendPropertyChanging();
					this._LOG_UserID = value;
					this.SendPropertyChanged("LOG_UserID");
					this.OnLOG_UserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOG_FuctionID", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string LOG_FuctionID
		{
			get
			{
				return this._LOG_FuctionID;
			}
			set
			{
				if ((this._LOG_FuctionID != value))
				{
					this.OnLOG_FuctionIDChanging(value);
					this.SendPropertyChanging();
					this._LOG_FuctionID = value;
					this.SendPropertyChanged("LOG_FuctionID");
					this.OnLOG_FuctionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOG_actionType", DbType="Int NOT NULL")]
		public int LOG_actionType
		{
			get
			{
				return this._LOG_actionType;
			}
			set
			{
				if ((this._LOG_actionType != value))
				{
					this.OnLOG_actionTypeChanging(value);
					this.SendPropertyChanging();
					this._LOG_actionType = value;
					this.SendPropertyChanged("LOG_actionType");
					this.OnLOG_actionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOG_actionDate", DbType="DateTime NOT NULL")]
		public System.DateTime LOG_actionDate
		{
			get
			{
				return this._LOG_actionDate;
			}
			set
			{
				if ((this._LOG_actionDate != value))
				{
					this.OnLOG_actionDateChanging(value);
					this.SendPropertyChanging();
					this._LOG_actionDate = value;
					this.SendPropertyChanged("LOG_actionDate");
					this.OnLOG_actionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOG_actionDesc", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string LOG_actionDesc
		{
			get
			{
				return this._LOG_actionDesc;
			}
			set
			{
				if ((this._LOG_actionDesc != value))
				{
					this.OnLOG_actionDescChanging(value);
					this.SendPropertyChanging();
					this._LOG_actionDesc = value;
					this.SendPropertyChanged("LOG_actionDesc");
					this.OnLOG_actionDescChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UniversityInfo")]
	public partial class UniversityInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _StudentCount;
		
		private System.Nullable<double> _Area;
		
		private int _ID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentCountChanging(System.Nullable<int> value);
    partial void OnStudentCountChanged();
    partial void OnAreaChanging(System.Nullable<double> value);
    partial void OnAreaChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public UniversityInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCount", DbType="Int")]
		public System.Nullable<int> StudentCount
		{
			get
			{
				return this._StudentCount;
			}
			set
			{
				if ((this._StudentCount != value))
				{
					this.OnStudentCountChanging(value);
					this.SendPropertyChanging();
					this._StudentCount = value;
					this.SendPropertyChanged("StudentCount");
					this.OnStudentCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="Float")]
		public System.Nullable<double> Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuildingBriefInfo")]
	public partial class BuildingBriefInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BDI_ID;
		
		private string _BDI_Name;
		
		private int _SAI_ID;
		
		private byte _BDI_Flag;
		
		private System.Nullable<byte> _BDI_HJFlag;
		
		private string _BDI_OperateRule;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBDI_IDChanging(int value);
    partial void OnBDI_IDChanged();
    partial void OnBDI_NameChanging(string value);
    partial void OnBDI_NameChanged();
    partial void OnSAI_IDChanging(int value);
    partial void OnSAI_IDChanged();
    partial void OnBDI_FlagChanging(byte value);
    partial void OnBDI_FlagChanged();
    partial void OnBDI_HJFlagChanging(System.Nullable<byte> value);
    partial void OnBDI_HJFlagChanged();
    partial void OnBDI_OperateRuleChanging(string value);
    partial void OnBDI_OperateRuleChanged();
    #endregion
		
		public BuildingBriefInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BDI_ID
		{
			get
			{
				return this._BDI_ID;
			}
			set
			{
				if ((this._BDI_ID != value))
				{
					this.OnBDI_IDChanging(value);
					this.SendPropertyChanging();
					this._BDI_ID = value;
					this.SendPropertyChanged("BDI_ID");
					this.OnBDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string BDI_Name
		{
			get
			{
				return this._BDI_Name;
			}
			set
			{
				if ((this._BDI_Name != value))
				{
					this.OnBDI_NameChanging(value);
					this.SendPropertyChanging();
					this._BDI_Name = value;
					this.SendPropertyChanged("BDI_Name");
					this.OnBDI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAI_ID", DbType="Int NOT NULL")]
		public int SAI_ID
		{
			get
			{
				return this._SAI_ID;
			}
			set
			{
				if ((this._SAI_ID != value))
				{
					this.OnSAI_IDChanging(value);
					this.SendPropertyChanging();
					this._SAI_ID = value;
					this.SendPropertyChanged("SAI_ID");
					this.OnSAI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Flag", DbType="TinyInt NOT NULL")]
		public byte BDI_Flag
		{
			get
			{
				return this._BDI_Flag;
			}
			set
			{
				if ((this._BDI_Flag != value))
				{
					this.OnBDI_FlagChanging(value);
					this.SendPropertyChanging();
					this._BDI_Flag = value;
					this.SendPropertyChanged("BDI_Flag");
					this.OnBDI_FlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_HJFlag", DbType="TinyInt")]
		public System.Nullable<byte> BDI_HJFlag
		{
			get
			{
				return this._BDI_HJFlag;
			}
			set
			{
				if ((this._BDI_HJFlag != value))
				{
					this.OnBDI_HJFlagChanging(value);
					this.SendPropertyChanging();
					this._BDI_HJFlag = value;
					this.SendPropertyChanged("BDI_HJFlag");
					this.OnBDI_HJFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_OperateRule", DbType="VarChar(100)")]
		public string BDI_OperateRule
		{
			get
			{
				return this._BDI_OperateRule;
			}
			set
			{
				if ((this._BDI_OperateRule != value))
				{
					this.OnBDI_OperateRuleChanging(value);
					this.SendPropertyChanging();
					this._BDI_OperateRule = value;
					this.SendPropertyChanged("BDI_OperateRule");
					this.OnBDI_OperateRuleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuildingEnergyConsum")]
	public partial class BuildingEnergyConsum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BEC_BID;
		
		private int _BEC_Year;
		
		private string _BEC_PowerType;
		
		private System.Nullable<double> _BEC_Consum;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBEC_BIDChanging(int value);
    partial void OnBEC_BIDChanged();
    partial void OnBEC_YearChanging(int value);
    partial void OnBEC_YearChanged();
    partial void OnBEC_PowerTypeChanging(string value);
    partial void OnBEC_PowerTypeChanged();
    partial void OnBEC_ConsumChanging(System.Nullable<double> value);
    partial void OnBEC_ConsumChanged();
    #endregion
		
		public BuildingEnergyConsum()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BEC_BID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BEC_BID
		{
			get
			{
				return this._BEC_BID;
			}
			set
			{
				if ((this._BEC_BID != value))
				{
					this.OnBEC_BIDChanging(value);
					this.SendPropertyChanging();
					this._BEC_BID = value;
					this.SendPropertyChanged("BEC_BID");
					this.OnBEC_BIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BEC_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BEC_Year
		{
			get
			{
				return this._BEC_Year;
			}
			set
			{
				if ((this._BEC_Year != value))
				{
					this.OnBEC_YearChanging(value);
					this.SendPropertyChanging();
					this._BEC_Year = value;
					this.SendPropertyChanged("BEC_Year");
					this.OnBEC_YearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BEC_PowerType", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BEC_PowerType
		{
			get
			{
				return this._BEC_PowerType;
			}
			set
			{
				if ((this._BEC_PowerType != value))
				{
					this.OnBEC_PowerTypeChanging(value);
					this.SendPropertyChanging();
					this._BEC_PowerType = value;
					this.SendPropertyChanged("BEC_PowerType");
					this.OnBEC_PowerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BEC_Consum", DbType="Float")]
		public System.Nullable<double> BEC_Consum
		{
			get
			{
				return this._BEC_Consum;
			}
			set
			{
				if ((this._BEC_Consum != value))
				{
					this.OnBEC_ConsumChanging(value);
					this.SendPropertyChanging();
					this._BEC_Consum = value;
					this.SendPropertyChanged("BEC_Consum");
					this.OnBEC_ConsumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnalogInfo")]
	public partial class AnalogInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RTU_No;
		
		private int _AI_No;
		
		private int _AI_Serial;
		
		private string _AI_Name;
		
		private double _AI_LogicalLow;
		
		private double _AI_LogicalUp;
		
		private byte _AI_Decimal;
		
		private byte _AI_Cptflag;
		
		private double _AI_Base;
		
		private double _AI_Rate;
		
		private System.Nullable<double> _AI_LockVal;
		
		private byte _AI_LockFlag;
		
		private byte _AI_Timespace;
		
		private string _AI_Unit;
		
		private byte _AI_State;
		
		private short _AI_Level;
		
		private byte _AI_Type;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRTU_NoChanging(short value);
    partial void OnRTU_NoChanged();
    partial void OnAI_NoChanging(int value);
    partial void OnAI_NoChanged();
    partial void OnAI_SerialChanging(int value);
    partial void OnAI_SerialChanged();
    partial void OnAI_NameChanging(string value);
    partial void OnAI_NameChanged();
    partial void OnAI_LogicalLowChanging(double value);
    partial void OnAI_LogicalLowChanged();
    partial void OnAI_LogicalUpChanging(double value);
    partial void OnAI_LogicalUpChanged();
    partial void OnAI_DecimalChanging(byte value);
    partial void OnAI_DecimalChanged();
    partial void OnAI_CptflagChanging(byte value);
    partial void OnAI_CptflagChanged();
    partial void OnAI_BaseChanging(double value);
    partial void OnAI_BaseChanged();
    partial void OnAI_RateChanging(double value);
    partial void OnAI_RateChanged();
    partial void OnAI_LockValChanging(System.Nullable<double> value);
    partial void OnAI_LockValChanged();
    partial void OnAI_LockFlagChanging(byte value);
    partial void OnAI_LockFlagChanged();
    partial void OnAI_TimespaceChanging(byte value);
    partial void OnAI_TimespaceChanged();
    partial void OnAI_UnitChanging(string value);
    partial void OnAI_UnitChanged();
    partial void OnAI_StateChanging(byte value);
    partial void OnAI_StateChanged();
    partial void OnAI_LevelChanging(short value);
    partial void OnAI_LevelChanged();
    partial void OnAI_TypeChanging(byte value);
    partial void OnAI_TypeChanged();
    #endregion
		
		public AnalogInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_No", DbType="SmallInt NOT NULL")]
		public short RTU_No
		{
			get
			{
				return this._RTU_No;
			}
			set
			{
				if ((this._RTU_No != value))
				{
					this.OnRTU_NoChanging(value);
					this.SendPropertyChanging();
					this._RTU_No = value;
					this.SendPropertyChanged("RTU_No");
					this.OnRTU_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_No", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AI_No
		{
			get
			{
				return this._AI_No;
			}
			set
			{
				if ((this._AI_No != value))
				{
					this.OnAI_NoChanging(value);
					this.SendPropertyChanging();
					this._AI_No = value;
					this.SendPropertyChanged("AI_No");
					this.OnAI_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Serial", DbType="Int NOT NULL")]
		public int AI_Serial
		{
			get
			{
				return this._AI_Serial;
			}
			set
			{
				if ((this._AI_Serial != value))
				{
					this.OnAI_SerialChanging(value);
					this.SendPropertyChanging();
					this._AI_Serial = value;
					this.SendPropertyChanged("AI_Serial");
					this.OnAI_SerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string AI_Name
		{
			get
			{
				return this._AI_Name;
			}
			set
			{
				if ((this._AI_Name != value))
				{
					this.OnAI_NameChanging(value);
					this.SendPropertyChanging();
					this._AI_Name = value;
					this.SendPropertyChanged("AI_Name");
					this.OnAI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_LogicalLow", DbType="Float NOT NULL")]
		public double AI_LogicalLow
		{
			get
			{
				return this._AI_LogicalLow;
			}
			set
			{
				if ((this._AI_LogicalLow != value))
				{
					this.OnAI_LogicalLowChanging(value);
					this.SendPropertyChanging();
					this._AI_LogicalLow = value;
					this.SendPropertyChanged("AI_LogicalLow");
					this.OnAI_LogicalLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_LogicalUp", DbType="Float NOT NULL")]
		public double AI_LogicalUp
		{
			get
			{
				return this._AI_LogicalUp;
			}
			set
			{
				if ((this._AI_LogicalUp != value))
				{
					this.OnAI_LogicalUpChanging(value);
					this.SendPropertyChanging();
					this._AI_LogicalUp = value;
					this.SendPropertyChanged("AI_LogicalUp");
					this.OnAI_LogicalUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Decimal", DbType="TinyInt NOT NULL")]
		public byte AI_Decimal
		{
			get
			{
				return this._AI_Decimal;
			}
			set
			{
				if ((this._AI_Decimal != value))
				{
					this.OnAI_DecimalChanging(value);
					this.SendPropertyChanging();
					this._AI_Decimal = value;
					this.SendPropertyChanged("AI_Decimal");
					this.OnAI_DecimalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Cptflag", DbType="TinyInt NOT NULL")]
		public byte AI_Cptflag
		{
			get
			{
				return this._AI_Cptflag;
			}
			set
			{
				if ((this._AI_Cptflag != value))
				{
					this.OnAI_CptflagChanging(value);
					this.SendPropertyChanging();
					this._AI_Cptflag = value;
					this.SendPropertyChanged("AI_Cptflag");
					this.OnAI_CptflagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Base", DbType="Float NOT NULL")]
		public double AI_Base
		{
			get
			{
				return this._AI_Base;
			}
			set
			{
				if ((this._AI_Base != value))
				{
					this.OnAI_BaseChanging(value);
					this.SendPropertyChanging();
					this._AI_Base = value;
					this.SendPropertyChanged("AI_Base");
					this.OnAI_BaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Rate", DbType="Float NOT NULL")]
		public double AI_Rate
		{
			get
			{
				return this._AI_Rate;
			}
			set
			{
				if ((this._AI_Rate != value))
				{
					this.OnAI_RateChanging(value);
					this.SendPropertyChanging();
					this._AI_Rate = value;
					this.SendPropertyChanged("AI_Rate");
					this.OnAI_RateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_LockVal", DbType="Float")]
		public System.Nullable<double> AI_LockVal
		{
			get
			{
				return this._AI_LockVal;
			}
			set
			{
				if ((this._AI_LockVal != value))
				{
					this.OnAI_LockValChanging(value);
					this.SendPropertyChanging();
					this._AI_LockVal = value;
					this.SendPropertyChanged("AI_LockVal");
					this.OnAI_LockValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_LockFlag", DbType="TinyInt NOT NULL")]
		public byte AI_LockFlag
		{
			get
			{
				return this._AI_LockFlag;
			}
			set
			{
				if ((this._AI_LockFlag != value))
				{
					this.OnAI_LockFlagChanging(value);
					this.SendPropertyChanging();
					this._AI_LockFlag = value;
					this.SendPropertyChanged("AI_LockFlag");
					this.OnAI_LockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Timespace", DbType="TinyInt NOT NULL")]
		public byte AI_Timespace
		{
			get
			{
				return this._AI_Timespace;
			}
			set
			{
				if ((this._AI_Timespace != value))
				{
					this.OnAI_TimespaceChanging(value);
					this.SendPropertyChanging();
					this._AI_Timespace = value;
					this.SendPropertyChanged("AI_Timespace");
					this.OnAI_TimespaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Unit", DbType="VarChar(500)")]
		public string AI_Unit
		{
			get
			{
				return this._AI_Unit;
			}
			set
			{
				if ((this._AI_Unit != value))
				{
					this.OnAI_UnitChanging(value);
					this.SendPropertyChanging();
					this._AI_Unit = value;
					this.SendPropertyChanged("AI_Unit");
					this.OnAI_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_State", DbType="TinyInt NOT NULL")]
		public byte AI_State
		{
			get
			{
				return this._AI_State;
			}
			set
			{
				if ((this._AI_State != value))
				{
					this.OnAI_StateChanging(value);
					this.SendPropertyChanging();
					this._AI_State = value;
					this.SendPropertyChanged("AI_State");
					this.OnAI_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Level", DbType="SmallInt NOT NULL")]
		public short AI_Level
		{
			get
			{
				return this._AI_Level;
			}
			set
			{
				if ((this._AI_Level != value))
				{
					this.OnAI_LevelChanging(value);
					this.SendPropertyChanging();
					this._AI_Level = value;
					this.SendPropertyChanged("AI_Level");
					this.OnAI_LevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Type", DbType="TinyInt NOT NULL")]
		public byte AI_Type
		{
			get
			{
				return this._AI_Type;
			}
			set
			{
				if ((this._AI_Type != value))
				{
					this.OnAI_TypeChanging(value);
					this.SendPropertyChanging();
					this._AI_Type = value;
					this.SendPropertyChanged("AI_Type");
					this.OnAI_TypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SetEmail")]
	public partial class SetEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SE_EmailNo;
		
		private string _SE_Email;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSE_EmailNoChanging(int value);
    partial void OnSE_EmailNoChanged();
    partial void OnSE_EmailChanging(string value);
    partial void OnSE_EmailChanged();
    #endregion
		
		public SetEmail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SE_EmailNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SE_EmailNo
		{
			get
			{
				return this._SE_EmailNo;
			}
			set
			{
				if ((this._SE_EmailNo != value))
				{
					this.OnSE_EmailNoChanging(value);
					this.SendPropertyChanging();
					this._SE_EmailNo = value;
					this.SendPropertyChanged("SE_EmailNo");
					this.OnSE_EmailNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SE_Email", DbType="VarChar(500)")]
		public string SE_Email
		{
			get
			{
				return this._SE_Email;
			}
			set
			{
				if ((this._SE_Email != value))
				{
					this.OnSE_EmailChanging(value);
					this.SendPropertyChanging();
					this._SE_Email = value;
					this.SendPropertyChanged("SE_Email");
					this.OnSE_EmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ElecDistributionInfo")]
	public partial class ElecDistributionInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ED_ID;
		
		private int _BD_ID;
		
		private string _ED_Name;
		
		private string _ED_Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnED_IDChanging(int value);
    partial void OnED_IDChanged();
    partial void OnBD_IDChanging(int value);
    partial void OnBD_IDChanged();
    partial void OnED_NameChanging(string value);
    partial void OnED_NameChanged();
    partial void OnED_RemarkChanging(string value);
    partial void OnED_RemarkChanged();
    #endregion
		
		public ElecDistributionInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ED_ID
		{
			get
			{
				return this._ED_ID;
			}
			set
			{
				if ((this._ED_ID != value))
				{
					this.OnED_IDChanging(value);
					this.SendPropertyChanging();
					this._ED_ID = value;
					this.SendPropertyChanged("ED_ID");
					this.OnED_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BD_ID", DbType="Int NOT NULL")]
		public int BD_ID
		{
			get
			{
				return this._BD_ID;
			}
			set
			{
				if ((this._BD_ID != value))
				{
					this.OnBD_IDChanging(value);
					this.SendPropertyChanging();
					this._BD_ID = value;
					this.SendPropertyChanged("BD_ID");
					this.OnBD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string ED_Name
		{
			get
			{
				return this._ED_Name;
			}
			set
			{
				if ((this._ED_Name != value))
				{
					this.OnED_NameChanging(value);
					this.SendPropertyChanging();
					this._ED_Name = value;
					this.SendPropertyChanged("ED_Name");
					this.OnED_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_Remark", DbType="VarChar(500)")]
		public string ED_Remark
		{
			get
			{
				return this._ED_Remark;
			}
			set
			{
				if ((this._ED_Remark != value))
				{
					this.OnED_RemarkChanging(value);
					this.SendPropertyChanging();
					this._ED_Remark = value;
					this.SendPropertyChanged("ED_Remark");
					this.OnED_RemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ElecTSInfo")]
	public partial class ElecTSInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TS_ID;
		
		private int _ED_ID;
		
		private string _TS_Name;
		
		private string _TS_Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTS_IDChanging(int value);
    partial void OnTS_IDChanged();
    partial void OnED_IDChanging(int value);
    partial void OnED_IDChanged();
    partial void OnTS_NameChanging(string value);
    partial void OnTS_NameChanged();
    partial void OnTS_RemarkChanging(string value);
    partial void OnTS_RemarkChanged();
    #endregion
		
		public ElecTSInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TS_ID
		{
			get
			{
				return this._TS_ID;
			}
			set
			{
				if ((this._TS_ID != value))
				{
					this.OnTS_IDChanging(value);
					this.SendPropertyChanging();
					this._TS_ID = value;
					this.SendPropertyChanged("TS_ID");
					this.OnTS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_ID", DbType="Int NOT NULL")]
		public int ED_ID
		{
			get
			{
				return this._ED_ID;
			}
			set
			{
				if ((this._ED_ID != value))
				{
					this.OnED_IDChanging(value);
					this.SendPropertyChanging();
					this._ED_ID = value;
					this.SendPropertyChanged("ED_ID");
					this.OnED_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string TS_Name
		{
			get
			{
				return this._TS_Name;
			}
			set
			{
				if ((this._TS_Name != value))
				{
					this.OnTS_NameChanging(value);
					this.SendPropertyChanging();
					this._TS_Name = value;
					this.SendPropertyChanged("TS_Name");
					this.OnTS_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_Remark", DbType="VarChar(500)")]
		public string TS_Remark
		{
			get
			{
				return this._TS_Remark;
			}
			set
			{
				if ((this._TS_Remark != value))
				{
					this.OnTS_RemarkChanging(value);
					this.SendPropertyChanging();
					this._TS_Remark = value;
					this.SendPropertyChanged("TS_Remark");
					this.OnTS_RemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuildingGuanghua")]
	public partial class BuildingGuanghua : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BG_No;
		
		private int _BD_ID;
		
		private int _ED_ID;
		
		private int _TS_ID;
		
		private string _CntrNo;
		
		private string _BG_Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBG_NoChanging(int value);
    partial void OnBG_NoChanged();
    partial void OnBD_IDChanging(int value);
    partial void OnBD_IDChanged();
    partial void OnED_IDChanging(int value);
    partial void OnED_IDChanged();
    partial void OnTS_IDChanging(int value);
    partial void OnTS_IDChanged();
    partial void OnCntrNoChanging(string value);
    partial void OnCntrNoChanged();
    partial void OnBG_RemarkChanging(string value);
    partial void OnBG_RemarkChanged();
    #endregion
		
		public BuildingGuanghua()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BG_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BG_No
		{
			get
			{
				return this._BG_No;
			}
			set
			{
				if ((this._BG_No != value))
				{
					this.OnBG_NoChanging(value);
					this.SendPropertyChanging();
					this._BG_No = value;
					this.SendPropertyChanged("BG_No");
					this.OnBG_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BD_ID", DbType="Int NOT NULL")]
		public int BD_ID
		{
			get
			{
				return this._BD_ID;
			}
			set
			{
				if ((this._BD_ID != value))
				{
					this.OnBD_IDChanging(value);
					this.SendPropertyChanging();
					this._BD_ID = value;
					this.SendPropertyChanged("BD_ID");
					this.OnBD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_ID", DbType="Int NOT NULL")]
		public int ED_ID
		{
			get
			{
				return this._ED_ID;
			}
			set
			{
				if ((this._ED_ID != value))
				{
					this.OnED_IDChanging(value);
					this.SendPropertyChanging();
					this._ED_ID = value;
					this.SendPropertyChanged("ED_ID");
					this.OnED_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_ID", DbType="Int NOT NULL")]
		public int TS_ID
		{
			get
			{
				return this._TS_ID;
			}
			set
			{
				if ((this._TS_ID != value))
				{
					this.OnTS_IDChanging(value);
					this.SendPropertyChanging();
					this._TS_ID = value;
					this.SendPropertyChanged("TS_ID");
					this.OnTS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CntrNo", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string CntrNo
		{
			get
			{
				return this._CntrNo;
			}
			set
			{
				if ((this._CntrNo != value))
				{
					this.OnCntrNoChanging(value);
					this.SendPropertyChanging();
					this._CntrNo = value;
					this.SendPropertyChanged("CntrNo");
					this.OnCntrNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BG_Remark", DbType="VarChar(500)")]
		public string BG_Remark
		{
			get
			{
				return this._BG_Remark;
			}
			set
			{
				if ((this._BG_Remark != value))
				{
					this.OnBG_RemarkChanging(value);
					this.SendPropertyChanging();
					this._BG_Remark = value;
					this.SendPropertyChanged("BG_Remark");
					this.OnBG_RemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExceptionInfo")]
	public partial class ExceptionInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EI_ExceptionNo;
		
		private int _EI_AnalogNo;
		
		private string _EI_Name;
		
		private System.DateTime _EI_Date;
		
		private string _EI_ExceptionType;
		
		private string _EI_ExceptionName;
		
		private System.Nullable<double> _EI_HistoryValue;
		
		private System.Nullable<double> _EI_CurrentValue;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEI_ExceptionNoChanging(int value);
    partial void OnEI_ExceptionNoChanged();
    partial void OnEI_AnalogNoChanging(int value);
    partial void OnEI_AnalogNoChanged();
    partial void OnEI_NameChanging(string value);
    partial void OnEI_NameChanged();
    partial void OnEI_DateChanging(System.DateTime value);
    partial void OnEI_DateChanged();
    partial void OnEI_ExceptionTypeChanging(string value);
    partial void OnEI_ExceptionTypeChanged();
    partial void OnEI_ExceptionNameChanging(string value);
    partial void OnEI_ExceptionNameChanged();
    partial void OnEI_HistoryValueChanging(System.Nullable<double> value);
    partial void OnEI_HistoryValueChanged();
    partial void OnEI_CurrentValueChanging(System.Nullable<double> value);
    partial void OnEI_CurrentValueChanged();
    #endregion
		
		public ExceptionInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EI_ExceptionNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EI_ExceptionNo
		{
			get
			{
				return this._EI_ExceptionNo;
			}
			set
			{
				if ((this._EI_ExceptionNo != value))
				{
					this.OnEI_ExceptionNoChanging(value);
					this.SendPropertyChanging();
					this._EI_ExceptionNo = value;
					this.SendPropertyChanged("EI_ExceptionNo");
					this.OnEI_ExceptionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EI_AnalogNo", DbType="Int NOT NULL")]
		public int EI_AnalogNo
		{
			get
			{
				return this._EI_AnalogNo;
			}
			set
			{
				if ((this._EI_AnalogNo != value))
				{
					this.OnEI_AnalogNoChanging(value);
					this.SendPropertyChanging();
					this._EI_AnalogNo = value;
					this.SendPropertyChanged("EI_AnalogNo");
					this.OnEI_AnalogNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EI_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string EI_Name
		{
			get
			{
				return this._EI_Name;
			}
			set
			{
				if ((this._EI_Name != value))
				{
					this.OnEI_NameChanging(value);
					this.SendPropertyChanging();
					this._EI_Name = value;
					this.SendPropertyChanged("EI_Name");
					this.OnEI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EI_Date", DbType="DateTime NOT NULL")]
		public System.DateTime EI_Date
		{
			get
			{
				return this._EI_Date;
			}
			set
			{
				if ((this._EI_Date != value))
				{
					this.OnEI_DateChanging(value);
					this.SendPropertyChanging();
					this._EI_Date = value;
					this.SendPropertyChanged("EI_Date");
					this.OnEI_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EI_ExceptionType", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string EI_ExceptionType
		{
			get
			{
				return this._EI_ExceptionType;
			}
			set
			{
				if ((this._EI_ExceptionType != value))
				{
					this.OnEI_ExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._EI_ExceptionType = value;
					this.SendPropertyChanged("EI_ExceptionType");
					this.OnEI_ExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EI_ExceptionName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string EI_ExceptionName
		{
			get
			{
				return this._EI_ExceptionName;
			}
			set
			{
				if ((this._EI_ExceptionName != value))
				{
					this.OnEI_ExceptionNameChanging(value);
					this.SendPropertyChanging();
					this._EI_ExceptionName = value;
					this.SendPropertyChanged("EI_ExceptionName");
					this.OnEI_ExceptionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EI_HistoryValue", DbType="Float")]
		public System.Nullable<double> EI_HistoryValue
		{
			get
			{
				return this._EI_HistoryValue;
			}
			set
			{
				if ((this._EI_HistoryValue != value))
				{
					this.OnEI_HistoryValueChanging(value);
					this.SendPropertyChanging();
					this._EI_HistoryValue = value;
					this.SendPropertyChanged("EI_HistoryValue");
					this.OnEI_HistoryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EI_CurrentValue", DbType="Float")]
		public System.Nullable<double> EI_CurrentValue
		{
			get
			{
				return this._EI_CurrentValue;
			}
			set
			{
				if ((this._EI_CurrentValue != value))
				{
					this.OnEI_CurrentValueChanging(value);
					this.SendPropertyChanging();
					this._EI_CurrentValue = value;
					this.SendPropertyChanged("EI_CurrentValue");
					this.OnEI_CurrentValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuildingTypes")]
	public partial class BuildingTypes
	{
		
		private string _BT_ID;
		
		private string _BT_Name;
		
		private string _BT_Remark;
		
		public BuildingTypes()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BT_ID", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string BT_ID
		{
			get
			{
				return this._BT_ID;
			}
			set
			{
				if ((this._BT_ID != value))
				{
					this._BT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BT_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string BT_Name
		{
			get
			{
				return this._BT_Name;
			}
			set
			{
				if ((this._BT_Name != value))
				{
					this._BT_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BT_Remark", DbType="VarChar(500)")]
		public string BT_Remark
		{
			get
			{
				return this._BT_Remark;
			}
			set
			{
				if ((this._BT_Remark != value))
				{
					this._BT_Remark = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnalogMeasurePoint")]
	public partial class AnalogMeasurePoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AMP_AnalogNo;
		
		private string _AMP_Name;
		
		private byte _AMP_CptFlag;
		
		private byte _AMP_Statistic;
		
		private System.DateTime _AMP_Date;
		
		private double _AMP_Val;
		
		private System.Nullable<double> _AMP_ValRem;
		
		private string _AMP_Unit;
		
		private System.Nullable<int> _AMP_SchooldID;
		
		private System.Nullable<int> _AMP_SAreaID;
		
		private System.Nullable<int> _AMP_BuildingID;
		
		private System.Nullable<int> _AMP_RoomID;
		
		private System.Nullable<int> _AMP_DepartID;
		
		private string _AMP_PowerType;
		
		private string _AMP_PowerName;
		
		private byte _AMP_Timespan;
		
		private System.Nullable<int> _AMP_ParentNo;
		
		private string _AMP_OperationRule;
		
		private System.Nullable<double> _AMP_OperationParameter;
		
		private bool _AMP_State;
		
		private string _AMP_Encoding;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAMP_AnalogNoChanging(int value);
    partial void OnAMP_AnalogNoChanged();
    partial void OnAMP_NameChanging(string value);
    partial void OnAMP_NameChanged();
    partial void OnAMP_CptFlagChanging(byte value);
    partial void OnAMP_CptFlagChanged();
    partial void OnAMP_StatisticChanging(byte value);
    partial void OnAMP_StatisticChanged();
    partial void OnAMP_DateChanging(System.DateTime value);
    partial void OnAMP_DateChanged();
    partial void OnAMP_ValChanging(double value);
    partial void OnAMP_ValChanged();
    partial void OnAMP_ValRemChanging(System.Nullable<double> value);
    partial void OnAMP_ValRemChanged();
    partial void OnAMP_UnitChanging(string value);
    partial void OnAMP_UnitChanged();
    partial void OnAMP_SchooldIDChanging(System.Nullable<int> value);
    partial void OnAMP_SchooldIDChanged();
    partial void OnAMP_SAreaIDChanging(System.Nullable<int> value);
    partial void OnAMP_SAreaIDChanged();
    partial void OnAMP_BuildingIDChanging(System.Nullable<int> value);
    partial void OnAMP_BuildingIDChanged();
    partial void OnAMP_RoomIDChanging(System.Nullable<int> value);
    partial void OnAMP_RoomIDChanged();
    partial void OnAMP_DepartIDChanging(System.Nullable<int> value);
    partial void OnAMP_DepartIDChanged();
    partial void OnAMP_PowerTypeChanging(string value);
    partial void OnAMP_PowerTypeChanged();
    partial void OnAMP_PowerNameChanging(string value);
    partial void OnAMP_PowerNameChanged();
    partial void OnAMP_TimespanChanging(byte value);
    partial void OnAMP_TimespanChanged();
    partial void OnAMP_ParentNoChanging(System.Nullable<int> value);
    partial void OnAMP_ParentNoChanged();
    partial void OnAMP_OperationRuleChanging(string value);
    partial void OnAMP_OperationRuleChanged();
    partial void OnAMP_OperationParameterChanging(System.Nullable<double> value);
    partial void OnAMP_OperationParameterChanged();
    partial void OnAMP_StateChanging(bool value);
    partial void OnAMP_StateChanged();
    partial void OnAMP_EncodingChanging(string value);
    partial void OnAMP_EncodingChanged();
    #endregion
		
		public AnalogMeasurePoint()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_AnalogNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AMP_AnalogNo
		{
			get
			{
				return this._AMP_AnalogNo;
			}
			set
			{
				if ((this._AMP_AnalogNo != value))
				{
					this.OnAMP_AnalogNoChanging(value);
					this.SendPropertyChanging();
					this._AMP_AnalogNo = value;
					this.SendPropertyChanged("AMP_AnalogNo");
					this.OnAMP_AnalogNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string AMP_Name
		{
			get
			{
				return this._AMP_Name;
			}
			set
			{
				if ((this._AMP_Name != value))
				{
					this.OnAMP_NameChanging(value);
					this.SendPropertyChanging();
					this._AMP_Name = value;
					this.SendPropertyChanged("AMP_Name");
					this.OnAMP_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_CptFlag", DbType="TinyInt NOT NULL")]
		public byte AMP_CptFlag
		{
			get
			{
				return this._AMP_CptFlag;
			}
			set
			{
				if ((this._AMP_CptFlag != value))
				{
					this.OnAMP_CptFlagChanging(value);
					this.SendPropertyChanging();
					this._AMP_CptFlag = value;
					this.SendPropertyChanged("AMP_CptFlag");
					this.OnAMP_CptFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Statistic", DbType="TinyInt NOT NULL")]
		public byte AMP_Statistic
		{
			get
			{
				return this._AMP_Statistic;
			}
			set
			{
				if ((this._AMP_Statistic != value))
				{
					this.OnAMP_StatisticChanging(value);
					this.SendPropertyChanging();
					this._AMP_Statistic = value;
					this.SendPropertyChanged("AMP_Statistic");
					this.OnAMP_StatisticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Date", DbType="DateTime NOT NULL")]
		public System.DateTime AMP_Date
		{
			get
			{
				return this._AMP_Date;
			}
			set
			{
				if ((this._AMP_Date != value))
				{
					this.OnAMP_DateChanging(value);
					this.SendPropertyChanging();
					this._AMP_Date = value;
					this.SendPropertyChanged("AMP_Date");
					this.OnAMP_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Val", DbType="Float NOT NULL")]
		public double AMP_Val
		{
			get
			{
				return this._AMP_Val;
			}
			set
			{
				if ((this._AMP_Val != value))
				{
					this.OnAMP_ValChanging(value);
					this.SendPropertyChanging();
					this._AMP_Val = value;
					this.SendPropertyChanged("AMP_Val");
					this.OnAMP_ValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_ValRem", DbType="Float")]
		public System.Nullable<double> AMP_ValRem
		{
			get
			{
				return this._AMP_ValRem;
			}
			set
			{
				if ((this._AMP_ValRem != value))
				{
					this.OnAMP_ValRemChanging(value);
					this.SendPropertyChanging();
					this._AMP_ValRem = value;
					this.SendPropertyChanged("AMP_ValRem");
					this.OnAMP_ValRemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Unit", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string AMP_Unit
		{
			get
			{
				return this._AMP_Unit;
			}
			set
			{
				if ((this._AMP_Unit != value))
				{
					this.OnAMP_UnitChanging(value);
					this.SendPropertyChanging();
					this._AMP_Unit = value;
					this.SendPropertyChanged("AMP_Unit");
					this.OnAMP_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_SchooldID", DbType="Int")]
		public System.Nullable<int> AMP_SchooldID
		{
			get
			{
				return this._AMP_SchooldID;
			}
			set
			{
				if ((this._AMP_SchooldID != value))
				{
					this.OnAMP_SchooldIDChanging(value);
					this.SendPropertyChanging();
					this._AMP_SchooldID = value;
					this.SendPropertyChanged("AMP_SchooldID");
					this.OnAMP_SchooldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_SAreaID", DbType="Int")]
		public System.Nullable<int> AMP_SAreaID
		{
			get
			{
				return this._AMP_SAreaID;
			}
			set
			{
				if ((this._AMP_SAreaID != value))
				{
					this.OnAMP_SAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AMP_SAreaID = value;
					this.SendPropertyChanged("AMP_SAreaID");
					this.OnAMP_SAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_BuildingID", DbType="Int")]
		public System.Nullable<int> AMP_BuildingID
		{
			get
			{
				return this._AMP_BuildingID;
			}
			set
			{
				if ((this._AMP_BuildingID != value))
				{
					this.OnAMP_BuildingIDChanging(value);
					this.SendPropertyChanging();
					this._AMP_BuildingID = value;
					this.SendPropertyChanged("AMP_BuildingID");
					this.OnAMP_BuildingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_RoomID", DbType="Int")]
		public System.Nullable<int> AMP_RoomID
		{
			get
			{
				return this._AMP_RoomID;
			}
			set
			{
				if ((this._AMP_RoomID != value))
				{
					this.OnAMP_RoomIDChanging(value);
					this.SendPropertyChanging();
					this._AMP_RoomID = value;
					this.SendPropertyChanged("AMP_RoomID");
					this.OnAMP_RoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_DepartID", DbType="Int")]
		public System.Nullable<int> AMP_DepartID
		{
			get
			{
				return this._AMP_DepartID;
			}
			set
			{
				if ((this._AMP_DepartID != value))
				{
					this.OnAMP_DepartIDChanging(value);
					this.SendPropertyChanging();
					this._AMP_DepartID = value;
					this.SendPropertyChanged("AMP_DepartID");
					this.OnAMP_DepartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_PowerType", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string AMP_PowerType
		{
			get
			{
				return this._AMP_PowerType;
			}
			set
			{
				if ((this._AMP_PowerType != value))
				{
					this.OnAMP_PowerTypeChanging(value);
					this.SendPropertyChanging();
					this._AMP_PowerType = value;
					this.SendPropertyChanged("AMP_PowerType");
					this.OnAMP_PowerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_PowerName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string AMP_PowerName
		{
			get
			{
				return this._AMP_PowerName;
			}
			set
			{
				if ((this._AMP_PowerName != value))
				{
					this.OnAMP_PowerNameChanging(value);
					this.SendPropertyChanging();
					this._AMP_PowerName = value;
					this.SendPropertyChanged("AMP_PowerName");
					this.OnAMP_PowerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Timespan", DbType="TinyInt NOT NULL")]
		public byte AMP_Timespan
		{
			get
			{
				return this._AMP_Timespan;
			}
			set
			{
				if ((this._AMP_Timespan != value))
				{
					this.OnAMP_TimespanChanging(value);
					this.SendPropertyChanging();
					this._AMP_Timespan = value;
					this.SendPropertyChanged("AMP_Timespan");
					this.OnAMP_TimespanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_ParentNo", DbType="Int")]
		public System.Nullable<int> AMP_ParentNo
		{
			get
			{
				return this._AMP_ParentNo;
			}
			set
			{
				if ((this._AMP_ParentNo != value))
				{
					this.OnAMP_ParentNoChanging(value);
					this.SendPropertyChanging();
					this._AMP_ParentNo = value;
					this.SendPropertyChanged("AMP_ParentNo");
					this.OnAMP_ParentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_OperationRule", DbType="VarChar(500)")]
		public string AMP_OperationRule
		{
			get
			{
				return this._AMP_OperationRule;
			}
			set
			{
				if ((this._AMP_OperationRule != value))
				{
					this.OnAMP_OperationRuleChanging(value);
					this.SendPropertyChanging();
					this._AMP_OperationRule = value;
					this.SendPropertyChanged("AMP_OperationRule");
					this.OnAMP_OperationRuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_OperationParameter", DbType="Float")]
		public System.Nullable<double> AMP_OperationParameter
		{
			get
			{
				return this._AMP_OperationParameter;
			}
			set
			{
				if ((this._AMP_OperationParameter != value))
				{
					this.OnAMP_OperationParameterChanging(value);
					this.SendPropertyChanging();
					this._AMP_OperationParameter = value;
					this.SendPropertyChanged("AMP_OperationParameter");
					this.OnAMP_OperationParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_State", DbType="Bit NOT NULL")]
		public bool AMP_State
		{
			get
			{
				return this._AMP_State;
			}
			set
			{
				if ((this._AMP_State != value))
				{
					this.OnAMP_StateChanging(value);
					this.SendPropertyChanging();
					this._AMP_State = value;
					this.SendPropertyChanged("AMP_State");
					this.OnAMP_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Encoding", DbType="VarChar(500)")]
		public string AMP_Encoding
		{
			get
			{
				return this._AMP_Encoding;
			}
			set
			{
				if ((this._AMP_Encoding != value))
				{
					this.OnAMP_EncodingChanging(value);
					this.SendPropertyChanging();
					this._AMP_Encoding = value;
					this.SendPropertyChanged("AMP_Encoding");
					this.OnAMP_EncodingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.setMessages")]
	public partial class setMessages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SE_MessageID;
		
		private string _SE_Value;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSE_MessageIDChanging(int value);
    partial void OnSE_MessageIDChanged();
    partial void OnSE_ValueChanging(string value);
    partial void OnSE_ValueChanged();
    #endregion
		
		public setMessages()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SE_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SE_MessageID
		{
			get
			{
				return this._SE_MessageID;
			}
			set
			{
				if ((this._SE_MessageID != value))
				{
					this.OnSE_MessageIDChanging(value);
					this.SendPropertyChanging();
					this._SE_MessageID = value;
					this.SendPropertyChanged("SE_MessageID");
					this.OnSE_MessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SE_Value", DbType="VarChar(50)")]
		public string SE_Value
		{
			get
			{
				return this._SE_Value;
			}
			set
			{
				if ((this._SE_Value != value))
				{
					this.OnSE_ValueChanging(value);
					this.SendPropertyChanging();
					this._SE_Value = value;
					this.SendPropertyChanged("SE_Value");
					this.OnSE_ValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UpdateInfo")]
	public partial class UpdateInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AI_No;
		
		private string _AI_Name;
		
		private System.DateTime _Start_Date;
		
		private System.DateTime _End_Date;
		
		private int _Parent_No;
		
		private bool _State;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAI_NoChanging(int value);
    partial void OnAI_NoChanged();
    partial void OnAI_NameChanging(string value);
    partial void OnAI_NameChanged();
    partial void OnStart_DateChanging(System.DateTime value);
    partial void OnStart_DateChanged();
    partial void OnEnd_DateChanging(System.DateTime value);
    partial void OnEnd_DateChanged();
    partial void OnParent_NoChanging(int value);
    partial void OnParent_NoChanged();
    partial void OnStateChanging(bool value);
    partial void OnStateChanged();
    #endregion
		
		public UpdateInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_No", DbType="Int NOT NULL")]
		public int AI_No
		{
			get
			{
				return this._AI_No;
			}
			set
			{
				if ((this._AI_No != value))
				{
					this.OnAI_NoChanging(value);
					this.SendPropertyChanging();
					this._AI_No = value;
					this.SendPropertyChanged("AI_No");
					this.OnAI_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Name", DbType="VarChar(500)")]
		public string AI_Name
		{
			get
			{
				return this._AI_Name;
			}
			set
			{
				if ((this._AI_Name != value))
				{
					this.OnAI_NameChanging(value);
					this.SendPropertyChanging();
					this._AI_Name = value;
					this.SendPropertyChanged("AI_Name");
					this.OnAI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Start_Date
		{
			get
			{
				return this._Start_Date;
			}
			set
			{
				if ((this._Start_Date != value))
				{
					this.OnStart_DateChanging(value);
					this.SendPropertyChanging();
					this._Start_Date = value;
					this.SendPropertyChanged("Start_Date");
					this.OnStart_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_End_Date", DbType="DateTime NOT NULL")]
		public System.DateTime End_Date
		{
			get
			{
				return this._End_Date;
			}
			set
			{
				if ((this._End_Date != value))
				{
					this.OnEnd_DateChanging(value);
					this.SendPropertyChanging();
					this._End_Date = value;
					this.SendPropertyChanged("End_Date");
					this.OnEnd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_No", DbType="Int NOT NULL")]
		public int Parent_No
		{
			get
			{
				return this._Parent_No;
			}
			set
			{
				if ((this._Parent_No != value))
				{
					this.OnParent_NoChanging(value);
					this.SendPropertyChanging();
					this._Parent_No = value;
					this.SendPropertyChanged("Parent_No");
					this.OnParent_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Bit NOT NULL")]
		public bool State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnnouncementInfo")]
	public partial class AnnouncementInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Content;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _DeadLine;
		
		private string _Author;
		
		private System.Nullable<int> _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnDeadLineChanging(System.DateTime value);
    partial void OnDeadLineChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnRemarkChanging(System.Nullable<int> value);
    partial void OnRemarkChanged();
    #endregion
		
		public AnnouncementInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeadLine", DbType="DateTime NOT NULL")]
		public System.DateTime DeadLine
		{
			get
			{
				return this._DeadLine;
			}
			set
			{
				if ((this._DeadLine != value))
				{
					this.OnDeadLineChanging(value);
					this.SendPropertyChanging();
					this._DeadLine = value;
					this.SendPropertyChanged("DeadLine");
					this.OnDeadLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="Int")]
		public System.Nullable<int> Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
